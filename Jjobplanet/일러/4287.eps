%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: 1411.i047.054.S.m004.c11.skyscrapers offices.eps
%%Creator: Adobe Illustrator(R) 17.0
%%For: ivan
%%CreationDate: 11/27/2014
%%BoundingBox: 0 0 406 450
%%HiResBoundingBox: 0 0 405.9990 450
%%CropBox: 0 0 405.9990 450
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 17.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 17.0.0 x256 R agm 4.7700 ct 5.3328%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.5-c014 79.151739, 2013/04/03-12:12:15        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Print</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:MetadataDate>2014-11-27T14:30:25+02:00</xmp:MetadataDate>
         <xmp:ModifyDate>2014-11-27T14:30:25+02:00</xmp:ModifyDate>
         <xmp:CreateDate>2014-11-27T14:30:24+02:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CC (Windows)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>232</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAADoAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FWi6KwUsAzfZBO5p4Yq3iqjFcpJPLEKVipvXrUV/D&#xA;FVbFXYq7FXYq7FXYq7FXYq7FUni8yaa+rmyE4LPSOJO/qozCQU+lcs8KVXWzV40Lq904yttdirsV&#xA;dirsVdirsVdiqyaeCEKZpFjDEKpchQWPQCvfFV+KuxV2KuxV2KuxVJfOOuXGh+XLzVLeNJJrZOaJ&#xA;JXifnQg4QLa8k+ED3gPEovzY8231x/o9vJPMtXVIiXKAmhoAjEDemBsRX/Kx/wAxP+WC9/4GT/qn&#xA;iqDm/NTzZYzg3FvLbzMOQWUshIJ60KA0qMVe1eRvMV15h8vQ6ndRpFNIaFIq8fsg/tEnvkpCmrFk&#xA;Mr8jSf5FtdirsVdirsVdirsVQ2pX0dhYzXkgrHAvN+2w6+OGMSTQRKQAs8g84jutHh1pNUM7copn&#xA;mMdNqyuDStPHM+8hhw8P4DraxCfHxciftemW04ntopwKCVFcDwDCua92apirsVdirsVdirsVUZry&#xA;3hfhI/FqVpQn9QxVjHmiH6/a3CRIJjVXgBHRhT4l5dD13xVEeT5pbTSTFqDMs/qswD1c8SBTcVxV&#xA;kcciSIHQ1U9D/t4quxV2KuxV2KsU/NL/AJQXVf8AjEclFoz8h/Wj97xTyasGl6S+vKvq3LyNaGKS&#xA;eK3i4Hi9eUtPiqv82AC2eSfCL/Ynn6Yu216KX1CIWt/XNoL219OptzJThXmRX9obftdMnWzR4h4/&#xA;h3juY/539HU9DfzKymG6s3S0WCK4huIWQsGJZog3xfvP5shIU34snEL/AGvY/wAm5BJ5Es3GwY1A&#xA;P+ouSn09zVp/4v6x/QzfIOS7FXYq7FXYq7FXYqk/nH/lFtU/5h3/AFZbg/vI+8NOp/u5f1T9zyW5&#xA;6Tf6yf8AJxc3MOn46Oin1+H3vZ9I/wCOVZf8YIv+IDNFLm9DHkEXgZOxV2KuxV2KuxVh/nRr0ahY&#xA;/VjIFIk9X0+VKek3Hlx/yumW463twNaZ3Hhvrde5jNnJrZaH1Guaerp3LkZPslW9ate38/45bIR8&#xA;urrsUs218XPF3+fF+37VFpde+oMQ916n1OUjeTl6n1yi/wCy9Pp7e2SqN9Of6GBln4P474D38+P7&#xA;6+x6pp/+8cXyP6zmG9GiMVdirsVdirFPzS/5QXVf+MRyUWjPyH9aP3sA8wFhocHAkGsfR4E/ZPe4&#xA;+D+OMeac/wBP9n6UrVpf0jD8TU+pj/dth1+rHt9v6R8Pf7OSaevw/o9ya+Vi50ubmST6rdXt5P2F&#xA;723wffv+GRk3YOX9n6GXfkp/5L+w/wA/2Fwz6e5hp/4v6x/QzvIOS7FXYq7FXYq7FUg82eY5NEjg&#xA;kWP1BLUEVA/aVe4P82X4MHiGrcfUajwhdWxHzD56uLrRNTtvRpSOZCSRvwj5+HfpmRHTGBjK+773&#xA;FnqxMSjXQj7GKC6juIZXTY8kDL3B9RczsZuvj9zr8gq/h97LbzzZGIEt57ZpBYwKUIcLUVCU6f5O&#xA;YEdGZUb5l2UtcIWK5BmXljV21O0lcpwEEnoqKg7BQa7AeOY2XFwGnKw5eME+ac5U3OxV2KuxV2Kv&#xA;M/Mum6lBrE7M6IlzI8kAJFSCS3h4YQCWEskY8zVpSsV21OM8R5FAKEbmX7A6ftdvHDwHuYDUYzyk&#xA;OnXv5fNrhc8Of1iLhxL8qinENwLdOnLb548B7l/M46viHz+H3vQvJNhe2mmym7ADTSckp/KABuNu&#xA;9ci3MhxV2KuxV2KsU/NL/lBdV/4xHJRaM/If1o/e888z1/w/BTryj/3z/Kf9/wDwfxxhzXUfT/Z+&#xA;lJ15/pSDw+oj/li/5ZD/ALP7vh/2OT6NH8Xw8u5OfJ3L9ET16+s3++P5F/5Z/g+/fIT5t+n+n+z9&#xA;DMvyU/8AJf2H+f7C4Z9Pcx0/8X9Y/oZ3kHJdirsVdirsVdirBvzR/wB5bT5n/k5HmfoPqP473W9o&#xA;/SPx1DAtS/3g1T/o5/5MZlz5D/N/3ThY/ql/nf7ljrXElvJJInUOgI7EGRRkMZqmeQXbJ72T1BcS&#xA;UpztEanzcnLcH0x9/wChq1H1S936XpH5ff8AHPvf+Yk/8m0zW6v6h7na6L6T7/1MpzFcx2KuxV2K&#xA;uxVhPnz/AI6Wnf8APb/ky+XYuRdZ2h9UP87/AHJYjp/27f8A4z6T/wARfL5f8U6nBzH9bD+lQb/j&#xA;mN/2z5v+o/Jdfj+hrP8Ad/8AJOX/AE0ex6f/ALxxfI/rOYD1qIxV2KuxV2KsU/NL/lBdV/4xHJRa&#xA;M/If1o/e898yxPJoMCqoY8ozQxwS/sn9m4IT+OMeac49P9n6UpW2l/ScLcFoLILX6vYdfqhH2uXM&#xA;f6o+Ht9nJXs0V6vh3R7k38oRPHpMysoUmZjQR28P7C/s2xKfSd/wyM+bdpxUf7P0Mx/JT/yX9h/n&#xA;+wuGfT3MdP8Axf1j+hneQcl2KuxV2KuxV2KsM/Mi7ura3tWt5WiYkglDQn44x/HM3RwEibF/guBr&#xA;8koxFGvwGCaxqN/NpmqRS3DvHxuF4MxIoIagffmVLFEAED+b97hxyzJkCdvV/uWIXf2Zv9eP/k4u&#xA;CPRM+rNG1XUorUpFcyIsdnGUUMQAa02+jDhwwIjY6/oY588xKVE8v0s58n61ElleC7uOU4mPBHbc&#xA;pxXpXtWuYOpiARXc7LSTMom+9P8AS9SglhhgeZXugoVgDUsVXdvppmM5SY4q7FXYq7FWE+fP+Olp&#xA;3/Pb/ky+XYuRdZ2h9UP87/cliOn/AG7f/jPpP/EXy+X/ABTqcHMf1sP6VBv+OY3/AGz5v+o/Jdfj&#xA;+hrP93/yTl/00ex6f/vHF8j+s5gPWojFXYq7FXYqxT80v+UF1X/jEclFoz8h/Wj97z/zEEOhQck5&#xA;jlHt6MM/7J/YnZE+mtcY805/p/B+9KlWL9JQ/ut/qY3+p2fT6qdufPkPDiBx/Z+zvkujT/F8O4dy&#xA;beUwg0qbgnAeq23ow2/7C/sQM6n51rkZ823B9P8AYPuZf+Sn/kv7D/P9hcM+nuY6f+L+sf0M7yDk&#xA;uxV2KuxV2KuxVg35o/7y2nzP/JyPM/QfUfx3ut7R+kfjqGBal/vBqn/Rz/yYzLnyH+b/ALpwsf1S&#xA;/wA7/csYu/szf68f/Jxcrj0bZ9WUz/3En/MFH/xI5dg+mPv/AENGo+qXu/S1qVzZQXEbztcLKDMU&#xA;MDKBQelXkGB332zGnd7VyH6XKhXDvfM8v81k3kPUdJu/MMH1Y3InETEpKyFacX3oN/pyrODwb1zb&#xA;tOY+Jtxcur0/MF2LsVdirsVYT58/46Wnf89v+TL5di5F1naH1Q/zv9yWI6f9u3/4z6T/AMRfL5f8&#xA;U6nBzH9bD+lQb/jmN/2z5v8AqPyXX4/oaz/d/wDJOX/TR7Hp/wDvHF8j+s5gPWojFXYq7FXYqxT8&#xA;0v8AlBdV/wCMRyUWjPyH9aP3vPPM8Rk8vwKEaT4ozxWBLk/ZP+65GjH01xhzXUD0/stJ1tj+lIG9&#xA;CTaxC8vqENP95CKc/VqD24Up+zWm+T6NFer4dw7k58nRGPSJ1MbR1mY8Xt0tT9hd+EbyA/OuRnzb&#xA;9OKj+ymZfkp/5L+w/wA/2Fxn09zHT/xf1j+hneQcl2KuxV2KsZ8z+cYNHvI7UT2iSmJ3kS5mWNgS&#xA;p9KgLL8JcbnBKOQ/TG2nJmETVhLZvzMsfRhMNzp/rcW+sB7qPjz4/Dxo3Tn+GDgzfzCw/Mx7x8wk&#xA;/mrzToWs2Vosmp2dvcRisgEwkXlyRjThzoPh2rmbozkjvKJcbVSjkiBxAMa1G50JrK+WPWLV3nEv&#xA;BQzV/ex8B1HbMqU5ED0np9htojjiCTxDe/tFMcmFjIHAv4ByZT9o/suG8PbIgyH8JZSjE36gyX6z&#xA;oMtvvrNojSWyRcWZqhgamtFyePJKIA4Ts15ccZEniG4UtU1u1hkVbDVrVkbmzkBW3bgF3dSduJyq&#xA;cTI2Yn8W3wkIihIdf0Ivyf5sgtfMdtcajq1stkqOslFRfi4PQ1VAepGVTxEjaJbseYA2ZCntNtcw&#xA;XVtFc27iSCdFkhkXoyOOSsPmDmIRRpzQQRYVMCXYq7FWC/mRqIsJLSb6vHO9WC+py+GqkGnEjqDl&#xA;+CPFbqe1c/hCJoS3PP3MAuPOsNlEJDp9uCpiaNQZKloARH+3+zXMg4vMumxa+ztCPTv/AIeXVJ/+&#xA;VjTGP0/0TacChiIrN9hn9Qj7f8++DgPe3/mY1XBHlXXld9/e+idP/wB44vkf1nMF6hEYq7FXYq7F&#xA;XnP5x+c9A0/RbvQLqdk1O8thLBEI3YFGZkB5gcRuhyyES4mpyxFA94P2vOtW86eUdS0uKza8CMhR&#xA;iZbWSZaqpH2fg8etcMYEMMuoxyFX9iBGv+TxeR3H1+P93b/V6fUZOX9wYahuWy/5NOm1e+HhLX4u&#xA;O7vp3eSP0Lzn5Q0qxktvrofnI0lYrWSFd1C/Zq+/w9a4JQJbMWoxwFX9jNvyN83aFPoVt5cjmY6r&#xA;DGZZIeDBQihFJ5049T44JxOydLliTIDqbeqZW5rsVdirsVYn558lxeYEgeG3g+tIaSXD/BIUA+Fe&#xA;agsQCemSEyNrYmESbIYVffk5qb2VwlusPrtE4h/euPjKnj28ceOXejw49wSjyt+SvmqD61+lkh+L&#xA;h6P74t05cvsg+2PEe9JgO5Pv+VPXn8sP/I1/6Y8cu9Hhx7g7/lT15/LD/wAjX/pjxy718OPcHf8A&#xA;Knrz+WH/AJGv/THjl3r4ce4O/wCVPXn8sP8AyNf+mPHLvXw49wVrP8opo7uCSaOB4UkVpUMjMCoY&#xA;FhQrQ1GPHLvXw49weowwwwQxwQRrFDEoSKJAFVVUUVVUbAAdBgJtkBS/Al2KuxVL76xnnn5pxpxA&#xA;3OKsH/MPyn+YWoR2I8q30dm0frfWyZTHy5IBF+y1eLb4qy2DR75YY1kZTIFAc1O7U37Yqm1rE0Vu&#xA;kbU5KN6fPFVXFXYq7FXYq8o/NT8tvNvmPzVa6xocttGkFktsTO9G5iSVjRSjrTjIMsjIVTiZsMjk&#xA;Egwofk7+c/qD/TdPKBSDvHUt6QUH+5/358Xy+7IW5HBv5LJPyY/OORQGu7AkODXmg+CjchtD1+zh&#xA;tjwGvNZ/ypP84PUU/W7DgEow5ru/pBa/3P8Av2rfL7sFsuHfyZZ+U/5W+e/LfnGXWNemtJbWS1kh&#xA;HoOWcMzIV+EIgpRd8kZbU0wxET4i9myDkuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVKtR8y&#xA;aPpcpXVb2CyRzSFpnCciAC1KnelclGBlyDCU4x5mkJP5x0ma3jm0q8gvFMoSRkJdQtDy3U0qNsZR&#xA;I5pjMS5NXH5heR7aZoLnXLOCdNniklVHWorurUIwjHI9EHLEcyq+T9dutb0uS7uVjV1neJRECFKq&#xA;AQfiLb75BmnmKuxV2KuxV2KqK3UTXclsCOaIjnf+csKfRwxVWxVRguoppZo1I5QOEbfrVFav/DUx&#xA;VWxV2KuxV2KuxV2KuxVD3+oWOn2kl5fTpbWsVPUnlYKi8mCipPixAxVjl9+aHkq04kanDcKSAxhk&#xA;RyK+wOKpxpfmby9q0zw6ZqNveSxrzdIZFcha0qQO1TiqZ4q7FXYq7FXYq7FXYq8c/PazubyfSba1&#xA;jMs8kk/CNepoiMfwGZmkkBZLga2JlwgL/LujwaTpkdtDzHL95IHIJDso5DYDwzHy5DKVlysOMQjQ&#xA;ed/mt5SdLka1Ywyy+t6j6jJUFIwgjWMgbUrvmRp8nQuNqcW/EHun5Wf8o0//ADEyf8RXMNzgzDFX&#xA;Yq7FXYqkvmbUzZ2yGO4MDqytIVUyNw5Co4qGO/TCATya8mSMBcuXz+5iiayY7gTm/f1gEd3+rzVI&#xA;JNf2O6soyfhSaDrsXef9LL9Sqvmi5CgNqchI4Fj9Wl6BCG/3X3ZgcfCkj8/i7z/pZfqUItbMDu8e&#xA;oOkhXg7C3m3Yxca/3f8AvwcsfCkv5/F3n/Sy/UzrR72O7skImE0sYCzHoQ1K7jam2VuWDYtG4pdi&#xA;rsVdirsVdirFvzNbj5Mu25BOM9keZ6Cl5Dud1/Xir5zjltvqFFN0qkH0kk5eop9GUf6R++Pw77V5&#xA;dRt2xV6h+Sk0cnmHUAhkJEc/P1K0JLW3xxVkk/dmlF2G4OKvZcVdirsVdirsVdirsVYJ5/0rS7qa&#xA;O8v55YFskuCpiAO0sPByQR2XcZZjmRsOtNWWAO56WwL6v5L9b/jq3nLw9Lb+9/5q2zJudcg4tQvm&#xA;VSy0Xyfqcdzp8Wp3j/WYZUesYUhSttyIJBFRRPvORnKQ3I/G7LHCB2BP4p6P+WSovl+dUJKLdyhS&#xA;epAC0zEc1luKuxV2KuxV5brM802k38krGWQzMCXHPYXBAG4foB4ZkYx6/wAdzp9XInTEnf1f774s&#xA;cmZuUnwL/cRf7rXwj/4qzJDpJk77fwjp7v6KmzP8f7tf7tP91L/k/wDFWFgSd9ug6e7+i6Vn/e/u&#xA;1/vB/upf8r/irELInfbr3e/+iyvy1c3Efnm0hSRkinjkE0YNFbjCGWo2Gx6ZgHq9bEn0e79D07IO&#xA;S7FXYq7FXYq7FWNfmQWHkvUSpYN+5oUQSN/fx9FPXFXgN+0/1myq0xIkNOVuqnp+yKfF8sVej/lA&#xA;0p8xXXMyn/Q2p6kIi/3bH0oN8VeuYq7FXYq7FXYq7FXYqwX8xf8AjnXn/GGb/k3k8f1D3sMv0n3P&#xA;HP8Aj5/z/wB/5sOn47nWdfx3px5K/wCOsf8AjFN/xCzynUfT+P6Tfpfq+f8AvXq/5Y/8o/N/zFy/&#xA;qXMJz2XYq7FXYq7FXll+yrpF8WIA9d9zt/x8HMiH1/judPqDWlP9Y/7opHNNDyf41/uYu48EzIAd&#xA;PKY33/hH6FMzQ/H+8X7C9x/k4aYmY336fqdJND+9/eL9sdx/lYgLKY336sh8v/8AKf2H+pN/yYzB&#xA;73qBzh7v0PUsg5TsVdirsVdirsVYx+ZfH/BOpcgCP3OzSGEf38f+7F3GKvn++9L6xZ0WOnqGtL2R&#xA;x07sfsfMYq9I/Jzh/iK74hB/obV4XL3H+7Y+zfZxV6/irsVdirsVdirsVdirBfzF/wCOdef8YZv+&#xA;TeTx/UPewy/Sfc8c/wCPn/P/AH/mw6fjudZ1/HenHkr/AI6x/wCMU3/ELPKdR9P4/pN+l+r5/wC9&#xA;er/lj/yj83/MXL+pcwnPZdirsVdirsVYT510zTLDRpVgHCSRw7hnPRpORO7x0+I+OXYjcnXa+Ajg&#xA;IHK/0+8fewab0eT/ABL/AHMX7Y8E/wCXjMofj8U6GVb/ANUdfd/TU29H4/iX7C/tj/J/5eMfx+Nm&#xA;Brf3d/u/puk9H978S/bH7Y/yv+XjEfj8Usq39/f/AMfen+XtC0N3ttWiHK/hUq7hyQrMgVgVqR9n&#xA;MEnm9bjiCInuDJMi2uxV2KuxV2KuxVjP5lV/wVqNK1/c9IzKf7+P9gdcVeAXxb6zZ7v/AHhpW0ZO&#xA;3Zf2/lir0T8pJ44devJJ34RrZtVpIDbj+9j7n7WKvWrK/sr6Iy2c8dxGrFGeNgwDDcqadDv0xVXx&#xA;V2KuxV2KuxV2KsF/MX/jnXn/ABhm/wCTeTx/UPewy/Sfc8c/4+f8/wDf+bDp+O51nX8d6ceSv+Os&#xA;f+MU3/ELPKdR9P4/pN+l+r5/716v+WP/ACj83/MXL+pcwnPZdirsVdirsVeYatc3E2mX0sspMpmY&#xA;c2bjss5AFSydAKdcvgPW6nVTJ0xJO9/773hj80kvJ/33+6Yv92jwT/i7MkD8fgOmlI77/wAI6+7+&#xA;mpmSX4/34+wv+7h/k/8AF+Nfj8BgZHffp/O939N0kkv739+Ptj/dw/yv+L8QPx+AspHffr/O/wCP&#xA;sn8tXd1H54toElZYbiOT14wfhfhCGWvWtD0zCI5vUxkfQPL9D0zIOS7FXYq7FXYq7FWNef8AjPob&#xA;6c3JBekD1UYqyek6ybcaHelOuKvK7jyLFLLA4v5gIm5EM0jE7U+EmT4fmMVRltoN/p7O+nX5VpV9&#xA;OYXAeYFeQag5Pt8Sjpk4GI5i2vIJH6TSL0k+c9JheCw1aCGGSQzPH9WDAuQATViT0Ud8sE8f80/N&#xA;qMMv84fJPLXzX51ioJp7CcdybeVW+9ZafhkSYdx+f7GYGTvHy/anuk+br24uora5to6ysEEkbsKV&#xA;P8rA/rys10bBfVlOBk7FXYq7FWC/mL/xzrz/AIwzf8m8nj+oe9hl+k+545/x8/5/7/zYdPx3Os6/&#xA;jvTjyV/x1j/xim/4hZ5TqPp/H9Jv0v1fP/evV/yx/wCUfm/5i5f1LmE57LsVdirsVdiry29kCaTe&#xA;sW40nfcGn/Hwe4eP/iWZER6/x3OozyrTH+sf90fMfekst2vJ/wB639zEftt3Cf8ALx/n45eI/j8B&#xA;1MsvPfoOvu/prDeL8f71vsL+23+T/wAvOHh/H4DA5fPp3+7+m6S8X97+9bZx+23v/wAvOIj+PwFl&#xA;l579e/8A4+nvl818/wBgfFJv+THzOYXe9MOcPd+h6lkHKdirsVdirsVdirE/zSlWDyTfXJUkwSWz&#xA;VT7fH61EHCnb7S1HXFXz8uu3wjVXu7l5AP3sno8fV+FxQKJT6W7LuK9MVWSa3qbQ8Y764jm+LhMY&#xA;eQjBEfFShlAlpxf4iV+1iqquv3QuOZmuTb+oGFtxNQvrcyfV9Sp/d/DxpT3xVSGt6kIWVr24aWnx&#xA;S+lx5/AwACiU+l8RU1WvTFXoH5LXtxe+cLoTzSTxLZzSQxyx8RH+9gCivN+bL8Xx7HfFXuGKuxV2&#xA;KuxV82/mP5p853vn7XdAtNctLKyt3WO3tLoQIXSSAM4RjEztTeu+2ZEREAGnEmZSkQDsw5IfMjlX&#xA;TzLpTF4nnUiaPeKNmLuP3X2VZGqfbLfFDT4B7wr2cnm7T5JJ7fzPpUTxwCaRzLEeMExiRXPKIjix&#xA;EQB+XjglkEtiGUcUo7gh7f8A84+alqGoeSruW+nFxMmpTxiVQoUgRxHbgFBFScx8sQDs5OGRI3em&#xA;5W3OxV2KuxVgvny20nQPLk94YZZo2lBkjWXgxMkldmoafE2W4yTJwNXCEMJBvhvv82GWPmf8u7mz&#xA;Se7vZ7SeRXjkt+UsnAwKGYclWlQnFj88nKcgacbFpcOSPF6hfn3Kb+afy7ecRWd7Pc8+MVecqfHw&#xA;MgX4l/kjrXB4smz+T8PfL5lKbz8wvIi8BafWLuSYq5Rbh0orAlWqU6HJQnIuPqNNhgLHEf8AOex6&#xA;B5c0lnsddRZFuzFySr1UCROJqKb/AA5QTzdvCIIie4MkyLa7FXYq7FXYq7FVC+sbW/tXtLuP1beS&#xA;nNKkV4kMN1IPUYqlP+BvKv8Aywj/AJGS/wDNeKu/wN5V/wCWEf8AIyX/AJrxV3+BvKv/ACwj/kZL&#xA;/wA14q7/AAN5V/5YR/yMl/5rxVF6Z5b0XTJ2nsbb0ZWUxs3N2+EkGlGYjqoxVMsVdirsVdirF9V/&#xA;LDyHqurnWL/SIptTYlmuuUiOSVCGvBlB+EUyXGaphwC7QSfkx+WMYUJoUShInt1pJPtFIWLp/edG&#xA;MjffjxlPAG3/ACZ/LN0kRtDiKzQpbSD1Z/ihiZGRD+86KYlI+WPGV4AyHy95Z0Ly7YHT9Fs0srMu&#xA;ZTChYguQFLVYseijASTzTGIHJM8CXYq7FXYqkXnO78qWuj8/M/H9GPIqHmkkgMhqyikQZv2cnjjI&#xA;n082nPwcPr5MBOp/849lClIQhZnKiC+ALOoRjsndQBlxwZT0+5ojlwRFD9KnFef846xOHiSFGDBw&#xA;RDfbMFKA/Z/lYj5YPy+Tu+5l+Yw9/wB6Gkvf+cZ7MCR4bdKgRg/Vr5th0H2DsMBxZIo48MvwXsGn&#xA;fU/qFt9SAFmYkNuACB6ZUFaA7jbKC5Y5bIjFLsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdi&#xA;rsVdirsVdirsVdirsVeZf85DSyRfl6ZI24ul3EVYdvgkGZOlNSPucTWC4j3vmx9TvgJf3x2M1Nh+&#xA;yqU7dq5sOM/e6vgDc2pXwElJSKNLTYdo1I7eOJmVEAhNSuZ57Y+q5fhMAtewKA5XORLZCID7a8vf&#xA;8cDTP+YSD/k2uauXN3UeQTDAl2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2&#xA;KuxV2KvMP+ci/wDyXL/8xcX/ABF8yNN9R9zi6v6R73zI/Sb53H/EUzOP63Wj9S6fpJ/rTf8AJpcJ&#xA;QFG8/wB5X/4zD/k2MhJnF9veXv8AjgaZ/wAwkH/Jtc1kubuY8gmGBLsVdirsVdirsVYf+ZP5k2Pk&#xA;Wxs7u7s5bxbyVolWJlUqVXlU8sqy5eBvwYDkNB5rD/zkj5ct5prmOy1CSe5A9ZJBCEUqCAUpIele&#xA;nfKvzUe5v/IT7w6D/nI/y1apJHBZ6jItw7SStKIaqzUqU/eHag6bY/mo9xX8hPvCO8uf85DeXTfW&#xA;OjWun30yXU0dvFLcGJWRppKVbiz8hV8I1IJqkHQyAJJD2zMlwnYq7FXYq7FXE0BPhirCvNSecb28&#xA;hk0HU00+2WPjLE6hiz8ieX2H7UzHzQyE+k05mnyYYj1x4ixqfRfzjaUtF5pgRDSilB4f8YcgMeX+&#xA;c2Szae9oH8fF6ToMt5+jbW3vpPXvoYIlu7gbCSVUAkcCg+01T0zKjdbuDIgk1yTHCxdirsVdirsV&#xA;eYf85F/+S5f/AJi4v+IvmRpvqPucXV/SPe+ZH6TfO4/4imZx/W60fqXT9JP9ab/k0uEoCjef7yv/&#xA;AMZh/wAmxkJM4vt7y9/xwNM/5hIP+Ta5rJc3cx5BMMCXYq7FXYq7FXYq+Wf+cjtT1KTz1Jp0lxO1&#xA;hbxwyQWz/wBwrvGOTR+575r9STxU7fRRHBbAdEs7ee1dpInkYOQCiB9qDxzDkadjCNhMP0XZf8s0&#xA;v/IlcjxFnwDuPyYpaX0sOoK8TtFcQy84JE2ZWRqqV/ygRtmRVbuJxXYL7d/Lq8u73yLod3eSyz3U&#xA;9pG800/94zEbls2eM3EOkzACZAZFk2p2KuxVSuxW1l9lJ+7fFXjl5+cqW13Pb/oe4f0ZGj5gNQ8W&#xA;IqPh9syRg83ST7WIkRwx2/pfsef+bfN95c6+blbi7tILmNJBBHHz4cx7j78nj22cXWHxCJbWR3oQ&#xA;apfMAV1HUCDuCLfb9WWuv28v9MXuv5KTSzeUJHllmmf63KOc6cHpwTanhmJn+p6Lsr+6+PvZ9lLs&#xA;3Yq7FXYq7FXmH/ORf/kuX/5i4v8AiL5kab6j7nF1f0j3vmR+k3zuP+Ipmcf1utH6l0/ST/Wm/wCT&#xA;S4SgKN5/vK//ABmH/JsZCTOL7e8vf8cDTP8AmEg/5NrmslzdzHkEwwJdirsVdirsVdir5P8A+cil&#xA;A/Mq7PEAmC3qwepP7odV/ZzXan6ncaL6GH+X1DWj1QN+8PWTh+yMw583Y4xsmnpr/vpf+R39uRtn&#xA;X4t58/8Avc3/ABlO1f8AK8czBydeeb7k/K0Afl35eAAUfUotg3MdP5sz8X0h1Gf6yynLGp2KuxVT&#xA;uv8AeaX/AFG/Vir5T1iGY6tekW94R9Yl3W6UD7Z6DtmxiDTxuaUeM8uZ6JR5kj/0u35QXJItoq0n&#xA;G23c8hU++Vjq5kiKjy+kdELZXZhpG8F2Yz0pchaf8MckCWicYnfb5Pevy28xaZofk+2W6uDam6mm&#xA;lCTuZmJDBD8S8tqAZRkhKUtna6LU4sWIcRqyehZTD+YOhzSpDFqETSSMERQrbsxoB0ys4Zdzlx7R&#xA;wE0Jfey2PkY1L/aoOXz75W5reKuxV2KvMv8AnIeN5Py9Mcalna7iCqNyfgkOZOmFyPucTWGoj3vm&#xA;p7C9/e/uW3M9NvFUp99Mz+E/e6zjH3NzWF4RJSFjVpabeMagYmJUSCF1GCaG2PqoU5TArXuAgyEw&#xA;QzgQX235e/44Gmf8wkH/ACbXNXLm7qPIJhgS7FXYq7FXYq7FXyf/AM5FFf8AlZV2AVJEFvUBCGH7&#xA;ofaanxZrtT9TuNF9DD/L5UWknIoP3h+2hf8AZHgDmHPm7HHyTTlH/PD/AMiT/TIs7Hl8nnz/AO9z&#xA;dP709tvteGZg5OvPN9yflaQfy78vUKkfUot1XiOnhtmfi+kOoz/WWU5Y1OxV2Kqd1/vNL/qN+rFX&#xA;yZrKWf6YvqxaeT9YlqWmcN9s9ffNhEbPH5pHjP1cz3JV5kNoLu2Bisz/AKLFSshpSn7NQdsrA5uZ&#xA;KRqPP6QlHOz/AN82X/Iw/wBMNMOI+f2M0m+qt5M8vFo7Ijle8RJKwUfvV+yRSvvjAblGpl6I8+vc&#xA;7ytHZN5m0hfS0/e9tx8Erlv71fsg9T4ZKY2LTppXkj9X1Du73sj/AJzeVEdka+fkpIP2Oo2/mzG8&#xA;A+Tuz2tjHSXyeh6dP9YsILgNyWZBIrHurjkv4HKS7KJsWiMUuxVJ/NWl+WtS0wW/mL0/0eJFcetM&#xA;0C+oAQvxq0ZrQnauWY5SB9PNryxjIVLk+d/zx0by5pNzpKeTSipNHMbs20zXQ5KU4cuTS8epzLx5&#xA;Mh5uBlx4wRwvJTe+ZASP32220df+Ncs45MPDiuM+pSwN9d57Ovp8149mrTYYDInmpiByfaOhecfK&#xA;MeiafHJrmnpIltCro11CGDCMAggtsRmvMTbs4yFc2R29xb3MEdxbypNBKoaKWNg6Mp6FWFQRkWap&#xA;irsVdirsVdir5R/5yLD/APKx7kn1OJgt+PKnD+7H2M12p+t3Gi/u2IeXBIbOTh6v94a+mRT7I61z&#xA;Dnzdljuuqbcbj/l5+9cht5M6Pm86ev149a+qenX7WZvR1x5vuX8rww/Lzy/y58vqUVfU+19nvTM/&#xA;F9IdRn+s+9k+WNTsVdiqndf7zS/6jfqxV8mazdaeNYvgZ7IEXEtQ1mzGvM9Tx3zYR5PH5R6zseZ6&#xA;/tSnzJc6eLu25S2u9rCQTasQRTt0oPbKx1cyQ2jsfpHX9qU/WtM/37af9Ij/ANcLCvI/P9rNJrmw&#xA;Hkzy8TNaKha94l7VmBpKteK0PH3xhzKNSPRHY9ev7XeVLqwbzRo4WeyLG+tgoS0ZWJ9Zfstx2Pvk&#xA;p/SWnTD97HY/UOvn70Bd3enfWpq3FjXm3WzYnqf8nJBqkNzsfn+19X+XyDoOmkEEG1goQKD+7XoO&#xA;2a+XN6/F9A9yPwNjsVeYf85FEj8umINCLuKhH+q+ZGm+o+5xdX9I975meSSkvxHrP38FTM8n9LrA&#xA;P0NzSPST4j9qXv4RriSoCjesxtWqSaTClf8AUyE2cUguf96Zf9dv15U5L7i/Kn/yWvln/tnW/wDy&#xA;bGYU+Zc7H9IZVkWbsVdirsVdir5O/wCciVjH5l3ZAQOYLfkVYlj+6H2lOwzXan6ncaL6GIaAsRtH&#xA;5iM/vDTm5X9keGYk+bsIVSZBLU9FgPylbIbs6Hl82APT663Snqn5fazMHJwDzfcn5WBB+XXl4IFC&#xA;/UoqBCWXp4nM/F9IdRn+sspyxqdirsVU7r/eaX/Ub9WKvlbV7m9GrXoDapQTy04QIV+2eh8M2Mbr&#xA;q8Zm4eM7R5nqk/mS6uFu7f8A3vJNtESREla0/aqDv45WOrmyqo/T9ISn65ceGof8iY/+acLDb+iz&#xA;R7i6/wAG6AyHUAS15X04ULbSr9sbAe2MOZRqa4IfT1XeV7i8PmbSAzanxN7bg+pAgSnqr9ojovjk&#xA;p3wlp0vD4sfp+ofegLq5vfrM3xar9tukCU69skL82qXDZ2j8/wBj6m0Ek6HpxNa/VYa8hRv7sdR4&#xA;5rpc3scX0D3BHYGx2KvMv+ch45JPy9Mcal5Gu4gqKCSfgkOwGZOmFyPucTWECI975plsb1RKWgkA&#xA;JnoSp35KlO3ftmeYnu73WCQ7+5uWxvG9VVgkLBpdgpJ3jUDt3xMT3KJDvQ2o288NsfWjaPlMCvIE&#xA;VAQdK5CYIZwILHrn/emX/Xb9eUuU+4vyp/8AJa+Wf+2db/8AJsZhT5lzsf0hlWRZuxV2KuxV2KsH&#xA;84/k55N82aodU1RbhLxlVHeCQJyCCi1BVu2UzwRkbLkYtTKAoJLH/wA45+Qol4xT6gi1rQTRHf6Y&#xA;jlZ0kfNuGvmOgUrX/nGzyFbKwjutSo55Gs0J/wCZOE6WJ6lEddMdB+PioL/zi9+XAmEpn1JiG5lT&#xA;PFQ71oaQjbJfl4sPzkvJ6lo+lWekaXa6ZZKUtLONYYFJqQqigqcuiKFOPKRkbKMwsXYq7FVskayR&#xA;tG32XBU02NCKYqkh8keXWJZrYEnck0qT92S4z3tJ0+P+bH5BBXH5Z+VLiYyyQvyNNg9AABTYUx4j&#xA;3p8GH80fJS/5VX5Q/wB8Sf8AB/2Y8R718CH80fJHW/kLy5BbpAsLNFGSUDnlTkamlRjxHvU4MZ5x&#xA;HyVF8k+XkYMlvxZTVWFAQR0INMeM96Bp8Y3EY/INHyR5cJqbYV+j+mPGe9fy2P8Amx+QTyONI40j&#xA;QURAFUeAAoMi3ALsVdiqU+ZvLGleZNOGn6mrtbCRZQI24HkoIG4/1snjyGBsNeTGJiiwy/8A+cf/&#xA;AMv72D0XW7jFa8kn36EU+JWHfLTqpnm0jRwHJqD/AJx9/L6G7muVW7Z5vtK0/wAI+VFB+84jUz5q&#xA;dJAilS6/IL8vblVWWK64qagCcjf7sEtTIpjpIBAt/wA41flgzFmhuyzGpP1hup+jI+LJs8GL0fRN&#xA;HstG0iz0mxDCzsYkggDnkwRBQVPfKybbAKFI3Al2KuxV2KrJp44UDyGillUH3YgD9eKueaNJY4mN&#xA;HlrwHjxFTiq7mgcIWHMioWu9PlireKpfe6uttqVpZmN2+sV5SAVVew5Gu2+TELBNsJTogUd0wyDN&#xA;B32r2VjNBFcsVNw4jjIUkcmrxBp40xVRvvMmi2N39SubuNL4p6iWnIeq6b/Eq9SNjkuE1fRiZi66&#xA;pB5j/MnSbLSdQudIki1K7sAPUhVvhVzKsRR+PxBgX+zTHhKDMdO9jEv5nebvq5H1SwM6RCcwLJOZ&#xA;zQ19Ogj4mTkOPDrgpPGLpIPN358eZdNXSJrK1thHqFit1Ijhno5lkjPE1G1IxmViwxMbLhZdTISo&#xA;Jf5f/P8A85an5l0TTJILRINQv7a2nIjbl6c0qo3H4tjRtjksmCIFhGPUzMgDT6HzCdg4kAEnoN8V&#xA;SWTzn5YjWV31GER27Ml1LyHCFk6rI3RTkuA9zDjj38kbpmsadqVml5ZzLJbSsVhlBHGShpVDXcHt&#xA;kSKZA2ip5o4ImlkPFF6k+5pil0k8cbxo5o0rcUHvQn+GKr8VdiriaCuKse1zzhbWWh6vqFonr3Gk&#xA;oGkgkDIDyNF+KnQ4QGMpUGEJ+Z3m6e0Umz0+N5o2kETyzLKo2+E0TirfEAATXGl4hdMr8nefINX8&#xA;uxapqoj06R5pLfgzEAvGaU+Kh5e2ERJ5MJZox+o1vSVfmj5x0xPI+rQ2N6E1Qwc4YlIEqhGDcyv8&#xA;vwdcFHmy443w3u+ah5481cof9yEnxD4um+3ywM30L/zjtfXl75Lv57uZ55Tqk3xOxYgGCA0Fegqe&#xA;mKst8z+c7DSrJZY7u3jlaQRhp1kkUHwKxfFXbExkfp5sDnxQ3mdvJT8lebm15rqOS4triWDiwNrH&#xA;PGFVthy9fqajtjwSH1IhqcWQ/uyTSR+d9UuJL9IzxVIZHjUcQ1QOBqaq3c5figDzddrtVOFcJrc/&#xA;o8ix+LUbnnGBIKMwBHBN6k/5HtlhxRrk4UNflMgOLr3D9TGL/XrtNSluHn+OKVpyOVNlarKN9uWY&#xA;h2ehgb+bKdJ/P1tUu4LW20m4DXH93K/pKtApfmfjPhSn0+2Y+PUCcuEDdzc2jOOBnI7BGan5h/Se&#xA;v6ddOotpeEBntlf1AtJ2/aovLb2zcYcZGMiQ33+50OfIDliYm47fe9F03XrPUYJ5bWsht/tIAanr&#xA;SlQOvHMKeOUebnQyxnyLzybUr+QzcrifeXnHVAfTG3w7ntkuIdzhnDk3/edfklvmG4t7W6tNXuLp&#xA;kvJbMwK725lYLFOxJ/vY6V9Sn8csh6hVbWzPook2a5/goa2tdPkt727hIlGoNam6Bi9NWdb2BCSp&#xA;eQfEtAflXvlc9jTZHcX3lKh9f/xC32/T+ur8uP1g/wAMejXvx/H9LDvzahihv9KhhRY4o7SRI41A&#xA;Cqq3tyAAB0AGZWD6XFzfUfx1KQ+R/wDlOvK//bWsf+ohMnl+krh+oe99N+bvzOg0TzBHoVtaPe3v&#xA;piWRYyooSCwjPPiBVBy5An5ZrXbpUn5xLDqVnY6lp8tsL1xEskhjAAZgDIeDSH4eQHH8cVY3rN3p&#xA;djd6np5uOMUk0rXERtTJVpnJerestevtmXGBlR/S4UpiNj9H7UivQ2lXMWnW9yfq1sVijUkrtGCa&#xA;lSx8PfMWRs25kRQp6DqWrXTaRpUXIAQW1sqsAGLepao7EkhvHLccAebrtbqJwHpNb19lpKb+Ympc&#xA;Ejf+7T+U/wDFeXeFHudb+fy/zvsH6mdnzlHYeW5rzU7iCC6gRmq1WHpj7DukdX6dQuYnCTyeiEwO&#xA;aA8m/mZZ6/rf6OW+tLlpI2aGO2gu4n+DclmmHClMPhzG8lGWEjUU687Xlxb6fCsJkRpJDWaMVC0U&#xA;7H51r9GMTu154kxoHhefatcXU9q8cs0jwyoqTwsgAl+Ibsa5ZxCjs4nhTEokzsbbd+7H78Xg1O4C&#xA;BhGJyFA6cecPT6K5Ecmyd8R9/wCplDQ2dr5UmlqLeK31WWReMfMc34g/AGTqXPfDA9O8I1EAfUf4&#xA;ZA/YB+liXm6WzvvL2q3azmW4t7VowfR9L4ZVckE+o9fseGCQoUywSE5cXUDu7/j5PFB9q3+R/Vlb&#xA;mPpr/nGr/lBb7/tqS/8AUPBiryPzgiDWNbPBK/XpTX6rIxr6z9wfi+eZg5B5w/XP3/pT78sfO48r&#xA;2OqXoshcSO9rb/u4pLc0YTPU1SXl9jwyMo8WzZp83ggyq7rr72d6vqlvqtpp2orE0U12GnmjJ5BT&#xA;IEIA2jPSnUdccQokLrpiUYS77/R7kth4erD8JpzX9Z/ystPIuBjrij7x+ObFNXcfWrz0i6x8JuI9&#xA;ZV25eFPwzAlyetx107/0pB5Jgkt9d02K5iaKVUPOJgyOP3J6hht92a/QAjPH4/c7ntOQOllXl94Z&#xA;nqcnDzBYPFVNoBuaneVq9hnSzvf8dHjoVt+Or0XyZrWl6etys8qwGZ0oJXFSqluTDZfs8hlGqjIk&#xA;Vu5GjnEA3sxmf/pZ/wDMU3/GuI6e500/4/6/6ks8+f8AHN0v/mHm/wCTy44fqLtB/cx9x+9W0T/j&#xA;in/Xt/8AqPgyjN9RczF9I96ViCb/ABEzcxx+uqach0+sk9PlkejXR4/j+lK/zV8s3s9jb+YSyppt&#xA;oklvM9VL82vp6Uj5Bz/eDoMycMhVFoywkSSOX7WCeSbnTj548smK55lNVsi/JCgCi4SpJOTyEGJp&#xA;GKJEhfe9Z82yxyfnVNJC4dSkdHjIO/1OnXpmudskP5gs58y+XORP993p/vyPwxVG+cv+Ui1T/jL/&#xA;AMbHNhh+kOsz/UV/mBmGsGjMP3zdJVT9hux6fPNe7Nm+rNZnSNKERdrj6vbG5qwYV+qoFoQVr8I3&#xA;Pjl+F1HaQFD+t+hI/g3+E9B4/wAp/wArMl0234/tea/mgts3n2+aONeBsTx5wNI1PqZ2LrQHKsf0&#xA;PR5PrS/8qPM0XljWb7XjZrdyafZM8caQyW7EzTwwH4ysnaU7cclIcQpjA8Jt7pa/mHY+b/KMU9zJ&#xA;b6XeTzv9Wsp7hRI6RqyclDrExLOSAOP05UIcMu9GqPiYug+KSXv99a/8YR/xIZbL6S6fB/f4/clm&#xA;owynVbkhhQzkgch05w/0OYw5O7mDxH3/AKmS6x/yg19/20z/AMSjxhzC6n6Je8f71ilnp0WpafqV&#xA;hNcR2kV0sUT3MziOONWEoLM5BCgeOSy9GvQc5fD9Ly3WrTR9K1WWxCXF6to7xJdWskckMoU05owT&#xA;dT1GUuxe5/8AOPHmXy3Z+V7jTrrUrWzv7vVHNpYXM8Udy4khgSMLGxVmLMOIoNzirz7zhpWpnU9Y&#xA;kFpJ6ct7KYn9WdQwMrEEUWnTwzLsUHnjjlxz2PP9KD0bSdUbRL+NbSRpDc2rBBNOx4rHcAn7NduQ&#xA;wgi2OTHLg5HmOnveiWstulrpdhdyLZziGNENzzCuwhjZlRijVK8gDWhrkRKrLZLCcgjHkR3+4eRa&#xA;l1DRLaWAPqVqeciLHwLtyLUYcf3W+0inD4oOyPyMoESJjsR+PpS+4l0yK4ntLrS2uZVkkhknVJqM&#xA;Gc1IPAD6eX05iu9AIHzU573yzZ6hDcS2Vwt/OSsDn1HdnOxpzk4/t98sxGpgng+W/wDuWifGYGPq&#xA;r+tt8rpSvpZJ9StrlLO69OER8g0aAng5Y0pIfHMuWaJvcfb+pxo4Jitj9n60bPrV0vA2dpeKy8ix&#xA;I9PrSn93Lv8ATjPLCRux+PgnHhnEVR+z9aPu5dWMlvDFY0uNckkms4ZpUR2EaiRunIL8Arucq44i&#xA;t3Blo8xlL07SN8wxzzx5ib14tGmtlivtNiWG6Vrq1Uepc8JkC85UYijUrTrhxyAN97neFLgEa3CG&#xA;sPP9haWQtJbcl2MbBo57aRf3V0krVKSsB/dFd++V5BZttEjEAVvaCHm/SP0ob4c2DTi5CBoDsJTL&#xA;Sol8MhYY8Mrujz8vf3pH5916HXLu3ubaN40tI5IZuZU0ZriWbqpI+zMB88y8A9LjZT6zbENRST6k&#xA;JDUxnYN1FaHLJDZjDmyz8ogTq1mAK/HN1r/vp/DfMDNzdpg+lkv5gXts+seXryFllgEjsHjqQfTl&#xA;QMAW9xTKg2k0h9c82W+pajd38UKRw3Ll1D3dkGFB6hDD1tiF3zOhMRADr8kDIksjTzHpGocbs6O0&#xA;vN2PqVMtCGZD8UKyxt36McwiKLnxNi25NWsGIP6NuzsBQS3qgcahVoFGyjYeAyccshy+4NWTTQn9&#xA;Qv4lfBr+kxRSNdQHTY12Ety07896AKHjbcjfJwykndwtXo4CFxAH4+LF/wAzdA1hPO9+62kksKWh&#xA;jM6POIy31UrQcV4/aNMsxkcDfkB42I+XtE1k2mtxixmMkliqxoJbhixF7bMQPhr9lSdskCLDEg0U&#xA;/wBK8va8155WQadPyjdhIC84Ck3LEcuS06GvxZLiG7TkxylGgN6LM9a1u6s4vr09oDZWty2mSSJM&#xA;hYTxguykNx6cOtaZUZgggOJj0uSE4ykKrbmEiu/N+lS3ctzxkCySGTjygNPiRqbS/wDFJyoEOylG&#xA;RN0fs/X5JndfmZZahoNxo9jYSzXMt4bgsZ7WNFXlHRSZJUqx8BjEbgsc07jKJ2JI5/Bj995hn/Q1&#xA;/Zy6e0Z1CNY4ZBc2cgB4ygVWOZ2oa9aYcm6NJUSdwbr9LBxpt360EdE5qDVfUjqNq/zZS7FFeUEZ&#xA;PzP8sI2zLqtgDuDuLpB1GKv/2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:InstanceID>xmp.iid:3775f1f7-03aa-2e44-9a0b-8135abefc63c</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:3775f1f7-03aa-2e44-9a0b-8135abefc63c</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:F9B7212B7A75E411824193FB0F21CAE3</stRef:instanceID>
            <stRef:documentID>xmp.did:F9B7212B7A75E411824193FB0F21CAE3</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:100467F6FD3EE41197F1A33494C67971</stEvt:instanceID>
                  <stEvt:when>2014-09-18T14:35:20+08:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:8F19ECA11165E4119608DD210AC40568</stEvt:instanceID>
                  <stEvt:when>2014-11-06T03:03:54+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:5C44D79A9C65E411A96AA480ABF7AF9E</stEvt:instanceID>
                  <stEvt:when>2014-11-06T17:06:41+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:2BE28674DA65E411B2FE82169D315517</stEvt:instanceID>
                  <stEvt:when>2014-11-07T01:11:24+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:6ECE586DE667E411B44F8729E2E8F05B</stEvt:instanceID>
                  <stEvt:when>2014-11-09T15:00:10+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:6EFA2CF8F367E411809283F9C429431E</stEvt:instanceID>
                  <stEvt:when>2014-11-09T16:37:06+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:7EC6D8A91F68E41185E8A3EC3F5703B9</stEvt:instanceID>
                  <stEvt:when>2014-11-10T01:00:40+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:E4D1E30A6369E411AFD98CA0F4151396</stEvt:instanceID>
                  <stEvt:when>2014-11-11T12:24:43+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F9B7212B7A75E411824193FB0F21CAE3</stEvt:instanceID>
                  <stEvt:when>2014-11-26T21:40:29+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:3775f1f7-03aa-2e44-9a0b-8135abefc63c</stEvt:instanceID>
                  <stEvt:when>2014-11-27T14:30:25+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>405.999000</stDim:w>
            <stDim:h>449.999996</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -450 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 450 li
405.999 450 li
405.999 0 li
cp
clp
405.999 449.972 mo
0 449.972 li
0 0 li
405.999 0 li
405.999 449.972 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
1 1 1 rgb
f
227.931 135.684 mo
187.821 135.684 li
187.821 39.0459 li
227.931 39.0459 li
227.931 135.684 li
cp
.890196 .890196 .890196 rgb
f
211.108 129.503 mo
204.644 129.503 li
204.644 135.749 li
211.108 135.749 li
211.108 129.503 li
cp
.227451 .227451 .227451 rgb
f
208.298 135.749 mo
207.455 135.749 li
207.455 129.503 li
208.298 129.503 li
208.298 135.749 li
cp
.564706 .564706 .564706 rgb
f
193.384 67.9546 mo
190.757 67.9546 li
190.757 115.376 li
193.384 115.376 li
193.384 67.9546 li
cp
.247059 .717647 .713726 rgb
f
198.638 67.9546 mo
196.011 67.9546 li
196.011 115.376 li
198.638 115.376 li
198.638 67.9546 li
cp
f
203.891 67.9546 mo
201.263 67.9546 li
201.263 115.376 li
203.891 115.376 li
203.891 67.9546 li
cp
f
209.144 67.9546 mo
206.518 67.9546 li
206.518 115.376 li
209.144 115.376 li
209.144 67.9546 li
cp
f
214.398 67.9546 mo
211.771 67.9546 li
211.771 115.376 li
214.398 115.376 li
214.398 67.9546 li
cp
f
219.65 67.9546 mo
217.023 67.9546 li
217.023 115.376 li
219.65 115.376 li
219.65 67.9546 li
cp
f
224.904 67.9546 mo
222.276 67.9546 li
222.276 115.376 li
224.904 115.376 li
224.904 67.9546 li
cp
f
193.384 44.0308 mo
190.757 44.0308 li
190.757 54.7408 li
193.384 54.7408 li
193.384 44.0308 li
cp
f
198.638 44.0308 mo
196.011 44.0308 li
196.011 54.7408 li
198.638 54.7408 li
198.638 44.0308 li
cp
f
203.891 44.0308 mo
201.263 44.0308 li
201.263 54.7408 li
203.891 54.7408 li
203.891 44.0308 li
cp
f
209.144 44.0308 mo
206.518 44.0308 li
206.518 54.7408 li
209.144 54.7408 li
209.144 44.0308 li
cp
f
214.398 44.0308 mo
211.771 44.0308 li
211.771 54.7408 li
214.398 54.7408 li
214.398 44.0308 li
cp
f
219.65 44.0308 mo
217.023 44.0308 li
217.023 54.7408 li
219.65 54.7408 li
219.65 44.0308 li
cp
f
224.904 44.0308 mo
222.276 44.0308 li
222.276 54.7408 li
224.904 54.7408 li
224.904 44.0308 li
cp
f
230.444 65.71 mo
185.216 65.71 li
185.216 57.1133 li
230.444 57.1133 li
230.444 65.71 li
cp
.666667 .666667 .666667 rgb
f
199.996 29.1827 mo
199.996 39.0459 li
207.875 39.0459 li
207.875 29.1827 li
199.996 29.1827 li
cp
.890196 .890196 .890196 rgb
f
215.756 29.1827 mo
207.875 29.1827 li
207.875 39.0459 li
215.756 39.0459 li
215.756 29.1827 li
cp
.666667 .666667 .666667 rgb
f
210.045 29.1827 mo
205.708 29.1827 li
205.708 27.2774 li
210.045 27.2774 li
210.045 29.1827 li
cp
.478431 .478431 .478431 rgb
f
227.931 65.71 mo
187.821 65.71 li
190.065 67.9546 li
227.931 67.9546 li
227.931 65.71 li
cp
.756863 .756863 .756863 rgb
f
190.757 118.268 mo
190.757 126.4 li
203.764 126.4 li
211.898 118.268 li
190.757 118.268 li
cp
.247059 .717647 .713726 rgb
f
224.904 118.268 mo
211.898 118.268 li
203.764 126.4 li
224.904 126.4 li
224.904 118.268 li
cp
.184314 .537255 .537255 rgb
f
230.444 59.523 mo
185.216 59.523 li
185.216 57.1133 li
230.444 57.1133 li
230.444 59.523 li
cp
.733333 .733333 .733333 rgb
f
23.5547 118.902 mo
21.9624 118.902 li
21.9624 122.357 li
23.5547 122.357 li
23.5547 118.902 li
cp
.305882 .403922 .243137 rgb
f
22.7583 118.902 mo
22.7583 122.357 li
23.5547 122.357 li
23.5547 118.902 li
22.7583 118.902 li
cp
.611765 .807843 .486275 rgb
f
24.3511 118.902 mo
23.5547 118.902 li
23.5547 122.357 li
24.3511 122.357 li
24.3511 118.902 li
cp
.458824 .607843 .364706 rgb
f
28.3325 118.902 mo
26.7397 118.902 li
26.7397 122.357 li
28.3325 122.357 li
28.3325 118.902 li
cp
.305882 .403922 .243137 rgb
f
27.5361 118.902 mo
27.5361 122.357 li
28.3325 122.357 li
28.3325 118.902 li
27.5361 118.902 li
cp
.611765 .807843 .486275 rgb
f
29.1289 118.902 mo
28.3325 118.902 li
28.3325 122.357 li
29.1289 122.357 li
29.1289 118.902 li
cp
.458824 .607843 .364706 rgb
f
37.8877 118.902 mo
36.2949 118.902 li
36.2949 122.357 li
37.8877 122.357 li
37.8877 118.902 li
cp
.305882 .403922 .243137 rgb
f
37.0908 118.902 mo
37.0908 122.357 li
37.8877 122.357 li
37.8877 118.902 li
37.0908 118.902 li
cp
.611765 .807843 .486275 rgb
f
38.6836 118.902 mo
37.8877 118.902 li
37.8877 122.357 li
38.6836 122.357 li
38.6836 118.902 li
cp
.458824 .607843 .364706 rgb
f
42.665 118.902 mo
41.0723 118.902 li
41.0723 122.357 li
42.665 122.357 li
42.665 118.902 li
cp
.305882 .403922 .243137 rgb
f
41.8682 118.902 mo
41.8682 122.357 li
42.665 122.357 li
42.665 118.902 li
41.8682 118.902 li
cp
.611765 .807843 .486275 rgb
f
43.4614 118.902 mo
42.665 118.902 li
42.665 122.357 li
43.4614 122.357 li
43.4614 118.902 li
cp
.458824 .607843 .364706 rgb
f
67.6108 124.131 mo
49.167 124.131 li
49.167 60.2354 li
67.6108 60.2354 li
67.6108 124.131 li
cp
.890196 .890196 .890196 rgb
f
51.7251 63.8301 mo
50.5171 63.8301 li
50.5171 120.537 li
51.7251 120.537 li
51.7251 63.8301 li
cp
.329412 .647059 .835294 rgb
f
54.1406 63.8301 mo
52.9331 63.8301 li
52.9331 120.537 li
54.1406 120.537 li
54.1406 63.8301 li
cp
f
56.5561 63.8301 mo
55.3486 63.8301 li
55.3486 120.537 li
56.5561 120.537 li
56.5561 63.8301 li
cp
f
58.9722 63.8301 mo
57.7637 63.8301 li
57.7637 120.537 li
58.9722 120.537 li
58.9722 63.8301 li
cp
f
61.3882 63.8301 mo
60.1802 63.8301 li
60.1802 120.537 li
61.3882 120.537 li
61.3882 63.8301 li
cp
f
63.8027 63.8301 mo
62.5952 63.8301 li
62.5952 120.537 li
63.8027 120.537 li
63.8027 63.8301 li
cp
f
66.2192 63.8301 mo
65.0112 63.8301 li
65.0112 120.537 li
66.2192 120.537 li
66.2192 63.8301 li
cp
f
67.6108 86.4053 mo
49.167 86.4053 li
49.167 84.5645 li
67.6108 84.5645 li
67.6108 86.4053 li
cp
.890196 .890196 .890196 rgb
f
82.3384 35.7862 mo
71.3262 35.7862 li
71.3262 23.9512 li
82.3384 23.9512 li
82.3384 35.7862 li
cp
f
73.8828 25.5367 mo
72.6758 25.5367 li
72.6758 34.2232 li
73.8828 34.2232 li
73.8828 25.5367 li
cp
.329412 .647059 .835294 rgb
f
76.2993 25.5367 mo
75.0923 25.5367 li
75.0923 34.2232 li
76.2993 34.2232 li
76.2993 25.5367 li
cp
f
78.7153 25.5367 mo
77.5073 25.5367 li
77.5073 34.2232 li
78.7153 34.2232 li
78.7153 25.5367 li
cp
f
81.1304 25.5367 mo
79.9224 25.5367 li
79.9224 34.2232 li
81.1304 34.2232 li
81.1304 25.5367 li
cp
f
104.497 124.131 mo
86.0537 124.131 li
86.0537 60.2354 li
104.497 60.2354 li
104.497 124.131 li
cp
.890196 .890196 .890196 rgb
f
88.6113 63.8301 mo
87.4043 63.8301 li
87.4043 120.537 li
88.6113 120.537 li
88.6113 63.8301 li
cp
.329412 .647059 .835294 rgb
f
91.0278 63.8301 mo
89.8203 63.8301 li
89.8203 120.537 li
91.0278 120.537 li
91.0278 63.8301 li
cp
f
93.4438 63.8301 mo
92.2353 63.8301 li
92.2353 120.537 li
93.4438 120.537 li
93.4438 63.8301 li
cp
f
95.8584 63.8301 mo
94.6509 63.8301 li
94.6509 120.537 li
95.8584 120.537 li
95.8584 63.8301 li
cp
f
98.2749 63.8301 mo
97.0669 63.8301 li
97.0669 120.537 li
98.2749 120.537 li
98.2749 63.8301 li
cp
f
100.69 63.8301 mo
99.4814 63.8301 li
99.4814 120.537 li
100.69 120.537 li
100.69 63.8301 li
cp
f
103.106 63.8301 mo
101.898 63.8301 li
101.898 120.537 li
103.106 120.537 li
103.106 63.8301 li
cp
f
104.497 86.4053 mo
86.0537 86.4053 li
86.0537 84.5645 li
104.497 84.5645 li
104.497 86.4053 li
cp
.890196 .890196 .890196 rgb
f
68.9604 39.3814 mo
70.1684 39.3814 li
70.1684 62.793 li
71.376 64.0005 li
71.376 39.3814 li
72.584 39.3814 li
72.584 65.209 li
73.792 66.416 li
73.792 39.3814 li
74.999 39.3814 li
74.999 67.6241 li
76.2075 68.8321 li
76.2075 39.3814 li
77.4155 39.3814 li
77.4155 70.0406 li
78.6235 71.2486 li
78.6235 39.3814 li
79.8306 39.3814 li
79.8306 72.4556 li
81.0395 73.6631 li
81.0395 39.3814 li
82.2471 39.3814 li
82.2471 74.8716 li
83.4546 76.0786 li
83.4546 39.3814 li
84.6621 39.3814 li
84.6621 77.2871 li
86.0537 78.6787 li
86.0537 35.7862 li
67.6108 35.7862 li
67.6108 60.2354 li
68.9604 61.5855 li
68.9604 39.3814 li
cp
.8 .8 .8 rgb
f
84.6621 77.2871 mo
84.6621 120.537 li
83.4546 120.537 li
83.4546 76.0786 li
82.2471 74.8716 li
82.2471 120.537 li
81.0395 120.537 li
81.0395 73.6631 li
79.8306 72.4556 li
79.8306 120.537 li
78.6235 120.537 li
78.6235 71.2486 li
77.4155 70.0406 li
77.4155 120.537 li
76.2075 120.537 li
76.2075 68.8321 li
74.999 67.6241 li
74.999 120.537 li
73.792 120.537 li
73.792 66.416 li
72.584 65.209 li
72.584 120.537 li
71.376 120.537 li
71.376 64.0005 li
70.1684 62.793 li
70.1684 120.537 li
68.9604 120.537 li
68.9604 61.5855 li
67.6108 60.2354 li
67.6108 124.131 li
86.0537 124.131 li
86.0537 78.6787 li
84.6621 77.2871 li
cp
.666667 .666667 .666667 rgb
f
68.9604 120.537 mo
70.1684 120.537 li
70.1684 62.793 li
68.9604 61.5855 li
68.9604 120.537 li
cp
.247059 .486275 .627451 rgb
f
68.9604 39.3814 mo
68.9604 61.5855 li
70.1684 62.793 li
70.1684 39.3814 li
68.9604 39.3814 li
cp
.329412 .647059 .835294 rgb
f
71.376 120.537 mo
72.584 120.537 li
72.584 65.209 li
71.376 64.0005 li
71.376 120.537 li
cp
.247059 .486275 .627451 rgb
f
71.376 39.3814 mo
71.376 64.0005 li
72.584 65.209 li
72.584 39.3814 li
71.376 39.3814 li
cp
.329412 .647059 .835294 rgb
f
73.792 120.537 mo
74.999 120.537 li
74.999 67.6241 li
73.792 66.416 li
73.792 120.537 li
cp
.247059 .486275 .627451 rgb
f
73.792 39.3814 mo
73.792 66.416 li
74.999 67.6241 li
74.999 39.3814 li
73.792 39.3814 li
cp
.329412 .647059 .835294 rgb
f
76.2075 120.537 mo
77.4155 120.537 li
77.4155 70.0406 li
76.2075 68.8321 li
76.2075 120.537 li
cp
.247059 .486275 .627451 rgb
f
76.2075 39.3814 mo
76.2075 68.8321 li
77.4155 70.0406 li
77.4155 39.3814 li
76.2075 39.3814 li
cp
.329412 .647059 .835294 rgb
f
78.6235 39.3814 mo
78.6235 71.2486 li
79.8306 72.4556 li
79.8306 39.3814 li
78.6235 39.3814 li
cp
f
78.6235 120.537 mo
79.8306 120.537 li
79.8306 72.4556 li
78.6235 71.2486 li
78.6235 120.537 li
cp
.247059 .486275 .627451 rgb
f
81.0395 120.537 mo
82.2471 120.537 li
82.2471 74.8716 li
81.0395 73.6631 li
81.0395 120.537 li
cp
f
81.0395 39.3814 mo
81.0395 73.6631 li
82.2471 74.8716 li
82.2471 39.3814 li
81.0395 39.3814 li
cp
.329412 .647059 .835294 rgb
f
83.4546 120.537 mo
84.6621 120.537 li
84.6621 77.2871 li
83.4546 76.0786 li
83.4546 120.537 li
cp
.247059 .486275 .627451 rgb
f
83.4546 39.3814 mo
83.4546 76.0786 li
84.6621 77.2871 li
84.6621 39.3814 li
83.4546 39.3814 li
cp
.329412 .647059 .835294 rgb
f
107.056 106.274 mo
107.056 113.767 li
108.264 113.767 li
108.264 106.274 li
107.056 106.274 li
cp
.666667 .666667 .666667 rgb
f
113.023 104.434 mo
111.887 103.299 li
111.887 104.434 li
113.023 104.434 li
cp
f
117.925 109.337 mo
117.925 106.274 li
116.719 106.274 li
116.719 108.131 li
117.925 109.337 li
cp
.8 .8 .8 rgb
f
109.471 106.274 mo
109.471 113.767 li
110.679 113.767 li
110.679 106.274 li
109.471 106.274 li
cp
.666667 .666667 .666667 rgb
f
111.887 106.274 mo
111.887 113.767 li
113.093 113.767 li
113.093 106.274 li
111.887 106.274 li
cp
f
110.679 104.434 mo
110.679 102.091 li
109.471 100.884 li
109.471 104.434 li
110.679 104.434 li
cp
f
119.134 113.767 mo
120.342 113.767 li
120.342 111.754 li
119.134 110.546 li
119.134 113.767 li
cp
f
115.51 106.274 mo
114.862 106.274 li
115.51 106.923 li
115.51 106.274 li
cp
.8 .8 .8 rgb
f
119.134 106.274 mo
119.134 110.546 li
120.342 111.754 li
120.342 106.274 li
119.134 106.274 li
cp
f
114.862 106.274 mo
114.303 106.274 li
114.303 113.767 li
115.51 113.767 li
115.51 106.923 li
114.862 106.274 li
cp
.666667 .666667 .666667 rgb
f
116.719 108.131 mo
116.719 113.767 li
117.925 113.767 li
117.925 109.337 li
116.719 108.131 li
cp
f
105.848 106.274 mo
104.497 106.274 li
104.497 113.767 li
105.848 113.767 li
105.848 106.274 li
cp
f
121.55 113.767 mo
122.355 113.767 li
121.55 112.961 li
121.55 113.767 li
cp
f
121.55 112.961 mo
122.355 113.767 li
122.941 113.767 li
122.941 106.274 li
121.55 106.274 li
121.55 112.961 li
cp
.8 .8 .8 rgb
f
108.264 99.5064 mo
109.471 99.5064 li
109.471 100.884 li
110.679 102.091 li
110.679 99.5064 li
111.887 99.5064 li
111.887 103.299 li
113.023 104.434 li
113.093 104.434 li
113.093 99.5064 li
114.303 99.5064 li
114.303 104.434 li
115.51 104.434 li
115.51 99.5064 li
116.719 99.5064 li
116.719 104.434 li
117.925 104.434 li
117.925 99.5064 li
119.134 99.5064 li
119.134 104.434 li
120.342 104.434 li
120.342 99.5064 li
121.55 99.5064 li
121.55 104.434 li
122.941 104.434 li
122.941 95.9097 li
104.497 95.9097 li
108.264 99.6758 li
108.264 99.5064 li
cp
f
121.55 120.542 mo
120.342 120.542 li
120.342 115.607 li
119.134 115.607 li
119.134 120.542 li
117.925 120.542 li
117.925 115.607 li
116.719 115.607 li
116.719 120.542 li
115.51 120.542 li
115.51 115.607 li
114.303 115.607 li
114.303 120.542 li
113.093 120.542 li
113.093 115.607 li
111.887 115.607 li
111.887 120.542 li
110.679 120.542 li
110.679 115.607 li
109.471 115.607 li
109.471 120.542 li
108.264 120.542 li
108.264 115.607 li
107.056 115.607 li
107.056 120.542 li
105.848 120.542 li
105.848 115.607 li
104.497 115.607 li
104.497 124.131 li
122.941 124.131 li
122.941 115.607 li
121.55 115.607 li
121.55 120.542 li
cp
.666667 .666667 .666667 rgb
f
105.848 99.5064 mo
107.056 99.5064 li
107.056 104.434 li
108.264 104.434 li
108.264 99.6758 li
104.497 95.9097 li
104.497 104.434 li
105.848 104.434 li
105.848 99.5064 li
cp
f
105.848 120.542 mo
107.056 120.542 li
107.056 115.607 li
105.848 115.607 li
105.848 120.542 li
cp
.247059 .486275 .627451 rgb
f
107.056 106.274 mo
105.848 106.274 li
105.848 113.767 li
107.056 113.767 li
107.056 106.274 li
cp
f
107.056 99.5064 mo
105.848 99.5064 li
105.848 104.434 li
107.056 104.434 li
107.056 99.5064 li
cp
f
109.471 99.5064 mo
108.264 99.5064 li
108.264 99.6758 li
109.471 100.884 li
109.471 99.5064 li
cp
.329412 .647059 .835294 rgb
f
109.471 100.884 mo
108.264 99.6758 li
108.264 104.434 li
109.471 104.434 li
109.471 100.884 li
cp
.247059 .486275 .627451 rgb
f
108.264 120.542 mo
109.471 120.542 li
109.471 115.607 li
108.264 115.607 li
108.264 120.542 li
cp
f
108.264 106.274 mo
108.264 113.767 li
109.471 113.767 li
109.471 106.274 li
108.264 106.274 li
cp
f
111.887 99.5064 mo
110.679 99.5064 li
110.679 102.091 li
111.887 103.299 li
111.887 99.5064 li
cp
.329412 .647059 .835294 rgb
f
110.679 106.274 mo
110.679 113.767 li
111.887 113.767 li
111.887 106.274 li
110.679 106.274 li
cp
.247059 .486275 .627451 rgb
f
111.887 104.434 mo
111.887 103.299 li
110.679 102.091 li
110.679 104.434 li
111.887 104.434 li
cp
f
110.679 120.542 mo
111.887 120.542 li
111.887 115.607 li
110.679 115.607 li
110.679 120.542 li
cp
f
113.093 120.542 mo
114.303 120.542 li
114.303 115.607 li
113.093 115.607 li
113.093 120.542 li
cp
f
113.093 106.274 mo
113.093 113.767 li
114.303 113.767 li
114.303 106.274 li
113.093 106.274 li
cp
f
114.303 99.5064 mo
113.093 99.5064 li
113.093 104.434 li
114.303 104.434 li
114.303 99.5064 li
cp
.329412 .647059 .835294 rgb
f
115.51 120.542 mo
116.719 120.542 li
116.719 115.607 li
115.51 115.607 li
115.51 120.542 li
cp
.247059 .486275 .627451 rgb
f
115.51 106.923 mo
115.51 113.767 li
116.719 113.767 li
116.719 108.131 li
115.51 106.923 li
cp
f
116.719 99.5064 mo
115.51 99.5064 li
115.51 104.434 li
116.719 104.434 li
116.719 99.5064 li
cp
.329412 .647059 .835294 rgb
f
116.719 108.131 mo
116.719 106.274 li
115.51 106.274 li
115.51 106.923 li
116.719 108.131 li
cp
f
117.925 109.337 mo
117.925 113.767 li
119.134 113.767 li
119.134 110.546 li
117.925 109.337 li
cp
.247059 .486275 .627451 rgb
f
117.925 120.542 mo
119.134 120.542 li
119.134 115.607 li
117.925 115.607 li
117.925 120.542 li
cp
f
119.134 99.5064 mo
117.925 99.5064 li
117.925 104.434 li
119.134 104.434 li
119.134 99.5064 li
cp
.329412 .647059 .835294 rgb
f
119.134 110.546 mo
119.134 106.274 li
117.925 106.274 li
117.925 109.337 li
119.134 110.546 li
cp
f
121.55 99.5064 mo
120.342 99.5064 li
120.342 104.434 li
121.55 104.434 li
121.55 99.5064 li
cp
f
120.342 111.754 mo
121.55 112.961 li
121.55 106.274 li
120.342 106.274 li
120.342 111.754 li
cp
f
120.342 120.542 mo
121.55 120.542 li
121.55 115.607 li
120.342 115.607 li
120.342 120.542 li
cp
.247059 .486275 .627451 rgb
f
120.342 111.754 mo
120.342 113.767 li
121.55 113.767 li
121.55 112.961 li
120.342 111.754 li
cp
f
122.941 114.352 mo
122.941 113.767 li
122.355 113.767 li
122.941 114.352 li
cp
.890196 .890196 .890196 rgb
f
122.355 113.767 mo
121.55 113.767 li
120.342 113.767 li
119.134 113.767 li
117.925 113.767 li
116.719 113.767 li
115.51 113.767 li
114.303 113.767 li
113.093 113.767 li
111.887 113.767 li
110.679 113.767 li
109.471 113.767 li
108.264 113.767 li
107.056 113.767 li
105.848 113.767 li
104.497 113.767 li
104.497 115.607 li
105.848 115.607 li
107.056 115.607 li
108.264 115.607 li
109.471 115.607 li
110.679 115.607 li
111.887 115.607 li
113.093 115.607 li
114.303 115.607 li
115.51 115.607 li
116.719 115.607 li
117.925 115.607 li
119.134 115.607 li
120.342 115.607 li
121.55 115.607 li
122.941 115.607 li
122.941 114.352 li
122.355 113.767 li
cp
.8 .8 .8 rgb
f
114.303 105.714 mo
113.093 104.506 li
113.023 104.434 li
111.887 104.434 li
110.679 104.434 li
109.471 104.434 li
108.264 104.434 li
107.056 104.434 li
105.848 104.434 li
104.497 104.434 li
104.497 106.274 li
105.848 106.274 li
107.056 106.274 li
108.264 106.274 li
109.471 106.274 li
110.679 106.274 li
111.887 106.274 li
113.093 106.274 li
114.303 106.274 li
114.862 106.274 li
114.303 105.714 li
cp
f
121.55 104.434 mo
120.342 104.434 li
119.134 104.434 li
117.925 104.434 li
116.719 104.434 li
115.51 104.434 li
114.303 104.434 li
113.093 104.434 li
113.023 104.434 li
113.093 104.506 li
114.303 105.714 li
114.862 106.274 li
115.51 106.274 li
116.719 106.274 li
117.925 106.274 li
119.134 106.274 li
120.342 106.274 li
121.55 106.274 li
122.941 106.274 li
122.941 104.434 li
121.55 104.434 li
cp
.890196 .890196 .890196 rgb
f
98.8994 60.2354 mo
91.6514 60.2354 li
91.6514 56.2984 li
98.8994 56.2984 li
98.8994 60.2354 li
cp
.8 .8 .8 rgb
f
117.319 95.9097 mo
110.071 95.9097 li
110.071 91.9737 li
117.319 91.9737 li
117.319 95.9097 li
cp
.890196 .890196 .890196 rgb
f
113.733 85.794 mo
113.656 85.794 li
113.197 91.9737 li
114.191 91.9737 li
113.733 85.794 li
cp
.615686 .615686 .615686 rgb
f
76.8711 16.732 mo
76.7939 16.732 li
76.3359 22.9112 li
77.3296 22.9112 li
76.8711 16.732 li
cp
f
75.564 22.9112 mo
75.564 23.9512 li
76.8325 23.9512 li
76.8325 22.9112 li
75.564 22.9112 li
cp
.890196 .890196 .890196 rgb
f
78.1016 22.9112 mo
76.8325 22.9112 li
76.8325 23.9512 li
78.1016 23.9512 li
78.1016 22.9112 li
cp
.666667 .666667 .666667 rgb
f
19.3223 127.984 mo
128.089 127.984 li
128.089 124.128 li
19.3223 124.128 li
19.3223 127.984 li
cp
.247059 .486275 .627451 rgb
f
125.158 135.749 mo
22.2519 135.749 li
22.2519 127.984 li
125.158 127.984 li
125.158 135.749 li
cp
.666667 .666667 .666667 rgb
f
49.167 122.357 mo
19.3223 122.357 li
19.3223 124.128 li
49.167 124.128 li
49.167 122.357 li
cp
.890196 .890196 .890196 rgb
f
21.9624 120.709 mo
20.3696 120.709 li
20.3696 122.357 li
21.9624 122.357 li
21.9624 120.709 li
cp
.611765 .807843 .486275 rgb
f
24.3511 120.709 mo
22.7583 120.709 li
22.7583 122.357 li
24.3511 122.357 li
24.3511 120.709 li
cp
f
26.7397 120.709 mo
25.1479 120.709 li
25.1479 122.357 li
26.7397 122.357 li
26.7397 120.709 li
cp
f
29.1289 120.709 mo
27.5361 120.709 li
27.5361 122.357 li
29.1289 122.357 li
29.1289 120.709 li
cp
f
31.5171 120.709 mo
29.9253 120.709 li
29.9253 122.357 li
31.5171 122.357 li
31.5171 120.709 li
cp
f
33.9062 120.709 mo
32.3135 120.709 li
32.3135 122.357 li
33.9062 122.357 li
33.9062 120.709 li
cp
f
36.2949 120.709 mo
34.7021 120.709 li
34.7021 122.357 li
36.2949 122.357 li
36.2949 120.709 li
cp
f
38.6841 120.709 mo
37.0908 120.709 li
37.0908 122.357 li
38.6841 122.357 li
38.6841 120.709 li
cp
f
41.0723 120.709 mo
39.48 120.709 li
39.48 122.357 li
41.0723 122.357 li
41.0723 120.709 li
cp
f
43.4614 120.709 mo
41.8682 120.709 li
41.8682 122.357 li
43.4614 122.357 li
43.4614 120.709 li
cp
f
45.8501 120.709 mo
44.2573 120.709 li
44.2573 122.357 li
45.8501 122.357 li
45.8501 120.709 li
cp
f
48.2388 120.709 mo
46.646 120.709 li
46.646 122.357 li
48.2388 122.357 li
48.2388 120.709 li
cp
f
125.158 127.984 mo
22.2519 127.984 li
24.4966 130.229 li
125.158 130.229 li
125.158 127.984 li
cp
.501961 .501961 .501961 rgb
f
49.1611 127.984 mo
41.1406 127.984 li
41.1406 135.732 li
49.1611 135.732 li
49.1611 127.984 li
cp
.227451 .227451 .227451 rgb
f
49.1611 128.393 mo
41.1406 128.393 li
41.1406 127.984 li
49.1611 127.984 li
49.1611 128.393 li
cp
.380392 .380392 .380392 rgb
f
49.1611 129.207 mo
41.1406 129.207 li
41.1406 128.801 li
49.1611 128.801 li
49.1611 129.207 li
cp
f
49.1611 130.023 mo
41.1406 130.023 li
41.1406 129.615 li
49.1611 129.615 li
49.1611 130.023 li
cp
f
49.1611 130.839 mo
41.1406 130.839 li
41.1406 130.432 li
49.1611 130.432 li
49.1611 130.839 li
cp
f
49.1611 131.655 mo
41.1406 131.655 li
41.1406 131.247 li
49.1611 131.247 li
49.1611 131.655 li
cp
f
49.1611 132.469 mo
41.1406 132.469 li
41.1406 132.062 li
49.1611 132.062 li
49.1611 132.469 li
cp
f
49.1611 133.286 mo
41.1406 133.286 li
41.1406 132.879 li
49.1611 132.879 li
49.1611 133.286 li
cp
f
49.1611 134.102 mo
41.1406 134.102 li
41.1406 133.694 li
49.1611 133.694 li
49.1611 134.102 li
cp
f
49.1611 134.917 mo
41.1406 134.917 li
41.1406 134.509 li
49.1611 134.509 li
49.1611 134.917 li
cp
f
49.1611 135.732 mo
41.1406 135.732 li
41.1406 135.325 li
49.1611 135.325 li
49.1611 135.732 li
cp
f
314.376 42.5323 mo
314.376 33.5533 li
318.481 33.5533 li
318.481 26.8301 li
342.953 26.8301 li
354.566 38.4434 li
354.566 20.0274 li
306.868 20.0274 li
306.868 122.823 li
310.602 122.823 li
310.602 42.5323 li
314.376 42.5323 li
cp
.4 .4 .4 rgb
f
342.953 26.8301 mo
342.953 33.5533 li
347.059 33.5533 li
347.059 42.5323 li
350.832 42.5323 li
350.832 122.823 li
354.566 122.823 li
354.566 38.4434 li
342.953 26.8301 li
cp
.301961 .301961 .301961 rgb
f
347.059 42.5323 mo
347.059 33.5533 li
342.953 33.5533 li
342.953 26.8301 li
318.481 26.8301 li
318.481 33.5533 li
314.376 33.5533 li
314.376 42.5323 li
310.602 42.5323 li
310.602 122.823 li
350.832 122.823 li
350.832 42.5323 li
347.059 42.5323 li
cp
.772549 .772549 .772549 rgb
f
346.325 17.1162 mo
339.078 17.1162 li
339.078 13.1797 li
346.325 13.1797 li
346.325 17.1162 li
cp
.890196 .890196 .890196 rgb
f
342.74 7 mo
342.663 7 li
342.205 13.1797 li
343.197 13.1797 li
342.74 7 li
cp
.615686 .615686 .615686 rgb
f
333.637 33.4751 mo
327.797 33.4751 li
327.797 31.0801 li
333.637 31.0801 li
333.637 33.4751 li
cp
.231373 .447059 .447059 rgb
f
333.637 38.2661 mo
327.797 38.2661 li
327.797 35.8706 li
333.637 35.8706 li
333.637 38.2661 li
cp
f
333.637 43.0581 mo
327.797 43.0581 li
327.797 40.6621 li
333.637 40.6621 li
333.637 43.0581 li
cp
f
333.637 47.8496 mo
327.797 47.8496 li
327.797 45.4536 li
333.637 45.4536 li
333.637 47.8496 li
cp
f
333.637 52.541 mo
327.797 52.541 li
327.797 50.1455 li
333.637 50.1455 li
333.637 52.541 li
cp
f
333.637 57.3326 mo
327.797 57.3326 li
327.797 54.9366 li
333.637 54.9366 li
333.637 57.3326 li
cp
f
333.637 62.1241 mo
327.797 62.1241 li
327.797 59.7281 li
333.637 59.7281 li
333.637 62.1241 li
cp
f
333.637 66.9151 mo
327.797 66.9151 li
327.797 64.5196 li
333.637 64.5196 li
333.637 66.9151 li
cp
f
333.637 71.7066 mo
327.797 71.7066 li
327.797 69.3111 li
333.637 69.3111 li
333.637 71.7066 li
cp
f
333.637 76.4981 mo
327.797 76.4981 li
327.797 74.1021 li
333.637 74.1021 li
333.637 76.4981 li
cp
f
333.637 81.2896 mo
327.797 81.2896 li
327.797 78.8936 li
333.637 78.8936 li
333.637 81.2896 li
cp
f
333.637 86.0801 mo
327.797 86.0801 li
327.797 83.6851 li
333.637 83.6851 li
333.637 86.0801 li
cp
f
333.637 90.772 mo
327.797 90.772 li
327.797 88.377 li
333.637 88.377 li
333.637 90.772 li
cp
f
333.637 95.564 mo
327.797 95.564 li
327.797 93.168 li
333.637 93.168 li
333.637 95.564 li
cp
f
333.637 100.355 mo
327.797 100.355 li
327.797 97.9595 li
333.637 97.9595 li
333.637 100.355 li
cp
f
333.637 105.146 mo
327.797 105.146 li
327.797 102.75 li
333.637 102.75 li
333.637 105.146 li
cp
f
333.637 109.938 mo
327.797 109.938 li
327.797 107.542 li
333.637 107.542 li
333.637 109.938 li
cp
f
333.637 114.729 mo
327.797 114.729 li
327.797 112.334 li
333.637 112.334 li
333.637 114.729 li
cp
f
333.637 119.52 mo
327.797 119.52 li
327.797 117.125 li
333.637 117.125 li
333.637 119.52 li
cp
f
342.395 38.2661 mo
336.557 38.2661 li
336.557 35.8706 li
342.395 35.8706 li
342.395 38.2661 li
cp
f
342.395 43.0581 mo
336.557 43.0581 li
336.557 40.6621 li
342.395 40.6621 li
342.395 43.0581 li
cp
f
342.395 47.8496 mo
336.557 47.8496 li
336.557 45.4536 li
342.395 45.4536 li
342.395 47.8496 li
cp
f
342.395 52.541 mo
336.557 52.541 li
336.557 50.1455 li
342.395 50.1455 li
342.395 52.541 li
cp
f
342.395 57.3326 mo
336.557 57.3326 li
336.557 54.9366 li
342.395 54.9366 li
342.395 57.3326 li
cp
f
342.395 62.1241 mo
336.557 62.1241 li
336.557 59.7281 li
342.395 59.7281 li
342.395 62.1241 li
cp
f
342.395 66.9151 mo
336.557 66.9151 li
336.557 64.5196 li
342.395 64.5196 li
342.395 66.9151 li
cp
f
342.395 71.7066 mo
336.557 71.7066 li
336.557 69.3111 li
342.395 69.3111 li
342.395 71.7066 li
cp
f
342.395 76.4981 mo
336.557 76.4981 li
336.557 74.1021 li
342.395 74.1021 li
342.395 76.4981 li
cp
f
342.395 81.2896 mo
336.557 81.2896 li
336.557 78.8936 li
342.395 78.8936 li
342.395 81.2896 li
cp
f
342.395 86.0801 mo
336.557 86.0801 li
336.557 83.6851 li
342.395 83.6851 li
342.395 86.0801 li
cp
f
342.395 90.772 mo
336.557 90.772 li
336.557 88.377 li
342.395 88.377 li
342.395 90.772 li
cp
f
342.395 95.564 mo
336.557 95.564 li
336.557 93.168 li
342.395 93.168 li
342.395 95.564 li
cp
f
342.395 100.355 mo
336.557 100.355 li
336.557 97.9595 li
342.395 97.9595 li
342.395 100.355 li
cp
f
342.395 105.146 mo
336.557 105.146 li
336.557 102.75 li
342.395 102.75 li
342.395 105.146 li
cp
f
342.395 109.938 mo
336.557 109.938 li
336.557 107.542 li
342.395 107.542 li
342.395 109.938 li
cp
f
342.395 114.729 mo
336.557 114.729 li
336.557 112.334 li
342.395 112.334 li
342.395 114.729 li
cp
f
342.395 119.52 mo
336.557 119.52 li
336.557 117.125 li
342.395 117.125 li
342.395 119.52 li
cp
f
324.878 38.2661 mo
319.039 38.2661 li
319.039 35.8706 li
324.878 35.8706 li
324.878 38.2661 li
cp
f
324.878 43.0581 mo
319.039 43.0581 li
319.039 40.6621 li
324.878 40.6621 li
324.878 43.0581 li
cp
f
324.878 47.8496 mo
319.039 47.8496 li
319.039 45.4536 li
324.878 45.4536 li
324.878 47.8496 li
cp
f
324.878 52.541 mo
319.039 52.541 li
319.039 50.1455 li
324.878 50.1455 li
324.878 52.541 li
cp
f
324.878 57.3326 mo
319.039 57.3326 li
319.039 54.9366 li
324.878 54.9366 li
324.878 57.3326 li
cp
f
324.878 62.1241 mo
319.039 62.1241 li
319.039 59.7281 li
324.878 59.7281 li
324.878 62.1241 li
cp
f
324.878 66.9151 mo
319.039 66.9151 li
319.039 64.5196 li
324.878 64.5196 li
324.878 66.9151 li
cp
f
324.878 71.7066 mo
319.039 71.7066 li
319.039 69.3111 li
324.878 69.3111 li
324.878 71.7066 li
cp
f
324.878 76.4981 mo
319.039 76.4981 li
319.039 74.1021 li
324.878 74.1021 li
324.878 76.4981 li
cp
f
324.878 81.2896 mo
319.039 81.2896 li
319.039 78.8936 li
324.878 78.8936 li
324.878 81.2896 li
cp
f
324.878 86.0801 mo
319.039 86.0801 li
319.039 83.6851 li
324.878 83.6851 li
324.878 86.0801 li
cp
f
324.878 90.772 mo
319.039 90.772 li
319.039 88.377 li
324.878 88.377 li
324.878 90.772 li
cp
f
324.878 95.564 mo
319.039 95.564 li
319.039 93.168 li
324.878 93.168 li
324.878 95.564 li
cp
f
324.878 100.355 mo
319.039 100.355 li
319.039 97.9595 li
324.878 97.9595 li
324.878 100.355 li
cp
f
324.878 105.146 mo
319.039 105.146 li
319.039 102.75 li
324.878 102.75 li
324.878 105.146 li
cp
f
324.878 109.938 mo
319.039 109.938 li
319.039 107.542 li
324.878 107.542 li
324.878 109.938 li
cp
f
324.878 114.729 mo
319.039 114.729 li
319.039 112.334 li
324.878 112.334 li
324.878 114.729 li
cp
f
324.878 119.52 mo
319.039 119.52 li
319.039 117.125 li
324.878 117.125 li
324.878 119.52 li
cp
f
350.832 20.1026 mo
310.602 20.1026 li
310.602 17.1162 li
350.832 17.1162 li
350.832 20.1026 li
cp
.666667 .666667 .666667 rgb
f
320.058 17.1162 mo
316.444 17.1162 li
316.444 12.8526 li
320.058 12.8526 li
320.058 17.1162 li
cp
.831373 .831373 .831373 rgb
f
356.011 122.823 mo
354.566 122.823 li
354.566 20.0274 li
356.011 20.0274 li
356.011 122.823 li
cp
.396078 .772549 .772549 rgb
f
306.868 122.823 mo
305.423 122.823 li
305.423 20.0274 li
306.868 20.0274 li
306.868 122.823 li
cp
f
315.279 129.455 mo
315.279 135.749 li
318.112 135.749 li
318.112 129.455 li
315.279 129.455 li
cp
.113725 .27451 .27451 rgb
f
324.627 129.455 mo
324.627 135.749 li
327.459 135.749 li
327.459 129.455 li
324.627 129.455 li
cp
f
333.975 129.455 mo
333.975 135.749 li
336.808 135.749 li
336.808 129.455 li
333.975 129.455 li
cp
f
343.321 129.455 mo
343.321 135.749 li
346.154 135.749 li
346.154 129.455 li
343.321 129.455 li
cp
f
305.784 129.455 mo
308.765 132.436 li
308.765 129.455 li
305.784 129.455 li
cp
f
305.784 129.455 mo
305.784 127.769 li
355.649 127.769 li
360.469 132.587 li
360.469 122.823 li
300.966 122.823 li
300.966 135.749 li
308.765 135.749 li
308.765 132.436 li
305.784 129.455 li
cp
.168627 .407843 .407843 rgb
f
355.649 127.769 mo
355.649 129.455 li
352.67 129.455 li
352.67 135.749 li
360.469 135.749 li
360.469 132.587 li
355.649 127.769 li
cp
.113725 .27451 .27451 rgb
f
312.448 129.455 mo
312.448 135.749 li
315.279 135.749 li
315.279 129.455 li
312.448 129.455 li
cp
.172549 .172549 .172549 rgb
f
308.765 132.436 mo
311.598 135.269 li
311.598 129.455 li
308.765 129.455 li
308.765 132.436 li
cp
f
308.765 132.436 mo
308.765 135.749 li
311.598 135.749 li
311.598 135.269 li
308.765 132.436 li
cp
.227451 .227451 .227451 rgb
f
311.598 129.455 mo
311.598 135.269 li
312.078 135.749 li
312.448 135.749 li
312.448 129.455 li
311.598 129.455 li
cp
.423529 .423529 .423529 rgb
f
311.598 135.749 mo
312.078 135.749 li
311.598 135.269 li
311.598 135.749 li
cp
.564706 .564706 .564706 rgb
f
318.112 129.455 mo
318.112 135.749 li
320.945 135.749 li
320.945 129.455 li
318.112 129.455 li
cp
.172549 .172549 .172549 rgb
f
321.795 129.455 mo
321.795 135.749 li
324.627 135.749 li
324.627 129.455 li
321.795 129.455 li
cp
f
320.945 129.455 mo
320.945 135.749 li
321.795 135.749 li
321.795 129.455 li
320.945 129.455 li
cp
.423529 .423529 .423529 rgb
f
327.459 129.455 mo
327.459 135.749 li
330.293 135.749 li
330.293 129.455 li
327.459 129.455 li
cp
.172549 .172549 .172549 rgb
f
331.142 129.455 mo
331.142 135.749 li
333.975 135.749 li
333.975 129.455 li
331.142 129.455 li
cp
f
330.293 129.455 mo
330.293 135.749 li
331.142 135.749 li
331.142 129.455 li
330.293 129.455 li
cp
.423529 .423529 .423529 rgb
f
340.488 129.455 mo
340.488 135.749 li
343.321 135.749 li
343.321 129.455 li
340.488 129.455 li
cp
.172549 .172549 .172549 rgb
f
336.808 129.455 mo
336.808 135.749 li
339.641 135.749 li
339.641 129.455 li
336.808 129.455 li
cp
f
339.641 129.455 mo
339.641 135.749 li
340.488 135.749 li
340.488 129.455 li
339.641 129.455 li
cp
.423529 .423529 .423529 rgb
f
349.836 129.455 mo
349.836 135.749 li
352.67 135.749 li
352.67 129.455 li
349.836 129.455 li
cp
.172549 .172549 .172549 rgb
f
346.154 129.455 mo
346.154 135.749 li
348.987 135.749 li
348.987 129.455 li
346.154 129.455 li
cp
f
348.987 129.455 mo
348.987 135.749 li
349.836 135.749 li
349.836 129.455 li
348.987 129.455 li
cp
.423529 .423529 .423529 rgb
f
305.784 127.769 mo
305.784 129.455 li
308.765 129.455 li
311.598 129.455 li
312.448 129.455 li
315.279 129.455 li
318.112 129.455 li
320.945 129.455 li
321.795 129.455 li
324.627 129.455 li
327.459 129.455 li
330.293 129.455 li
330.717 129.455 li
330.717 127.769 li
305.784 127.769 li
cp
.584314 .584314 .584314 rgb
f
330.717 127.769 mo
330.717 129.455 li
331.142 129.455 li
333.975 129.455 li
336.808 129.455 li
339.641 129.455 li
340.488 129.455 li
343.321 129.455 li
346.154 129.455 li
348.987 129.455 li
349.836 129.455 li
352.67 129.455 li
355.649 129.455 li
355.649 127.769 li
330.717 127.769 li
cp
.478431 .478431 .478431 rgb
f
345.234 340.792 mo
304.699 340.792 li
304.699 264.015 li
345.234 264.015 li
345.234 340.792 li
cp
.227451 .447059 .576471 rgb
f
345.234 383.75 mo
304.699 383.75 li
304.699 350.354 li
345.234 350.354 li
345.234 383.75 li
cp
f
345.234 269.874 mo
304.699 269.874 li
304.699 268.293 li
345.234 268.293 li
345.234 269.874 li
cp
.282353 .552941 .713726 rgb
f
345.234 336.514 mo
304.699 336.514 li
304.699 334.933 li
345.234 334.933 li
345.234 336.514 li
cp
f
345.234 379.406 mo
304.699 379.406 li
304.699 377.824 li
345.234 377.824 li
345.234 379.406 li
cp
f
309.517 334.933 mo
307.107 334.933 li
307.107 269.874 li
309.517 269.874 li
309.517 334.933 li
cp
.141176 .290196 .356863 rgb
f
314.333 334.933 mo
311.926 334.933 li
311.926 269.874 li
314.333 269.874 li
314.333 334.933 li
cp
f
319.001 334.933 mo
316.593 334.933 li
316.593 269.874 li
319.001 269.874 li
319.001 334.933 li
cp
f
323.818 334.933 mo
321.409 334.933 li
321.409 269.874 li
323.818 269.874 li
323.818 334.933 li
cp
f
328.636 334.933 mo
326.228 334.933 li
326.228 269.874 li
328.636 269.874 li
328.636 334.933 li
cp
f
333.453 334.933 mo
331.044 334.933 li
331.044 269.874 li
333.453 269.874 li
333.453 334.933 li
cp
f
338.12 334.933 mo
335.712 334.933 li
335.712 269.874 li
338.12 269.874 li
338.12 334.933 li
cp
f
342.939 334.933 mo
340.528 334.933 li
340.528 269.874 li
342.939 269.874 li
342.939 334.933 li
cp
f
309.517 377.802 mo
307.107 377.802 li
307.107 352.711 li
309.517 352.711 li
309.517 377.802 li
cp
f
314.333 377.802 mo
311.926 377.802 li
311.926 352.711 li
314.333 352.711 li
314.333 377.802 li
cp
f
319.001 377.802 mo
316.593 377.802 li
316.593 352.711 li
319.001 352.711 li
319.001 377.802 li
cp
f
323.818 377.802 mo
321.409 377.802 li
321.409 352.711 li
323.818 352.711 li
323.818 377.802 li
cp
f
328.636 377.802 mo
326.228 377.802 li
326.228 352.711 li
328.636 352.711 li
328.636 377.802 li
cp
f
333.453 377.802 mo
331.044 377.802 li
331.044 352.711 li
333.453 352.711 li
333.453 377.802 li
cp
f
338.12 377.802 mo
335.712 377.802 li
335.712 352.711 li
338.12 352.711 li
338.12 377.802 li
cp
f
342.939 377.802 mo
340.528 377.802 li
340.528 352.711 li
342.939 352.711 li
342.939 377.802 li
cp
f
323.317 379.406 mo
318.819 379.406 li
318.819 383.75 li
323.317 383.75 li
323.317 379.406 li
cp
.113725 .223529 .290196 rgb
f
321.361 383.75 mo
320.775 383.75 li
320.775 379.406 li
321.361 379.406 li
321.361 383.75 li
cp
.160784 .356863 .45098 rgb
f
330.966 379.406 mo
326.47 379.406 li
326.47 383.75 li
330.966 383.75 li
330.966 379.406 li
cp
.113725 .223529 .290196 rgb
f
329.011 383.75 mo
328.425 383.75 li
328.425 379.406 li
329.011 379.406 li
329.011 383.75 li
cp
.160784 .356863 .45098 rgb
f
345.234 350.354 mo
345.234 340.792 li
316.176 340.792 li
325.736 350.354 li
345.234 350.354 li
cp
.113725 .223529 .290196 rgb
f
316.176 340.792 mo
316.176 350.354 li
325.736 350.354 li
316.176 340.792 li
cp
.141176 .290196 .356863 rgb
f
352.259 264.015 mo
345.234 264.015 li
345.234 383.75 li
352.259 383.75 li
352.259 350.308 li
352.259 264.015 li
cp
f
352.259 350.308 mo
352.259 383.75 li
367.788 383.75 li
367.788 350.308 li
352.259 350.308 li
cp
.113725 .223529 .290196 rgb
f
189.883 152.847 mo
189.883 175.272 li
207.571 175.272 li
207.571 152.847 li
189.883 152.847 li
cp
.227451 .447059 .576471 rgb
f
225.777 152.847 mo
207.571 152.847 li
207.571 175.272 li
225.777 175.272 li
225.777 152.847 li
cp
.172549 .337255 .431373 rgb
f
222.004 175.272 mo
222.004 166.294 li
217.899 166.294 li
217.899 159.57 li
213.805 159.57 li
213.805 152.847 li
209.689 152.847 li
209.689 146.123 li
205.974 146.123 li
205.974 152.847 li
201.856 152.847 li
201.856 159.57 li
197.763 159.57 li
197.763 166.294 li
193.657 166.294 li
193.657 175.272 li
189.883 175.272 li
189.883 255.563 li
225.777 255.563 li
225.777 175.272 li
222.004 175.272 li
cp
.772549 .772549 .772549 rgb
f
197.468 242.823 mo
195.631 242.823 li
195.631 178.073 li
197.468 178.073 li
197.468 242.823 li
cp
.227451 .447059 .576471 rgb
f
201.142 242.823 mo
199.305 242.823 li
199.305 178.073 li
201.142 178.073 li
201.142 242.823 li
cp
f
204.815 242.823 mo
202.979 242.823 li
202.979 178.073 li
204.815 178.073 li
204.815 242.823 li
cp
f
208.489 242.823 mo
206.652 242.823 li
206.652 178.073 li
208.489 178.073 li
208.489 242.823 li
cp
f
212.162 242.823 mo
210.326 242.823 li
210.326 178.073 li
212.162 178.073 li
212.162 242.823 li
cp
f
215.836 242.823 mo
213.999 242.823 li
213.999 178.073 li
215.836 178.073 li
215.836 242.823 li
cp
f
219.51 242.823 mo
217.672 242.823 li
217.672 178.073 li
219.51 178.073 li
219.51 242.823 li
cp
f
197.468 175.16 mo
195.631 175.16 li
195.631 169.289 li
197.468 169.289 li
197.468 175.16 li
cp
f
201.142 175.16 mo
199.305 175.16 li
199.305 169.289 li
201.142 169.289 li
201.142 175.16 li
cp
f
204.815 175.16 mo
202.979 175.16 li
202.979 169.289 li
204.815 169.289 li
204.815 175.16 li
cp
f
208.489 175.16 mo
206.652 175.16 li
206.652 169.289 li
208.489 169.289 li
208.489 175.16 li
cp
f
212.162 175.16 mo
210.326 175.16 li
210.326 169.289 li
212.162 169.289 li
212.162 175.16 li
cp
f
215.836 175.16 mo
213.999 175.16 li
213.999 169.289 li
215.836 169.289 li
215.836 175.16 li
cp
f
219.51 175.16 mo
217.672 175.16 li
217.672 169.289 li
219.51 169.289 li
219.51 175.16 li
cp
f
229.673 146.123 mo
225.777 146.123 li
225.777 255.563 li
229.673 255.563 li
229.673 146.123 li
cp
.580392 .580392 .580392 rgb
f
189.883 146.123 mo
185.988 146.123 li
185.988 255.563 li
189.883 255.563 li
189.883 146.123 li
cp
.909804 .909804 .909804 rgb
f
229.673 242.823 mo
185.988 242.823 li
185.988 255.563 li
229.673 255.563 li
229.673 242.823 li
cp
.141176 .290196 .356863 rgb
f
225.777 248.363 mo
189.883 248.363 li
189.883 251.343 li
194.104 255.563 li
221.558 255.563 li
225.777 251.343 li
225.777 248.363 li
cp
.772549 .772549 .772549 rgb
f
194.104 251.343 mo
189.883 251.343 li
189.883 255.563 li
194.104 255.563 li
194.104 251.343 li
cp
.0862745 .168627 .219608 rgb
f
200.434 251.343 mo
196.214 251.343 li
196.214 255.563 li
200.434 255.563 li
200.434 251.343 li
cp
f
206.786 251.343 mo
202.567 251.343 li
202.567 255.563 li
206.786 255.563 li
206.786 251.343 li
cp
f
213.116 251.343 mo
208.896 251.343 li
208.896 255.563 li
213.116 255.563 li
213.116 251.343 li
cp
f
219.447 251.343 mo
215.228 251.343 li
215.228 255.563 li
219.447 255.563 li
219.447 251.343 li
cp
f
225.777 251.343 mo
221.558 251.343 li
221.558 255.563 li
225.777 255.563 li
225.777 251.343 li
cp
f
225.777 178.073 mo
189.883 178.073 li
189.883 175.16 li
225.777 175.16 li
225.777 178.073 li
cp
.909804 .909804 .909804 rgb
f
345.814 157.775 mo
338.565 157.775 li
338.565 153.839 li
345.814 153.839 li
345.814 157.775 li
cp
.827451 .827451 .827451 rgb
f
342.229 147.66 mo
342.151 147.66 li
341.693 153.839 li
342.686 153.839 li
342.229 147.66 li
cp
.615686 .615686 .615686 rgb
f
319.273 157.775 mo
312.025 157.775 li
312.025 153.839 li
319.273 153.839 li
319.273 157.775 li
cp
.827451 .827451 .827451 rgb
f
315.688 147.66 mo
315.61 147.66 li
315.152 153.839 li
316.146 153.839 li
315.688 147.66 li
cp
.615686 .615686 .615686 rgb
f
354.493 255.563 mo
303.348 255.563 li
303.348 157.775 li
354.493 157.775 li
354.493 255.563 li
cp
.890196 .890196 .890196 rgb
f
311.535 167.757 mo
305.697 167.757 li
305.697 165.362 li
311.535 165.362 li
311.535 167.757 li
cp
.247059 .717647 .713726 rgb
f
318.346 167.757 mo
312.507 167.757 li
312.507 165.362 li
318.346 165.362 li
318.346 167.757 li
cp
f
325.071 167.757 mo
319.233 167.757 li
319.233 165.362 li
325.071 165.362 li
325.071 167.757 li
cp
f
331.882 167.757 mo
326.042 167.757 li
326.042 165.362 li
331.882 165.362 li
331.882 167.757 li
cp
f
338.607 167.757 mo
332.768 167.757 li
332.768 165.362 li
338.607 165.362 li
338.607 167.757 li
cp
f
345.417 167.757 mo
339.578 167.757 li
339.578 165.362 li
345.417 165.362 li
345.417 167.757 li
cp
f
352.143 167.757 mo
346.304 167.757 li
346.304 165.362 li
352.143 165.362 li
352.143 167.757 li
cp
f
311.535 171.351 mo
305.697 171.351 li
305.697 168.955 li
311.535 168.955 li
311.535 171.351 li
cp
f
318.346 171.351 mo
312.507 171.351 li
312.507 168.955 li
318.346 168.955 li
318.346 171.351 li
cp
f
325.071 171.351 mo
319.233 171.351 li
319.233 168.955 li
325.071 168.955 li
325.071 171.351 li
cp
f
331.882 171.351 mo
326.042 171.351 li
326.042 168.955 li
331.882 168.955 li
331.882 171.351 li
cp
f
338.607 171.351 mo
332.768 171.351 li
332.768 168.955 li
338.607 168.955 li
338.607 171.351 li
cp
f
345.417 171.351 mo
339.578 171.351 li
339.578 168.955 li
345.417 168.955 li
345.417 171.351 li
cp
f
352.143 171.351 mo
346.304 171.351 li
346.304 168.955 li
352.143 168.955 li
352.143 171.351 li
cp
f
311.535 174.943 mo
305.697 174.943 li
305.697 172.548 li
311.535 172.548 li
311.535 174.943 li
cp
f
318.346 174.943 mo
312.507 174.943 li
312.507 172.548 li
318.346 172.548 li
318.346 174.943 li
cp
f
325.071 174.943 mo
319.233 174.943 li
319.233 172.548 li
325.071 172.548 li
325.071 174.943 li
cp
f
331.882 174.943 mo
326.042 174.943 li
326.042 172.548 li
331.882 172.548 li
331.882 174.943 li
cp
f
338.607 174.943 mo
332.768 174.943 li
332.768 172.548 li
338.607 172.548 li
338.607 174.943 li
cp
f
345.417 174.943 mo
339.578 174.943 li
339.578 172.548 li
345.417 172.548 li
345.417 174.943 li
cp
f
352.143 174.943 mo
346.304 174.943 li
346.304 172.548 li
352.143 172.548 li
352.143 174.943 li
cp
f
311.535 178.537 mo
305.697 178.537 li
305.697 176.141 li
311.535 176.141 li
311.535 178.537 li
cp
f
318.346 178.537 mo
312.507 178.537 li
312.507 176.141 li
318.346 176.141 li
318.346 178.537 li
cp
f
325.071 178.537 mo
319.233 178.537 li
319.233 176.141 li
325.071 176.141 li
325.071 178.537 li
cp
f
331.882 178.537 mo
326.042 178.537 li
326.042 176.141 li
331.882 176.141 li
331.882 178.537 li
cp
f
338.607 178.537 mo
332.768 178.537 li
332.768 176.141 li
338.607 176.141 li
338.607 178.537 li
cp
f
345.417 178.537 mo
339.578 178.537 li
339.578 176.141 li
345.417 176.141 li
345.417 178.537 li
cp
f
352.143 178.537 mo
346.304 178.537 li
346.304 176.141 li
352.143 176.141 li
352.143 178.537 li
cp
f
311.535 182.129 mo
305.697 182.129 li
305.697 179.734 li
311.535 179.734 li
311.535 182.129 li
cp
f
318.346 182.129 mo
312.507 182.129 li
312.507 179.734 li
318.346 179.734 li
318.346 182.129 li
cp
f
325.071 182.129 mo
319.233 182.129 li
319.233 179.734 li
325.071 179.734 li
325.071 182.129 li
cp
f
331.882 182.129 mo
326.042 182.129 li
326.042 179.734 li
331.882 179.734 li
331.882 182.129 li
cp
f
338.607 182.129 mo
332.768 182.129 li
332.768 179.734 li
338.607 179.734 li
338.607 182.129 li
cp
f
345.417 182.129 mo
339.578 182.129 li
339.578 179.734 li
345.417 179.734 li
345.417 182.129 li
cp
f
352.143 182.129 mo
346.304 182.129 li
346.304 179.734 li
352.143 179.734 li
352.143 182.129 li
cp
f
311.535 185.722 mo
305.697 185.722 li
305.697 183.327 li
311.535 183.327 li
311.535 185.722 li
cp
f
318.346 185.722 mo
312.507 185.722 li
312.507 183.327 li
318.346 183.327 li
318.346 185.722 li
cp
f
325.071 185.722 mo
319.233 185.722 li
319.233 183.327 li
325.071 183.327 li
325.071 185.722 li
cp
f
331.882 185.722 mo
326.042 185.722 li
326.042 183.327 li
331.882 183.327 li
331.882 185.722 li
cp
f
338.607 185.722 mo
332.768 185.722 li
332.768 183.327 li
338.607 183.327 li
338.607 185.722 li
cp
f
345.417 185.722 mo
339.578 185.722 li
339.578 183.327 li
345.417 183.327 li
345.417 185.722 li
cp
f
352.143 185.722 mo
346.304 185.722 li
346.304 183.327 li
352.143 183.327 li
352.143 185.722 li
cp
f
311.535 189.315 mo
305.697 189.315 li
305.697 186.92 li
311.535 186.92 li
311.535 189.315 li
cp
f
318.346 189.315 mo
312.507 189.315 li
312.507 186.92 li
318.346 186.92 li
318.346 189.315 li
cp
f
325.071 189.315 mo
319.233 189.315 li
319.233 186.92 li
325.071 186.92 li
325.071 189.315 li
cp
f
331.882 189.315 mo
326.042 189.315 li
326.042 186.92 li
331.882 186.92 li
331.882 189.315 li
cp
f
338.607 189.315 mo
332.768 189.315 li
332.768 186.92 li
338.607 186.92 li
338.607 189.315 li
cp
f
345.417 189.315 mo
339.578 189.315 li
339.578 186.92 li
345.417 186.92 li
345.417 189.315 li
cp
f
352.143 189.315 mo
346.304 189.315 li
346.304 186.92 li
352.143 186.92 li
352.143 189.315 li
cp
f
311.535 192.908 mo
305.697 192.908 li
305.697 190.513 li
311.535 190.513 li
311.535 192.908 li
cp
f
318.346 192.908 mo
312.507 192.908 li
312.507 190.513 li
318.346 190.513 li
318.346 192.908 li
cp
f
325.071 192.908 mo
319.233 192.908 li
319.233 190.513 li
325.071 190.513 li
325.071 192.908 li
cp
f
331.882 192.908 mo
326.042 192.908 li
326.042 190.513 li
331.882 190.513 li
331.882 192.908 li
cp
f
338.607 192.908 mo
332.768 192.908 li
332.768 190.513 li
338.607 190.513 li
338.607 192.908 li
cp
f
345.417 192.908 mo
339.578 192.908 li
339.578 190.513 li
345.417 190.513 li
345.417 192.908 li
cp
f
352.143 192.908 mo
346.304 192.908 li
346.304 190.513 li
352.143 190.513 li
352.143 192.908 li
cp
f
311.535 196.502 mo
305.697 196.502 li
305.697 194.106 li
311.535 194.106 li
311.535 196.502 li
cp
f
318.346 196.502 mo
312.507 196.502 li
312.507 194.106 li
318.346 194.106 li
318.346 196.502 li
cp
f
325.071 196.502 mo
319.233 196.502 li
319.233 194.106 li
325.071 194.106 li
325.071 196.502 li
cp
f
331.882 196.502 mo
326.042 196.502 li
326.042 194.106 li
331.882 194.106 li
331.882 196.502 li
cp
f
338.607 196.502 mo
332.768 196.502 li
332.768 194.106 li
338.607 194.106 li
338.607 196.502 li
cp
f
345.417 196.502 mo
339.578 196.502 li
339.578 194.106 li
345.417 194.106 li
345.417 196.502 li
cp
f
352.143 196.502 mo
346.304 196.502 li
346.304 194.106 li
352.143 194.106 li
352.143 196.502 li
cp
f
311.535 200.094 mo
305.697 200.094 li
305.697 197.699 li
311.535 197.699 li
311.535 200.094 li
cp
f
318.346 200.094 mo
312.507 200.094 li
312.507 197.699 li
318.346 197.699 li
318.346 200.094 li
cp
f
325.071 200.094 mo
319.233 200.094 li
319.233 197.699 li
325.071 197.699 li
325.071 200.094 li
cp
f
331.882 200.094 mo
326.042 200.094 li
326.042 197.699 li
331.882 197.699 li
331.882 200.094 li
cp
f
338.607 200.094 mo
332.768 200.094 li
332.768 197.699 li
338.607 197.699 li
338.607 200.094 li
cp
f
345.417 200.094 mo
339.578 200.094 li
339.578 197.699 li
345.417 197.699 li
345.417 200.094 li
cp
f
352.143 200.094 mo
346.304 200.094 li
346.304 197.699 li
352.143 197.699 li
352.143 200.094 li
cp
f
311.535 203.687 mo
305.697 203.687 li
305.697 201.292 li
311.535 201.292 li
311.535 203.687 li
cp
f
318.346 203.687 mo
312.507 203.687 li
312.507 201.292 li
318.346 201.292 li
318.346 203.687 li
cp
f
325.071 203.687 mo
319.233 203.687 li
319.233 201.292 li
325.071 201.292 li
325.071 203.687 li
cp
f
331.882 203.687 mo
326.042 203.687 li
326.042 201.292 li
331.882 201.292 li
331.882 203.687 li
cp
f
338.607 203.687 mo
332.768 203.687 li
332.768 201.292 li
338.607 201.292 li
338.607 203.687 li
cp
f
345.417 203.687 mo
339.578 203.687 li
339.578 201.292 li
345.417 201.292 li
345.417 203.687 li
cp
f
352.143 203.687 mo
346.304 203.687 li
346.304 201.292 li
352.143 201.292 li
352.143 203.687 li
cp
f
311.535 207.28 mo
305.697 207.28 li
305.697 204.885 li
311.535 204.885 li
311.535 207.28 li
cp
f
318.346 207.28 mo
312.507 207.28 li
312.507 204.885 li
318.346 204.885 li
318.346 207.28 li
cp
f
325.071 207.28 mo
319.233 207.28 li
319.233 204.885 li
325.071 204.885 li
325.071 207.28 li
cp
f
331.882 207.28 mo
326.042 207.28 li
326.042 204.885 li
331.882 204.885 li
331.882 207.28 li
cp
f
338.607 207.28 mo
332.768 207.28 li
332.768 204.885 li
338.607 204.885 li
338.607 207.28 li
cp
f
345.417 207.28 mo
339.578 207.28 li
339.578 204.885 li
345.417 204.885 li
345.417 207.28 li
cp
f
352.143 207.28 mo
346.304 207.28 li
346.304 204.885 li
352.143 204.885 li
352.143 207.28 li
cp
f
311.535 210.874 mo
305.697 210.874 li
305.697 208.478 li
311.535 208.478 li
311.535 210.874 li
cp
f
318.346 210.874 mo
312.507 210.874 li
312.507 208.478 li
318.346 208.478 li
318.346 210.874 li
cp
f
325.071 210.874 mo
319.233 210.874 li
319.233 208.478 li
325.071 208.478 li
325.071 210.874 li
cp
f
331.882 210.874 mo
326.042 210.874 li
326.042 208.478 li
331.882 208.478 li
331.882 210.874 li
cp
f
338.607 210.874 mo
332.768 210.874 li
332.768 208.478 li
338.607 208.478 li
338.607 210.874 li
cp
f
345.417 210.874 mo
339.578 210.874 li
339.578 208.478 li
345.417 208.478 li
345.417 210.874 li
cp
f
352.143 210.874 mo
346.304 210.874 li
346.304 208.478 li
352.143 208.478 li
352.143 210.874 li
cp
f
311.535 214.467 mo
305.697 214.467 li
305.697 212.071 li
311.535 212.071 li
311.535 214.467 li
cp
f
318.346 214.467 mo
312.507 214.467 li
312.507 212.071 li
318.346 212.071 li
318.346 214.467 li
cp
f
325.071 214.467 mo
319.233 214.467 li
319.233 212.071 li
325.071 212.071 li
325.071 214.467 li
cp
f
331.882 214.467 mo
326.042 214.467 li
326.042 212.071 li
331.882 212.071 li
331.882 214.467 li
cp
f
338.607 214.467 mo
332.768 214.467 li
332.768 212.071 li
338.607 212.071 li
338.607 214.467 li
cp
f
345.417 214.467 mo
339.578 214.467 li
339.578 212.071 li
345.417 212.071 li
345.417 214.467 li
cp
f
352.143 214.467 mo
346.304 214.467 li
346.304 212.071 li
352.143 212.071 li
352.143 214.467 li
cp
f
311.535 218.06 mo
305.697 218.06 li
305.697 215.664 li
311.535 215.664 li
311.535 218.06 li
cp
f
318.346 218.06 mo
312.507 218.06 li
312.507 215.664 li
318.346 215.664 li
318.346 218.06 li
cp
f
325.071 218.06 mo
319.233 218.06 li
319.233 215.664 li
325.071 215.664 li
325.071 218.06 li
cp
f
331.882 218.06 mo
326.042 218.06 li
326.042 215.664 li
331.882 215.664 li
331.882 218.06 li
cp
f
338.607 218.06 mo
332.768 218.06 li
332.768 215.664 li
338.607 215.664 li
338.607 218.06 li
cp
f
345.417 218.06 mo
339.578 218.06 li
339.578 215.664 li
345.417 215.664 li
345.417 218.06 li
cp
f
352.143 218.06 mo
346.304 218.06 li
346.304 215.664 li
352.143 215.664 li
352.143 218.06 li
cp
f
311.535 221.653 mo
305.697 221.653 li
305.697 219.257 li
311.535 219.257 li
311.535 221.653 li
cp
f
318.346 221.653 mo
312.507 221.653 li
312.507 219.257 li
318.346 219.257 li
318.346 221.653 li
cp
f
325.071 221.653 mo
319.233 221.653 li
319.233 219.257 li
325.071 219.257 li
325.071 221.653 li
cp
f
331.882 221.653 mo
326.042 221.653 li
326.042 219.257 li
331.882 219.257 li
331.882 221.653 li
cp
f
338.607 221.653 mo
332.768 221.653 li
332.768 219.257 li
338.607 219.257 li
338.607 221.653 li
cp
f
345.417 221.653 mo
339.578 221.653 li
339.578 219.257 li
345.417 219.257 li
345.417 221.653 li
cp
f
352.143 221.653 mo
346.304 221.653 li
346.304 219.257 li
352.143 219.257 li
352.143 221.653 li
cp
f
311.535 225.245 mo
305.697 225.245 li
305.697 222.85 li
311.535 222.85 li
311.535 225.245 li
cp
f
318.346 225.245 mo
312.507 225.245 li
312.507 222.85 li
318.346 222.85 li
318.346 225.245 li
cp
f
325.071 225.245 mo
319.233 225.245 li
319.233 222.85 li
325.071 222.85 li
325.071 225.245 li
cp
f
331.882 225.245 mo
326.042 225.245 li
326.042 222.85 li
331.882 222.85 li
331.882 225.245 li
cp
f
338.607 225.245 mo
332.768 225.245 li
332.768 222.85 li
338.607 222.85 li
338.607 225.245 li
cp
f
345.417 225.245 mo
339.578 225.245 li
339.578 222.85 li
345.417 222.85 li
345.417 225.245 li
cp
f
352.143 225.245 mo
346.304 225.245 li
346.304 222.85 li
352.143 222.85 li
352.143 225.245 li
cp
f
311.535 228.839 mo
305.697 228.839 li
305.697 226.443 li
311.535 226.443 li
311.535 228.839 li
cp
f
318.346 228.839 mo
312.507 228.839 li
312.507 226.443 li
318.346 226.443 li
318.346 228.839 li
cp
f
325.071 228.839 mo
319.233 228.839 li
319.233 226.443 li
325.071 226.443 li
325.071 228.839 li
cp
f
331.882 228.839 mo
326.042 228.839 li
326.042 226.443 li
331.882 226.443 li
331.882 228.839 li
cp
f
338.607 228.839 mo
332.768 228.839 li
332.768 226.443 li
338.607 226.443 li
338.607 228.839 li
cp
f
345.417 228.839 mo
339.578 228.839 li
339.578 226.443 li
345.417 226.443 li
345.417 228.839 li
cp
f
352.143 228.839 mo
346.304 228.839 li
346.304 226.443 li
352.143 226.443 li
352.143 228.839 li
cp
f
311.535 232.432 mo
305.697 232.432 li
305.697 230.035 li
311.535 230.035 li
311.535 232.432 li
cp
f
318.346 232.432 mo
312.507 232.432 li
312.507 230.035 li
318.346 230.035 li
318.346 232.432 li
cp
f
325.071 232.432 mo
319.233 232.432 li
319.233 230.035 li
325.071 230.035 li
325.071 232.432 li
cp
f
331.882 232.432 mo
326.042 232.432 li
326.042 230.035 li
331.882 230.035 li
331.882 232.432 li
cp
f
338.607 232.432 mo
332.768 232.432 li
332.768 230.035 li
338.607 230.035 li
338.607 232.432 li
cp
f
345.417 232.432 mo
339.578 232.432 li
339.578 230.035 li
345.417 230.035 li
345.417 232.432 li
cp
f
352.143 232.432 mo
346.304 232.432 li
346.304 230.035 li
352.143 230.035 li
352.143 232.432 li
cp
f
311.535 236.024 mo
305.697 236.024 li
305.697 233.628 li
311.535 233.628 li
311.535 236.024 li
cp
f
318.346 236.024 mo
312.507 236.024 li
312.507 233.628 li
318.346 233.628 li
318.346 236.024 li
cp
f
325.071 236.024 mo
319.233 236.024 li
319.233 233.628 li
325.071 233.628 li
325.071 236.024 li
cp
f
331.882 236.024 mo
326.042 236.024 li
326.042 233.628 li
331.882 233.628 li
331.882 236.024 li
cp
f
338.607 236.024 mo
332.768 236.024 li
332.768 233.628 li
338.607 233.628 li
338.607 236.024 li
cp
f
345.417 236.024 mo
339.578 236.024 li
339.578 233.628 li
345.417 233.628 li
345.417 236.024 li
cp
f
352.143 236.024 mo
346.304 236.024 li
346.304 233.628 li
352.143 233.628 li
352.143 236.024 li
cp
f
311.535 239.617 mo
305.697 239.617 li
305.697 237.223 li
311.535 237.223 li
311.535 239.617 li
cp
f
318.346 239.617 mo
312.507 239.617 li
312.507 237.223 li
318.346 237.223 li
318.346 239.617 li
cp
f
325.071 239.617 mo
319.233 239.617 li
319.233 237.223 li
325.071 237.223 li
325.071 239.617 li
cp
f
331.882 239.617 mo
326.042 239.617 li
326.042 237.223 li
331.882 237.223 li
331.882 239.617 li
cp
f
338.607 239.617 mo
332.768 239.617 li
332.768 237.223 li
338.607 237.223 li
338.607 239.617 li
cp
f
345.417 239.617 mo
339.578 239.617 li
339.578 237.223 li
345.417 237.223 li
345.417 239.617 li
cp
f
352.143 239.617 mo
346.304 239.617 li
346.304 237.223 li
352.143 237.223 li
352.143 239.617 li
cp
f
311.535 243.21 mo
305.697 243.21 li
305.697 240.815 li
311.535 240.815 li
311.535 243.21 li
cp
f
318.346 243.21 mo
312.507 243.21 li
312.507 240.815 li
318.346 240.815 li
318.346 243.21 li
cp
f
325.071 243.21 mo
319.233 243.21 li
319.233 240.815 li
325.071 240.815 li
325.071 243.21 li
cp
f
331.882 243.21 mo
326.042 243.21 li
326.042 240.815 li
331.882 240.815 li
331.882 243.21 li
cp
f
338.607 243.21 mo
332.768 243.21 li
332.768 240.815 li
338.607 240.815 li
338.607 243.21 li
cp
f
345.417 243.21 mo
339.578 243.21 li
339.578 240.815 li
345.417 240.815 li
345.417 243.21 li
cp
f
352.143 243.21 mo
346.304 243.21 li
346.304 240.815 li
352.143 240.815 li
352.143 243.21 li
cp
f
307.909 162.531 mo
305.697 162.531 li
305.697 157.775 li
307.909 157.775 li
307.909 162.531 li
cp
.666667 .666667 .666667 rgb
f
312.333 162.531 mo
310.12 162.531 li
310.12 157.775 li
312.333 157.775 li
312.333 162.531 li
cp
f
316.756 162.531 mo
314.543 162.531 li
314.543 157.775 li
316.756 157.775 li
316.756 162.531 li
cp
f
321.179 162.531 mo
318.968 162.531 li
318.968 157.775 li
321.179 157.775 li
321.179 162.531 li
cp
f
325.603 162.531 mo
323.391 162.531 li
323.391 157.775 li
325.603 157.775 li
325.603 162.531 li
cp
f
330.025 162.531 mo
327.815 162.531 li
327.815 157.775 li
330.025 157.775 li
330.025 162.531 li
cp
f
334.449 162.531 mo
332.236 162.531 li
332.236 157.775 li
334.449 157.775 li
334.449 162.531 li
cp
f
338.873 162.531 mo
336.66 162.531 li
336.66 157.775 li
338.873 157.775 li
338.873 162.531 li
cp
f
343.295 162.531 mo
341.084 162.531 li
341.084 157.775 li
343.295 157.775 li
343.295 162.531 li
cp
f
347.719 162.531 mo
345.508 162.531 li
345.508 157.775 li
347.719 157.775 li
347.719 162.531 li
cp
f
352.143 162.531 mo
349.931 162.531 li
349.931 157.775 li
352.143 157.775 li
352.143 162.531 li
cp
f
354.493 165.362 mo
354.493 200.499 li
361.07 200.499 li
361.07 171.939 li
354.493 165.362 li
cp
f
354.493 208.073 mo
354.493 243.21 li
361.07 243.21 li
361.07 214.65 li
354.493 208.073 li
cp
f
303.348 165.362 mo
303.348 200.499 li
296.77 200.499 li
296.77 171.939 li
303.348 165.362 li
cp
.8 .8 .8 rgb
f
303.348 208.073 mo
303.348 243.21 li
296.77 243.21 li
296.77 214.65 li
303.348 208.073 li
cp
f
352.143 246.959 mo
345.417 246.959 li
352.143 253.686 li
352.143 246.959 li
cp
.184314 .537255 .537255 rgb
f
312.507 250.949 mo
312.507 249.342 li
312.507 249.014 li
312.507 246.959 li
305.697 246.959 li
305.697 255.563 li
312.507 255.563 li
312.507 251.278 li
312.507 250.949 li
cp
f
345.417 246.959 mo
345.417 249.014 li
345.417 249.342 li
345.417 250.218 li
345.417 250.949 li
345.417 251.278 li
345.417 255.563 li
352.143 255.563 li
352.143 253.686 li
345.417 246.959 li
cp
.137255 .403922 .403922 rgb
f
334.633 249.014 mo
312.507 249.014 li
312.835 249.342 li
315.211 249.342 li
315.539 249.342 li
317.932 249.342 li
318.26 249.342 li
320.634 249.342 li
320.962 249.342 li
322.557 249.342 li
323.355 249.342 li
323.684 249.342 li
326.076 249.342 li
326.404 249.342 li
328.797 249.342 li
329.126 249.342 li
331.518 249.342 li
331.848 249.342 li
334.273 249.342 li
334.603 249.342 li
334.633 249.342 li
336.994 249.342 li
337.322 249.342 li
339.697 249.342 li
340.025 249.342 li
342.418 249.342 li
342.746 249.342 li
344.527 249.342 li
345.417 249.342 li
345.417 249.014 li
344.198 249.014 li
334.633 249.014 li
cp
.376471 .376471 .376471 rgb
f
312.507 249.014 mo
312.507 249.342 li
312.835 249.342 li
312.507 249.014 li
cp
.74902 .74902 .74902 rgb
f
326.404 250.949 mo
328.797 250.949 li
328.797 249.342 li
326.404 249.342 li
326.404 250.949 li
cp
.0705882 .203922 .203922 rgb
f
329.126 250.949 mo
331.518 250.949 li
331.518 249.342 li
329.126 249.342 li
329.126 250.949 li
cp
f
323.684 250.949 mo
323.811 250.949 li
326.076 250.949 li
326.076 249.342 li
323.684 249.342 li
323.684 250.949 li
cp
f
312.507 249.342 mo
312.507 250.949 li
314.443 250.949 li
312.835 249.342 li
312.507 249.342 li
cp
.0941176 .270588 .270588 rgb
f
322.557 249.342 mo
320.962 249.342 li
320.962 250.949 li
323.355 250.949 li
323.355 249.342 li
322.557 249.342 li
cp
.0705882 .203922 .203922 rgb
f
318.26 249.342 mo
318.26 250.949 li
320.634 250.949 li
320.634 249.342 li
318.26 249.342 li
cp
f
315.539 249.342 mo
315.539 250.949 li
317.932 250.949 li
317.932 249.342 li
315.539 249.342 li
cp
f
312.835 249.342 mo
314.443 250.949 li
315.211 250.949 li
315.211 249.342 li
312.835 249.342 li
cp
f
314.772 251.278 mo
312.507 251.278 li
312.507 255.563 li
315.211 255.563 li
315.211 251.717 li
314.772 251.278 li
cp
.0941176 .270588 .270588 rgb
f
318.26 255.563 mo
319.056 255.563 li
318.26 254.766 li
318.26 255.563 li
cp
f
315.539 252.045 mo
315.539 255.563 li
317.932 255.563 li
317.932 254.438 li
315.539 252.045 li
cp
f
318.26 251.278 mo
318.26 254.766 li
319.056 255.563 li
320.634 255.563 li
320.634 251.278 li
318.26 251.278 li
cp
.0705882 .203922 .203922 rgb
f
326.076 251.278 mo
324.139 251.278 li
323.684 251.278 li
323.684 255.563 li
326.076 255.563 li
326.076 253.216 li
326.076 251.278 li
cp
f
315.211 251.278 mo
314.772 251.278 li
315.211 251.717 li
315.211 251.278 li
cp
f
317.932 254.438 mo
317.932 251.278 li
315.539 251.278 li
315.539 252.045 li
317.932 254.438 li
cp
f
320.962 251.278 mo
320.962 255.563 li
323.355 255.563 li
323.355 251.278 li
320.962 251.278 li
cp
f
334.603 251.278 mo
334.603 255.563 li
336.994 255.563 li
336.994 251.278 li
334.603 251.278 li
cp
f
331.848 251.278 mo
331.848 255.563 li
334.273 255.563 li
334.273 251.278 li
331.848 251.278 li
cp
f
340.025 251.278 mo
340.025 255.563 li
342.418 255.563 li
342.418 251.278 li
340.025 251.278 li
cp
f
337.322 251.278 mo
337.322 255.563 li
339.697 255.563 li
339.697 251.278 li
337.322 251.278 li
cp
f
342.746 251.278 mo
342.746 255.563 li
345.417 255.563 li
345.417 251.278 li
342.746 251.278 li
cp
f
328.306 253.5 mo
327.978 253.5 li
327.978 252.714 li
328.306 252.714 li
328.306 253.5 li
cp
326.404 251.278 mo
326.404 253.543 li
326.404 255.563 li
328.424 255.563 li
328.797 255.563 li
328.797 251.278 li
326.404 251.278 li
cp
f
329.928 253.5 mo
329.6 253.5 li
329.6 252.714 li
329.928 252.714 li
329.928 253.5 li
cp
329.126 251.278 mo
329.126 255.563 li
331.518 255.563 li
331.518 251.278 li
329.126 251.278 li
cp
f
337.322 249.342 mo
337.322 250.949 li
339.697 250.949 li
339.697 249.342 li
337.322 249.342 li
cp
f
334.633 249.342 mo
334.603 249.342 li
334.603 250.949 li
336.994 250.949 li
336.994 249.342 li
334.633 249.342 li
cp
f
331.848 249.342 mo
331.848 250.949 li
334.273 250.949 li
334.273 249.342 li
331.848 249.342 li
cp
f
342.746 249.342 mo
342.746 250.949 li
345.417 250.949 li
345.417 250.218 li
345.417 249.342 li
344.527 249.342 li
342.746 249.342 li
cp
f
340.025 249.342 mo
340.025 250.949 li
342.418 250.949 li
342.418 249.342 li
340.025 249.342 li
cp
f
329.6 253.5 mo
329.928 253.5 li
329.928 252.714 li
329.6 252.714 li
329.6 253.5 li
cp
.74902 .74902 .74902 rgb
f
327.978 253.5 mo
328.306 253.5 li
328.306 252.714 li
327.978 252.714 li
327.978 253.5 li
cp
f
312.507 251.278 mo
314.772 251.278 li
314.443 250.949 li
312.507 250.949 li
312.507 251.278 li
cp
1 1 1 rgb
f
315.211 251.717 mo
315.211 255.563 li
315.539 255.563 li
315.539 252.045 li
315.211 251.717 li
cp
f
317.932 254.438 mo
317.932 255.563 li
318.26 255.563 li
318.26 254.766 li
317.932 254.438 li
cp
f
342.746 250.949 mo
342.746 249.342 li
342.418 249.342 li
342.418 250.949 li
340.025 250.949 li
340.025 249.342 li
339.697 249.342 li
339.697 250.949 li
337.322 250.949 li
337.322 249.342 li
336.994 249.342 li
336.994 250.949 li
334.603 250.949 li
334.603 249.342 li
334.273 249.342 li
334.273 250.949 li
331.848 250.949 li
331.848 249.342 li
331.518 249.342 li
331.518 250.949 li
329.126 250.949 li
329.126 249.342 li
328.797 249.342 li
328.797 250.949 li
326.404 250.949 li
326.404 249.342 li
326.076 249.342 li
326.076 250.949 li
323.811 250.949 li
323.684 250.949 li
323.684 249.342 li
323.355 249.342 li
323.355 250.949 li
320.962 250.949 li
320.962 249.342 li
320.634 249.342 li
320.634 250.949 li
318.26 250.949 li
318.26 249.342 li
317.932 249.342 li
317.932 250.949 li
315.539 250.949 li
315.539 249.342 li
315.211 249.342 li
315.211 250.949 li
314.443 250.949 li
314.772 251.278 li
315.211 251.278 li
315.211 251.717 li
315.539 252.045 li
315.539 251.278 li
317.932 251.278 li
317.932 254.438 li
318.26 254.766 li
318.26 251.278 li
320.634 251.278 li
320.634 255.563 li
320.962 255.563 li
320.962 251.278 li
323.355 251.278 li
323.355 255.563 li
323.684 255.563 li
323.684 251.278 li
324.139 251.278 li
326.076 251.278 li
326.076 253.216 li
326.076 255.563 li
326.404 255.563 li
326.404 253.543 li
326.404 251.278 li
328.797 251.278 li
328.797 255.563 li
329.126 255.563 li
329.126 251.278 li
331.518 251.278 li
331.518 255.563 li
331.848 255.563 li
331.848 251.278 li
334.273 251.278 li
334.273 255.563 li
334.603 255.563 li
334.603 251.278 li
336.994 251.278 li
336.994 255.563 li
337.322 255.563 li
337.322 251.278 li
339.697 251.278 li
339.697 255.563 li
340.025 255.563 li
340.025 251.278 li
342.418 251.278 li
342.418 255.563 li
342.746 255.563 li
342.746 251.278 li
345.417 251.278 li
345.417 250.949 li
342.746 250.949 li
cp
.74902 .74902 .74902 rgb
f
312.507 246.959 mo
312.507 249.014 li
328.972 249.014 li
328.972 246.959 li
312.507 246.959 li
cp
.956863 .956863 .956863 rgb
f
328.972 246.959 mo
328.972 249.014 li
334.633 249.014 li
344.198 249.014 li
345.417 249.014 li
345.417 246.959 li
328.972 246.959 li
cp
.717647 .717647 .717647 rgb
f
359.866 170.735 mo
361.07 171.939 li
361.07 200.499 li
359.866 200.499 li
359.866 170.735 li
cp
.184314 .537255 .537255 rgb
f
359.866 213.446 mo
361.07 214.65 li
361.07 243.21 li
359.866 243.21 li
359.866 213.446 li
cp
f
298.001 170.735 mo
296.797 171.939 li
296.797 200.499 li
298.001 200.499 li
298.001 170.735 li
cp
.247059 .717647 .713726 rgb
f
298.001 213.446 mo
296.797 214.65 li
296.797 243.21 li
298.001 243.21 li
298.001 213.446 li
cp
f
78.4355 232.257 mo
78.4355 166.682 li
53.0962 166.682 li
53.0962 232.257 li
53.0962 235.903 li
53.0962 255.563 li
121.263 255.563 li
121.263 232.257 li
78.4355 232.257 li
cp
.4 .4 .4 rgb
f
63.8354 186.412 mo
53.0962 186.412 li
53.0962 183.546 li
63.8354 183.546 li
63.8354 186.412 li
cp
.639216 .639216 .639216 rgb
f
78.4355 186.412 mo
67.6963 186.412 li
67.6963 183.546 li
78.4355 183.546 li
78.4355 186.412 li
cp
f
63.8354 192.142 mo
53.0962 192.142 li
53.0962 189.276 li
63.8354 189.276 li
63.8354 192.142 li
cp
f
78.4355 192.142 mo
67.6963 192.142 li
67.6963 189.276 li
78.4355 189.276 li
78.4355 192.142 li
cp
f
63.8354 197.873 mo
53.0962 197.873 li
53.0962 195.007 li
63.8354 195.007 li
63.8354 197.873 li
cp
f
78.4355 197.873 mo
67.6963 197.873 li
67.6963 195.007 li
78.4355 195.007 li
78.4355 197.873 li
cp
f
63.8354 203.604 mo
53.0962 203.604 li
53.0962 200.738 li
63.8354 200.738 li
63.8354 203.604 li
cp
f
78.4355 203.604 mo
67.6963 203.604 li
67.6963 200.738 li
78.4355 200.738 li
78.4355 203.604 li
cp
f
63.8354 209.334 mo
53.0962 209.334 li
53.0962 206.47 li
63.8354 206.47 li
63.8354 209.334 li
cp
f
78.4355 209.334 mo
67.6963 209.334 li
67.6963 206.47 li
78.4355 206.47 li
78.4355 209.334 li
cp
f
63.8354 215.064 mo
53.0962 215.064 li
53.0962 212.199 li
63.8354 212.199 li
63.8354 215.064 li
cp
f
78.4355 215.064 mo
67.6963 215.064 li
67.6963 212.199 li
78.4355 212.199 li
78.4355 215.064 li
cp
f
63.8354 220.796 mo
53.0962 220.796 li
53.0962 217.931 li
63.8354 217.931 li
63.8354 220.796 li
cp
f
78.4355 220.796 mo
67.6963 220.796 li
67.6963 217.931 li
78.4355 217.931 li
78.4355 220.796 li
cp
f
63.8354 226.525 mo
53.0962 226.525 li
53.0962 223.661 li
63.8354 223.661 li
63.8354 226.525 li
cp
f
78.4355 226.525 mo
67.6963 226.525 li
67.6963 223.661 li
78.4355 223.661 li
78.4355 226.525 li
cp
f
63.8354 232.257 mo
53.0962 232.257 li
53.0962 229.391 li
63.8354 229.391 li
63.8354 232.257 li
cp
f
78.4355 232.257 mo
67.6963 232.257 li
67.6963 229.391 li
78.4355 229.391 li
78.4355 232.257 li
cp
f
121.263 255.563 mo
53.0962 255.563 li
53.0962 252.697 li
121.263 252.697 li
121.263 255.563 li
cp
f
124.289 240.163 mo
50.0718 240.163 li
50.0718 232.257 li
124.289 232.257 li
124.289 240.163 li
cp
.760784 .760784 .760784 rgb
f
78.4355 229.391 mo
78.4355 232.257 li
121.263 232.257 li
96.6782 229.391 li
78.4355 229.391 li
cp
.247059 .486275 .627451 rgb
f
59.5361 242.578 mo
55.604 246.51 li
59.5361 246.51 li
59.5361 242.578 li
cp
.101961 .101961 .101961 rgb
f
55.604 242.578 mo
55.604 246.51 li
59.5361 242.578 li
55.604 242.578 li
cp
.2 .2 .2 rgb
f
55.604 242.578 mo
59.5361 242.578 li
59.5361 246.51 li
55.604 246.51 li
55.604 242.578 li
cp
54.8667 247.247 mo
60.2729 247.247 li
60.2729 241.841 li
54.8667 241.841 li
54.8667 247.247 li
cp
.760784 .760784 .760784 rgb
f
67.9365 242.578 mo
64.0044 246.51 li
67.9365 246.51 li
67.9365 242.578 li
cp
.101961 .101961 .101961 rgb
f
64.0044 242.578 mo
64.0044 246.51 li
67.9365 242.578 li
64.0044 242.578 li
cp
.2 .2 .2 rgb
f
64.0044 242.578 mo
67.9365 242.578 li
67.9365 246.51 li
64.0044 246.51 li
64.0044 242.578 li
cp
63.2676 247.247 mo
68.6738 247.247 li
68.6738 241.841 li
63.2676 241.841 li
63.2676 247.247 li
cp
.760784 .760784 .760784 rgb
f
76.3369 242.578 mo
72.4053 246.51 li
76.3369 246.51 li
76.3369 242.578 li
cp
.101961 .101961 .101961 rgb
f
72.4053 242.578 mo
72.4053 246.51 li
76.3369 242.578 li
72.4053 242.578 li
cp
.2 .2 .2 rgb
f
72.4053 242.578 mo
76.3369 242.578 li
76.3369 246.51 li
72.4053 246.51 li
72.4053 242.578 li
cp
71.668 247.247 mo
77.0747 247.247 li
77.0747 241.841 li
71.668 241.841 li
71.668 247.247 li
cp
.760784 .760784 .760784 rgb
f
84.7378 242.578 mo
80.8061 246.51 li
84.7378 246.51 li
84.7378 242.578 li
cp
.101961 .101961 .101961 rgb
f
80.8061 242.578 mo
80.8061 246.51 li
84.7378 242.578 li
80.8061 242.578 li
cp
.2 .2 .2 rgb
f
80.8061 242.578 mo
84.7378 242.578 li
84.7378 246.51 li
80.8061 246.51 li
80.8061 242.578 li
cp
80.0688 247.247 mo
85.4756 247.247 li
85.4756 241.841 li
80.0688 241.841 li
80.0688 247.247 li
cp
.760784 .760784 .760784 rgb
f
93.1387 242.578 mo
89.2065 246.51 li
93.1387 246.51 li
93.1387 242.578 li
cp
.101961 .101961 .101961 rgb
f
89.2065 242.578 mo
89.2065 246.51 li
93.1387 242.578 li
89.2065 242.578 li
cp
.2 .2 .2 rgb
f
89.2065 242.578 mo
93.1387 242.578 li
93.1387 246.51 li
89.2065 246.51 li
89.2065 242.578 li
cp
88.4692 247.247 mo
93.876 247.247 li
93.876 241.841 li
88.4692 241.841 li
88.4692 247.247 li
cp
.760784 .760784 .760784 rgb
f
101.54 242.578 mo
97.6069 246.51 li
101.54 246.51 li
101.54 242.578 li
cp
.101961 .101961 .101961 rgb
f
97.6069 242.578 mo
97.6069 246.51 li
101.54 242.578 li
97.6069 242.578 li
cp
.2 .2 .2 rgb
f
97.6069 242.578 mo
101.54 242.578 li
101.54 246.51 li
97.6069 246.51 li
97.6069 242.578 li
cp
96.8696 247.247 mo
102.276 247.247 li
102.276 241.841 li
96.8696 241.841 li
96.8696 247.247 li
cp
.760784 .760784 .760784 rgb
f
109.94 242.578 mo
106.008 246.51 li
109.94 246.51 li
109.94 242.578 li
cp
.101961 .101961 .101961 rgb
f
106.008 242.578 mo
106.008 246.51 li
109.94 242.578 li
106.008 242.578 li
cp
.2 .2 .2 rgb
f
106.008 242.578 mo
109.94 242.578 li
109.94 246.51 li
106.008 246.51 li
106.008 242.578 li
cp
105.271 247.247 mo
110.677 247.247 li
110.677 241.841 li
105.271 241.841 li
105.271 247.247 li
cp
.760784 .760784 .760784 rgb
f
114.409 246.51 mo
118.34 242.578 li
114.409 242.578 li
114.409 246.51 li
cp
.2 .2 .2 rgb
f
118.34 246.51 mo
118.34 242.578 li
114.409 246.51 li
118.34 246.51 li
cp
.101961 .101961 .101961 rgb
f
118.34 246.51 mo
114.409 246.51 li
114.409 242.578 li
118.34 242.578 li
118.34 246.51 li
cp
113.671 241.841 mo
113.671 247.247 li
119.078 247.247 li
119.078 241.841 li
113.671 241.841 li
cp
.760784 .760784 .760784 rgb
f
59.4136 176.748 mo
55.4809 180.68 li
59.4136 180.68 li
59.4136 176.748 li
cp
.101961 .101961 .101961 rgb
f
55.4809 176.748 mo
55.4809 180.68 li
59.4136 176.748 li
55.4809 176.748 li
cp
.2 .2 .2 rgb
f
55.4809 176.748 mo
59.4136 176.748 li
59.4136 180.68 li
55.4809 180.68 li
55.4809 176.748 li
cp
54.7436 181.417 mo
60.1504 181.417 li
60.1504 176.01 li
54.7436 176.01 li
54.7436 181.417 li
cp
.760784 .760784 .760784 rgb
f
67.814 176.748 mo
63.8813 180.68 li
67.814 180.68 li
67.814 176.748 li
cp
.101961 .101961 .101961 rgb
f
63.8813 176.748 mo
63.8813 180.68 li
67.814 176.748 li
63.8813 176.748 li
cp
.2 .2 .2 rgb
f
63.8813 176.748 mo
67.814 176.748 li
67.814 180.68 li
63.8813 180.68 li
63.8813 176.748 li
cp
63.1445 181.417 mo
68.5508 181.417 li
68.5508 176.01 li
63.1445 176.01 li
63.1445 181.417 li
cp
.760784 .760784 .760784 rgb
f
72.2827 176.748 mo
72.2827 180.68 li
76.2143 176.748 li
72.2827 176.748 li
cp
.2 .2 .2 rgb
f
76.2143 176.748 mo
72.2827 180.68 li
76.2143 180.68 li
76.2143 176.748 li
cp
.101961 .101961 .101961 rgb
f
72.2827 176.748 mo
76.2143 176.748 li
76.2143 180.68 li
72.2827 180.68 li
72.2827 176.748 li
cp
71.5449 181.417 mo
76.9516 181.417 li
76.9516 176.01 li
71.5449 176.01 li
71.5449 181.417 li
cp
.760784 .760784 .760784 rgb
f
55.4809 169.559 mo
55.4809 173.491 li
59.4136 169.559 li
55.4809 169.559 li
cp
.2 .2 .2 rgb
f
59.4136 169.559 mo
55.4809 173.491 li
59.4136 173.491 li
59.4136 169.559 li
cp
.101961 .101961 .101961 rgb
f
55.4809 169.559 mo
59.4136 169.559 li
59.4136 173.491 li
55.4809 173.491 li
55.4809 169.559 li
cp
54.7436 174.229 mo
60.1504 174.229 li
60.1504 168.822 li
54.7436 168.822 li
54.7436 174.229 li
cp
.760784 .760784 .760784 rgb
f
63.8813 169.559 mo
63.8813 173.491 li
67.814 169.559 li
63.8813 169.559 li
cp
.2 .2 .2 rgb
f
67.814 169.559 mo
63.8813 173.491 li
67.814 173.491 li
67.814 169.559 li
cp
.101961 .101961 .101961 rgb
f
63.8813 169.559 mo
67.814 169.559 li
67.814 173.491 li
63.8813 173.491 li
63.8813 169.559 li
cp
63.1445 174.229 mo
68.5508 174.229 li
68.5508 168.822 li
63.1445 168.822 li
63.1445 174.229 li
cp
.760784 .760784 .760784 rgb
f
76.2143 173.491 mo
76.2143 169.559 li
72.2827 173.491 li
76.2143 173.491 li
cp
.101961 .101961 .101961 rgb
f
72.2827 173.491 mo
76.2143 169.559 li
72.2827 169.559 li
72.2827 173.491 li
cp
.2 .2 .2 rgb
f
76.2143 173.491 mo
72.2827 173.491 li
72.2827 169.559 li
76.2143 169.559 li
76.2143 173.491 li
cp
71.5449 168.822 mo
71.5449 174.229 li
76.9516 174.229 li
76.9516 168.822 li
71.5449 168.822 li
cp
.760784 .760784 .760784 rgb
f
84.9399 223.661 mo
80.604 223.661 li
80.604 229.391 li
84.9399 229.391 li
84.9399 223.661 li
cp
f
87.1084 222.171 mo
82.772 222.171 li
82.772 223.66 li
87.1084 223.66 li
87.1084 222.171 li
cp
.854902 .854902 .854902 rgb
f
89.2764 223.661 mo
84.9399 223.661 li
84.9399 229.391 li
89.2764 229.391 li
89.2764 223.661 li
cp
.572549 .572549 .572549 rgb
f
65.8476 164.41 mo
61.5117 164.41 li
61.5117 166.682 li
65.8476 166.682 li
65.8476 164.41 li
cp
.760784 .760784 .760784 rgb
f
68.0156 162.92 mo
63.6792 162.92 li
63.6792 164.41 li
68.0156 164.41 li
68.0156 162.92 li
cp
.854902 .854902 .854902 rgb
f
70.1836 164.41 mo
65.8476 164.41 li
65.8476 166.682 li
70.1836 166.682 li
70.1836 164.41 li
cp
.572549 .572549 .572549 rgb
f
185.492 383.75 mo
215.681 383.75 li
215.681 380.663 li
185.492 380.663 li
185.492 383.75 li
cp
.580392 .580392 .580392 rgb
f
215.681 305.503 mo
185.492 305.503 li
185.492 309.673 li
215.681 309.673 li
215.681 305.503 li
cp
.772549 .772549 .772549 rgb
f
194.752 318.933 mo
215.681 318.933 li
215.681 315.846 li
191.665 315.846 li
194.752 318.933 li
cp
.247059 .717647 .713726 rgb
f
191.665 315.846 mo
185.492 315.846 li
185.492 318.933 li
194.752 318.933 li
191.665 315.846 li
cp
.184314 .537255 .537255 rgb
f
200.925 325.107 mo
215.681 325.107 li
215.681 322.02 li
197.838 322.02 li
200.925 325.107 li
cp
.247059 .717647 .713726 rgb
f
197.838 322.02 mo
185.492 322.02 li
185.492 325.107 li
200.925 325.107 li
197.838 322.02 li
cp
.184314 .537255 .537255 rgb
f
204.011 328.191 mo
185.492 328.191 li
185.492 331.278 li
207.098 331.278 li
204.011 328.191 li
cp
f
207.098 331.278 mo
215.681 331.278 li
215.681 328.191 li
204.011 328.191 li
207.098 331.278 li
cp
.247059 .717647 .713726 rgb
f
210.185 334.365 mo
185.492 334.365 li
185.492 337.451 li
213.271 337.451 li
210.185 334.365 li
cp
.184314 .537255 .537255 rgb
f
213.271 337.451 mo
215.681 337.451 li
215.681 334.365 li
210.185 334.365 li
213.271 337.451 li
cp
.247059 .717647 .713726 rgb
f
185.492 343.625 mo
215.681 343.625 li
215.681 340.538 li
185.492 340.538 li
185.492 343.625 li
cp
.184314 .537255 .537255 rgb
f
185.492 349.798 mo
215.681 349.798 li
215.681 346.712 li
185.492 346.712 li
185.492 349.798 li
cp
f
185.492 355.972 mo
215.681 355.972 li
215.681 352.885 li
185.492 352.885 li
185.492 355.972 li
cp
f
185.492 362.145 mo
215.681 362.145 li
215.681 359.058 li
185.492 359.058 li
185.492 362.145 li
cp
f
185.492 368.316 mo
215.681 368.316 li
215.681 365.23 li
185.492 365.23 li
185.492 368.316 li
cp
f
185.492 374.49 mo
215.681 374.49 li
215.681 371.403 li
185.492 371.403 li
185.492 374.49 li
cp
f
185.492 380.663 mo
215.681 380.663 li
215.681 377.577 li
185.492 377.577 li
185.492 380.663 li
cp
f
194.752 318.933 mo
185.492 318.933 li
185.492 322.02 li
197.838 322.02 li
194.752 318.933 li
cp
.0784314 .313726 .313726 rgb
f
197.838 322.02 mo
215.681 322.02 li
215.681 318.933 li
194.752 318.933 li
197.838 322.02 li
cp
.101961 .419608 .415686 rgb
f
185.492 309.673 mo
185.492 312.76 li
188.578 312.76 li
185.492 309.673 li
cp
.184314 .537255 .537255 rgb
f
215.681 312.76 mo
215.681 309.673 li
185.492 309.673 li
188.578 312.76 li
215.681 312.76 li
cp
.247059 .717647 .713726 rgb
f
188.578 312.76 mo
185.492 312.76 li
185.492 315.846 li
191.665 315.846 li
188.578 312.76 li
cp
.0784314 .313726 .313726 rgb
f
191.665 315.846 mo
215.681 315.846 li
215.681 312.76 li
188.578 312.76 li
191.665 315.846 li
cp
.101961 .419608 .415686 rgb
f
200.925 325.107 mo
185.492 325.107 li
185.492 328.191 li
204.011 328.191 li
200.925 325.107 li
cp
.0784314 .313726 .313726 rgb
f
204.011 328.191 mo
215.681 328.191 li
215.681 325.107 li
200.925 325.107 li
204.011 328.191 li
cp
.101961 .419608 .415686 rgb
f
210.185 334.365 mo
215.681 334.365 li
215.681 331.278 li
207.098 331.278 li
210.185 334.365 li
cp
f
207.098 331.278 mo
185.492 331.278 li
185.492 334.365 li
210.185 334.365 li
207.098 331.278 li
cp
.0784314 .313726 .313726 rgb
f
213.271 337.451 mo
185.492 337.451 li
185.492 340.538 li
215.681 340.538 li
215.681 339.861 li
213.271 337.451 li
cp
f
215.681 339.861 mo
215.681 337.451 li
213.271 337.451 li
215.681 339.861 li
cp
.101961 .419608 .415686 rgb
f
185.492 346.712 mo
215.681 346.712 li
215.681 343.625 li
185.492 343.625 li
185.492 346.712 li
cp
.0784314 .313726 .313726 rgb
f
185.492 352.885 mo
215.681 352.885 li
215.681 349.798 li
185.492 349.798 li
185.492 352.885 li
cp
f
185.492 359.058 mo
215.681 359.058 li
215.681 355.972 li
185.492 355.972 li
185.492 359.058 li
cp
f
185.492 365.23 mo
215.681 365.23 li
215.681 362.145 li
185.492 362.145 li
185.492 365.23 li
cp
f
185.492 371.403 mo
215.681 371.403 li
215.681 368.316 li
185.492 368.316 li
185.492 371.403 li
cp
f
185.492 377.577 mo
215.681 377.577 li
215.681 374.49 li
185.492 374.49 li
185.492 377.577 li
cp
f
185.492 383.75 mo
167.686 383.75 li
167.686 312.76 li
185.492 312.76 li
185.492 383.75 li
cp
.772549 .772549 .772549 rgb
f
185.492 318.933 mo
169.348 318.933 li
169.348 315.846 li
185.492 315.846 li
185.492 318.933 li
cp
.247059 .717647 .713726 rgb
f
185.492 325.107 mo
169.348 325.107 li
169.348 322.02 li
185.492 322.02 li
185.492 325.107 li
cp
f
185.492 331.278 mo
169.348 331.278 li
169.348 328.191 li
185.492 328.191 li
185.492 331.278 li
cp
f
185.492 337.451 mo
169.348 337.451 li
169.348 334.365 li
185.492 334.365 li
185.492 337.451 li
cp
f
185.492 343.625 mo
169.348 343.625 li
169.348 340.538 li
185.492 340.538 li
185.492 343.625 li
cp
f
185.492 349.798 mo
169.348 349.798 li
169.348 346.712 li
185.492 346.712 li
185.492 349.798 li
cp
f
185.492 355.972 mo
169.348 355.972 li
169.348 352.885 li
185.492 352.885 li
185.492 355.972 li
cp
f
185.492 362.145 mo
169.348 362.145 li
169.348 359.058 li
185.492 359.058 li
185.492 362.145 li
cp
f
185.492 368.316 mo
169.348 368.316 li
169.348 365.23 li
185.492 365.23 li
185.492 368.316 li
cp
f
185.492 374.49 mo
169.348 374.49 li
169.348 371.403 li
185.492 371.403 li
185.492 374.49 li
cp
f
185.492 380.663 mo
169.348 380.663 li
169.348 377.577 li
185.492 377.577 li
185.492 380.663 li
cp
f
185.492 322.02 mo
169.348 322.02 li
169.348 318.933 li
185.492 318.933 li
185.492 322.02 li
cp
.101961 .419608 .415686 rgb
f
185.492 328.191 mo
169.348 328.191 li
169.348 325.107 li
185.492 325.107 li
185.492 328.191 li
cp
f
185.492 334.365 mo
169.348 334.365 li
169.348 331.278 li
185.492 331.278 li
185.492 334.365 li
cp
f
185.492 340.538 mo
169.348 340.538 li
169.348 337.451 li
185.492 337.451 li
185.492 340.538 li
cp
f
185.492 346.712 mo
169.348 346.712 li
169.348 343.625 li
185.492 343.625 li
185.492 346.712 li
cp
f
185.492 352.885 mo
169.348 352.885 li
169.348 349.798 li
185.492 349.798 li
185.492 352.885 li
cp
f
185.492 359.058 mo
169.348 359.058 li
169.348 355.972 li
185.492 355.972 li
185.492 359.058 li
cp
f
185.492 365.23 mo
169.348 365.23 li
169.348 362.145 li
185.492 362.145 li
185.492 365.23 li
cp
f
185.492 371.403 mo
169.348 371.403 li
169.348 368.316 li
185.492 368.316 li
185.492 371.403 li
cp
f
185.492 377.577 mo
169.348 377.577 li
169.348 374.49 li
185.492 374.49 li
185.492 377.577 li
cp
f
253.76 383.75 mo
237.616 383.75 li
237.616 343.625 li
253.76 343.625 li
253.76 383.75 li
cp
.772549 .772549 .772549 rgb
f
253.76 349.798 mo
237.616 349.798 li
237.616 346.712 li
253.76 346.712 li
253.76 349.798 li
cp
.247059 .717647 .713726 rgb
f
253.76 355.972 mo
237.616 355.972 li
237.616 352.885 li
253.76 352.885 li
253.76 355.972 li
cp
f
253.76 362.145 mo
237.616 362.145 li
237.616 359.058 li
253.76 359.058 li
253.76 362.145 li
cp
f
253.76 368.316 mo
237.616 368.316 li
237.616 365.23 li
253.76 365.23 li
253.76 368.316 li
cp
f
253.76 374.49 mo
237.616 374.49 li
237.616 371.403 li
253.76 371.403 li
253.76 374.49 li
cp
f
253.76 380.663 mo
237.616 380.663 li
237.616 377.577 li
253.76 377.577 li
253.76 380.663 li
cp
f
253.76 352.885 mo
237.616 352.885 li
237.616 349.798 li
253.76 349.798 li
253.76 352.885 li
cp
.101961 .419608 .415686 rgb
f
253.76 359.058 mo
237.616 359.058 li
237.616 355.972 li
253.76 355.972 li
253.76 359.058 li
cp
f
253.76 365.23 mo
237.616 365.23 li
237.616 362.145 li
253.76 362.145 li
253.76 365.23 li
cp
f
253.76 371.403 mo
237.616 371.403 li
237.616 368.316 li
253.76 368.316 li
253.76 371.403 li
cp
f
253.76 377.577 mo
237.616 377.577 li
237.616 374.49 li
253.76 374.49 li
253.76 377.577 li
cp
f
237.616 383.75 mo
215.681 383.75 li
215.681 331.278 li
237.616 331.278 li
237.616 383.75 li
cp
.772549 .772549 .772549 rgb
f
237.616 337.451 mo
215.681 337.451 li
215.681 334.365 li
237.616 334.365 li
237.616 337.451 li
cp
.247059 .717647 .713726 rgb
f
237.616 343.625 mo
215.681 343.625 li
215.681 340.538 li
237.616 340.538 li
237.616 343.625 li
cp
f
237.616 349.798 mo
215.681 349.798 li
215.681 346.712 li
237.616 346.712 li
237.616 349.798 li
cp
f
237.616 355.972 mo
215.681 355.972 li
215.681 352.885 li
237.616 352.885 li
237.616 355.972 li
cp
f
237.616 362.145 mo
215.681 362.145 li
215.681 359.058 li
237.616 359.058 li
237.616 362.145 li
cp
f
237.616 368.316 mo
215.681 368.316 li
215.681 365.23 li
237.616 365.23 li
237.616 368.316 li
cp
f
237.616 374.49 mo
215.681 374.49 li
215.681 371.403 li
237.616 371.403 li
237.616 374.49 li
cp
f
237.616 380.663 mo
215.681 380.663 li
215.681 377.577 li
237.616 377.577 li
237.616 380.663 li
cp
f
237.616 340.538 mo
215.681 340.538 li
215.681 337.451 li
237.616 337.451 li
237.616 340.538 li
cp
.101961 .419608 .415686 rgb
f
237.616 346.712 mo
215.681 346.712 li
215.681 343.625 li
237.616 343.625 li
237.616 346.712 li
cp
f
237.616 352.885 mo
215.681 352.885 li
215.681 349.798 li
237.616 349.798 li
237.616 352.885 li
cp
f
237.616 359.058 mo
215.681 359.058 li
215.681 355.972 li
237.616 355.972 li
237.616 359.058 li
cp
f
237.616 365.23 mo
215.681 365.23 li
215.681 362.145 li
237.616 362.145 li
237.616 365.23 li
cp
f
237.616 371.403 mo
215.681 371.403 li
215.681 368.316 li
237.616 368.316 li
237.616 371.403 li
cp
f
237.616 377.577 mo
215.681 377.577 li
215.681 374.49 li
237.616 374.49 li
237.616 377.577 li
cp
f
165.901 309.673 mo
185.492 309.673 li
185.492 315.846 li
165.901 315.846 li
165.901 309.673 li
cp
.909804 .909804 .909804 rgb
f
237.614 340.538 mo
256.586 340.538 li
256.586 346.712 li
237.614 346.712 li
237.614 340.538 li
cp
f
215.681 328.191 mo
240.64 328.191 li
240.64 334.365 li
215.681 334.365 li
215.681 328.191 li
cp
f
182.767 303.5 mo
218.445 303.5 li
218.445 309.673 li
182.767 309.673 li
182.767 303.5 li
cp
f
217.344 380.663 mo
215.681 380.663 li
215.681 334.365 li
217.344 334.365 li
217.344 380.663 li
cp
f
169.348 380.663 mo
167.686 380.663 li
167.686 315.846 li
169.348 315.846 li
169.348 380.663 li
cp
f
239.278 380.663 mo
237.616 380.663 li
237.616 346.712 li
239.278 346.712 li
239.278 380.663 li
cp
f
187.154 309.673 mo
185.492 309.673 li
187.154 311.335 li
187.154 309.673 li
cp
f
185.492 309.673 mo
185.492 380.663 li
187.154 380.663 li
187.154 311.335 li
185.492 309.673 li
cp
.682353 .682353 .682353 rgb
f
212.664 298.817 mo
200.606 298.817 li
200.606 303.5 li
212.664 303.5 li
212.664 298.817 li
cp
.537255 .290196 .184314 rgb
f
188.549 298.817 mo
188.549 303.5 li
200.606 303.5 li
200.606 298.817 li
188.549 298.817 li
cp
.717647 .384314 .247059 rgb
f
100.517 383.75 mo
46.8613 383.75 li
46.8613 312.429 li
100.517 312.429 li
100.517 383.75 li
cp
.537255 .290196 .184314 rgb
f
100.517 377.787 mo
46.8613 377.787 li
46.8613 380.758 li
100.517 380.758 li
100.517 377.787 li
cp
.360784 .192157 .12549 rgb
f
100.517 371.846 mo
46.8613 371.846 li
46.8613 374.816 li
100.517 374.816 li
100.517 371.846 li
cp
f
100.517 365.904 mo
46.8613 365.904 li
46.8613 368.874 li
100.517 368.874 li
100.517 365.904 li
cp
f
100.517 359.963 mo
46.8613 359.963 li
46.8613 362.933 li
100.517 362.933 li
100.517 359.963 li
cp
f
100.517 354.021 mo
46.8613 354.021 li
46.8613 356.992 li
100.517 356.992 li
100.517 354.021 li
cp
f
100.517 348.079 mo
46.8613 348.079 li
46.8613 351.05 li
100.517 351.05 li
100.517 348.079 li
cp
f
100.517 342.137 mo
46.8613 342.137 li
46.8613 345.108 li
100.517 345.108 li
100.517 342.137 li
cp
f
100.517 336.195 mo
46.8613 336.195 li
46.8613 339.166 li
100.517 339.166 li
100.517 336.195 li
cp
f
100.517 330.254 mo
46.8613 330.254 li
46.8613 333.224 li
100.517 333.224 li
100.517 330.254 li
cp
f
100.517 324.313 mo
46.8613 324.313 li
46.8613 327.282 li
100.517 327.282 li
100.517 324.313 li
cp
f
100.517 318.37 mo
46.8613 318.37 li
46.8613 321.342 li
100.517 321.342 li
100.517 318.37 li
cp
f
100.517 312.429 mo
46.8613 312.429 li
46.8613 315.399 li
100.517 315.399 li
100.517 312.429 li
cp
f
96.9277 383.75 mo
50.4502 383.75 li
50.4502 303.626 li
96.9277 303.626 li
96.9277 383.75 li
cp
.419608 .192157 .101961 rgb
f
85.3418 383.75 mo
62.0361 383.75 li
62.0361 312.429 li
85.3418 312.429 li
85.3418 383.75 li
cp
.717647 .384314 .247059 rgb
f
85.3418 377.787 mo
62.0361 377.787 li
62.0361 383.75 li
85.3418 383.75 li
85.3418 377.787 li
cp
.537255 .290196 .184314 rgb
f
85.3418 371.846 mo
62.0361 371.846 li
62.0361 374.816 li
85.3418 374.816 li
85.3418 371.846 li
cp
f
85.3418 365.904 mo
62.0361 365.904 li
62.0361 368.874 li
85.3418 368.874 li
85.3418 365.904 li
cp
f
85.3418 359.963 mo
62.0361 359.963 li
62.0361 362.933 li
85.3418 362.933 li
85.3418 359.963 li
cp
f
85.3418 354.021 mo
62.0361 354.021 li
62.0361 356.992 li
85.3418 356.992 li
85.3418 354.021 li
cp
f
85.3418 348.079 mo
62.0361 348.079 li
62.0361 351.05 li
85.3418 351.05 li
85.3418 348.079 li
cp
f
85.3418 342.137 mo
62.0361 342.137 li
62.0361 345.108 li
85.3418 345.108 li
85.3418 342.137 li
cp
f
85.3418 336.195 mo
62.0361 336.195 li
62.0361 339.166 li
85.3418 339.166 li
85.3418 336.195 li
cp
f
85.3418 330.254 mo
62.0361 330.254 li
62.0361 333.224 li
85.3418 333.224 li
85.3418 330.254 li
cp
f
85.3418 324.313 mo
62.0361 324.313 li
62.0361 327.282 li
85.3418 327.282 li
85.3418 324.313 li
cp
f
85.3418 318.37 mo
62.0361 318.37 li
62.0361 321.342 li
85.3418 321.342 li
85.3418 318.37 li
cp
f
85.3418 312.429 mo
62.0361 312.429 li
62.0361 315.399 li
85.3418 315.399 li
85.3418 312.429 li
cp
f
75.9375 379.406 mo
71.4404 379.406 li
71.4404 383.75 li
75.9375 383.75 li
75.9375 379.406 li
cp
.207843 .0980392 .0509804 rgb
f
73.9819 383.75 mo
73.3955 383.75 li
73.3955 379.406 li
73.9819 379.406 li
73.9819 383.75 li
cp
.717647 .384314 .247059 rgb
f
85.3418 312.429 mo
85.3418 383.75 li
96.9277 383.75 li
96.9277 324.015 li
85.3418 312.429 li
cp
.313726 .145098 .0784314 rgb
f
65.8872 303.626 mo
56.749 303.626 li
56.749 299.772 li
65.8872 299.772 li
65.8872 303.626 li
cp
.760784 .760784 .760784 rgb
f
64.1265 303.626 mo
58.5098 303.626 li
58.5098 299.772 li
64.1265 299.772 li
64.1265 303.626 li
cp
.905882 .905882 .905882 rgb
f
63.064 299.772 mo
59.5723 299.772 li
59.5723 296.282 li
63.064 296.282 li
63.064 299.772 li
cp
.678431 .678431 .678431 rgb
f
78.2583 303.626 mo
69.1201 303.626 li
69.1201 299.772 li
78.2583 299.772 li
78.2583 303.626 li
cp
.760784 .760784 .760784 rgb
f
76.4971 303.626 mo
70.8808 303.626 li
70.8808 299.772 li
76.4971 299.772 li
76.4971 303.626 li
cp
.905882 .905882 .905882 rgb
f
75.4346 299.772 mo
71.9433 299.772 li
71.9433 296.282 li
75.4346 296.282 li
75.4346 299.772 li
cp
.678431 .678431 .678431 rgb
f
90.6289 303.626 mo
81.4912 303.626 li
81.4912 299.772 li
90.6289 299.772 li
90.6289 303.626 li
cp
.760784 .760784 .760784 rgb
f
88.8682 303.626 mo
83.251 303.626 li
83.251 299.772 li
88.8682 299.772 li
88.8682 303.626 li
cp
.905882 .905882 .905882 rgb
f
87.8052 299.772 mo
84.3144 299.772 li
84.3144 296.282 li
87.8052 296.282 li
87.8052 299.772 li
cp
.678431 .678431 .678431 rgb
f
88.9233 449.933 mo
65.9282 449.933 li
65.9282 419.366 li
88.9233 419.366 li
88.9233 449.933 li
cp
.537255 .290196 .184314 rgb
f
88.9233 447.378 mo
65.9282 447.378 li
65.9282 448.65 li
88.9233 448.65 li
88.9233 447.378 li
cp
.360784 .192157 .12549 rgb
f
88.9233 444.831 mo
65.9282 444.831 li
65.9282 446.104 li
88.9233 446.104 li
88.9233 444.831 li
cp
f
88.9233 442.284 mo
65.9282 442.284 li
65.9282 443.557 li
88.9233 443.557 li
88.9233 442.284 li
cp
f
88.9233 439.738 mo
65.9282 439.738 li
65.9282 441.012 li
88.9233 441.012 li
88.9233 439.738 li
cp
f
88.9233 437.192 mo
65.9282 437.192 li
65.9282 438.465 li
88.9233 438.465 li
88.9233 437.192 li
cp
f
88.9233 434.645 mo
65.9282 434.645 li
65.9282 435.917 li
88.9233 435.917 li
88.9233 434.645 li
cp
f
88.9233 432.099 mo
65.9282 432.099 li
65.9282 433.372 li
88.9233 433.372 li
88.9233 432.099 li
cp
f
88.9233 429.552 mo
65.9282 429.552 li
65.9282 430.825 li
88.9233 430.825 li
88.9233 429.552 li
cp
f
88.9233 427.006 mo
65.9282 427.006 li
65.9282 428.278 li
88.9233 428.278 li
88.9233 427.006 li
cp
f
88.9233 424.459 mo
65.9282 424.459 li
65.9282 425.733 li
88.9233 425.733 li
88.9233 424.459 li
cp
f
88.9233 421.912 mo
65.9282 421.912 li
65.9282 423.186 li
88.9233 423.186 li
88.9233 421.912 li
cp
f
88.9233 419.366 mo
65.9282 419.366 li
65.9282 420.639 li
88.9233 420.639 li
88.9233 419.366 li
cp
f
87.3848 449.933 mo
67.4663 449.933 li
67.4663 415.594 li
87.3848 415.594 li
87.3848 449.933 li
cp
.419608 .192157 .101961 rgb
f
82.4199 449.933 mo
72.4316 449.933 li
72.4316 419.366 li
82.4199 419.366 li
82.4199 449.933 li
cp
.717647 .384314 .247059 rgb
f
82.4199 447.378 mo
72.4316 447.378 li
72.4316 449.933 li
82.4199 449.933 li
82.4199 447.378 li
cp
.537255 .290196 .184314 rgb
f
82.4199 444.831 mo
72.4316 444.831 li
72.4316 446.104 li
82.4199 446.104 li
82.4199 444.831 li
cp
f
82.4199 442.284 mo
72.4316 442.284 li
72.4316 443.557 li
82.4199 443.557 li
82.4199 442.284 li
cp
f
82.4199 439.738 mo
72.4316 439.738 li
72.4316 441.012 li
82.4199 441.012 li
82.4199 439.738 li
cp
f
82.4199 437.192 mo
72.4316 437.192 li
72.4316 438.465 li
82.4199 438.465 li
82.4199 437.192 li
cp
f
82.4199 434.645 mo
72.4316 434.645 li
72.4316 435.917 li
82.4199 435.917 li
82.4199 434.645 li
cp
f
82.4199 432.099 mo
72.4316 432.099 li
72.4316 433.372 li
82.4199 433.372 li
82.4199 432.099 li
cp
f
82.4199 429.552 mo
72.4316 429.552 li
72.4316 430.825 li
82.4199 430.825 li
82.4199 429.552 li
cp
f
82.4199 427.006 mo
72.4316 427.006 li
72.4316 428.278 li
82.4199 428.278 li
82.4199 427.006 li
cp
f
82.4199 424.459 mo
72.4316 424.459 li
72.4316 425.733 li
82.4199 425.733 li
82.4199 424.459 li
cp
f
82.4199 421.912 mo
72.4316 421.912 li
72.4316 423.186 li
82.4199 423.186 li
82.4199 421.912 li
cp
f
82.4199 419.366 mo
72.4316 419.366 li
72.4316 420.639 li
82.4199 420.639 li
82.4199 419.366 li
cp
f
78.3896 448.071 mo
76.4619 448.071 li
76.4619 449.933 li
78.3896 449.933 li
78.3896 448.071 li
cp
.207843 .0980392 .0509804 rgb
f
77.5513 449.933 mo
77.3003 449.933 li
77.3003 448.071 li
77.5513 448.071 li
77.5513 449.933 li
cp
.717647 .384314 .247059 rgb
f
82.4199 419.366 mo
82.4199 449.933 li
87.3848 449.933 li
87.3848 424.33 li
82.4199 419.366 li
cp
.313726 .145098 .0784314 rgb
f
74.082 415.594 mo
70.166 415.594 li
70.166 413.943 li
74.082 413.943 li
74.082 415.594 li
cp
.760784 .760784 .760784 rgb
f
73.3276 415.594 mo
70.9204 415.594 li
70.9204 413.943 li
73.3276 413.943 li
73.3276 415.594 li
cp
.905882 .905882 .905882 rgb
f
72.8716 413.943 mo
71.3755 413.943 li
71.3755 412.445 li
72.8716 412.445 li
72.8716 413.943 li
cp
.678431 .678431 .678431 rgb
f
79.3838 415.594 mo
75.4678 415.594 li
75.4678 413.943 li
79.3838 413.943 li
79.3838 415.594 li
cp
.760784 .760784 .760784 rgb
f
78.6289 415.594 mo
76.2217 415.594 li
76.2217 413.943 li
78.6289 413.943 li
78.6289 415.594 li
cp
.905882 .905882 .905882 rgb
f
78.1738 413.943 mo
76.6777 413.943 li
76.6777 412.445 li
78.1738 412.445 li
78.1738 413.943 li
cp
.678431 .678431 .678431 rgb
f
84.685 415.594 mo
80.7695 415.594 li
80.7695 413.943 li
84.685 413.943 li
84.685 415.594 li
cp
.760784 .760784 .760784 rgb
f
83.9307 415.594 mo
81.5234 415.594 li
81.5234 413.943 li
83.9307 413.943 li
83.9307 415.594 li
cp
.905882 .905882 .905882 rgb
f
83.4756 413.943 mo
81.9795 413.943 li
81.9795 412.445 li
83.4756 412.445 li
83.4756 413.943 li
cp
.678431 .678431 .678431 rgb
f
224.295 449.972 mo
201.299 449.972 li
201.299 419.405 li
224.295 419.405 li
224.295 449.972 li
cp
.2 .2 .2 rgb
f
224.295 447.417 mo
201.299 447.417 li
201.299 448.689 li
224.295 448.689 li
224.295 447.417 li
cp
.301961 .301961 .301961 rgb
f
224.295 444.87 mo
201.299 444.87 li
201.299 446.143 li
224.295 446.143 li
224.295 444.87 li
cp
f
224.295 442.323 mo
201.299 442.323 li
201.299 443.596 li
224.295 443.596 li
224.295 442.323 li
cp
f
224.295 439.777 mo
201.299 439.777 li
201.299 441.051 li
224.295 441.051 li
224.295 439.777 li
cp
f
224.295 437.232 mo
201.299 437.232 li
201.299 438.504 li
224.295 438.504 li
224.295 437.232 li
cp
f
224.295 434.684 mo
201.299 434.684 li
201.299 435.956 li
224.295 435.956 li
224.295 434.684 li
cp
f
224.295 432.138 mo
201.299 432.138 li
201.299 433.411 li
224.295 433.411 li
224.295 432.138 li
cp
f
224.295 429.591 mo
201.299 429.591 li
201.299 430.864 li
224.295 430.864 li
224.295 429.591 li
cp
f
224.295 427.045 mo
201.299 427.045 li
201.299 428.317 li
224.295 428.317 li
224.295 427.045 li
cp
f
224.295 424.498 mo
201.299 424.498 li
201.299 425.772 li
224.295 425.772 li
224.295 424.498 li
cp
f
224.295 421.951 mo
201.299 421.951 li
201.299 423.225 li
224.295 423.225 li
224.295 421.951 li
cp
f
224.295 419.405 mo
201.299 419.405 li
201.299 420.678 li
224.295 420.678 li
224.295 419.405 li
cp
f
222.756 449.972 mo
202.837 449.972 li
202.837 415.633 li
222.756 415.633 li
222.756 449.972 li
cp
.4 .4 .4 rgb
f
217.791 449.972 mo
207.803 449.972 li
207.803 419.405 li
217.791 419.405 li
217.791 449.972 li
cp
.639216 .639216 .639216 rgb
f
217.791 447.417 mo
207.803 447.417 li
207.803 449.972 li
217.791 449.972 li
217.791 447.417 li
cp
.760784 .760784 .760784 rgb
f
217.791 444.87 mo
207.803 444.87 li
207.803 446.143 li
217.791 446.143 li
217.791 444.87 li
cp
f
217.791 442.323 mo
207.803 442.323 li
207.803 443.596 li
217.791 443.596 li
217.791 442.323 li
cp
f
217.791 439.777 mo
207.803 439.777 li
207.803 441.051 li
217.791 441.051 li
217.791 439.777 li
cp
f
217.791 437.232 mo
207.803 437.232 li
207.803 438.504 li
217.791 438.504 li
217.791 437.232 li
cp
f
217.791 434.684 mo
207.803 434.684 li
207.803 435.956 li
217.791 435.956 li
217.791 434.684 li
cp
f
217.791 432.138 mo
207.803 432.138 li
207.803 433.411 li
217.791 433.411 li
217.791 432.138 li
cp
f
217.791 429.591 mo
207.803 429.591 li
207.803 430.864 li
217.791 430.864 li
217.791 429.591 li
cp
f
217.791 427.045 mo
207.803 427.045 li
207.803 428.317 li
217.791 428.317 li
217.791 427.045 li
cp
f
217.791 424.498 mo
207.803 424.498 li
207.803 425.772 li
217.791 425.772 li
217.791 424.498 li
cp
f
217.791 421.951 mo
207.803 421.951 li
207.803 423.225 li
217.791 423.225 li
217.791 421.951 li
cp
f
217.791 419.405 mo
207.803 419.405 li
207.803 420.678 li
217.791 420.678 li
217.791 419.405 li
cp
f
213.761 448.11 mo
211.833 448.11 li
211.833 449.972 li
213.761 449.972 li
213.761 448.11 li
cp
.2 .2 .2 rgb
f
212.922 449.972 mo
212.672 449.972 li
212.672 448.11 li
212.922 448.11 li
212.922 449.972 li
cp
.4 .4 .4 rgb
f
217.791 419.405 mo
217.791 449.972 li
222.756 449.972 li
222.756 424.369 li
217.791 419.405 li
cp
.301961 .301961 .301961 rgb
f
209.453 415.633 mo
205.537 415.633 li
205.537 413.982 li
209.453 413.982 li
209.453 415.633 li
cp
.760784 .760784 .760784 rgb
f
208.699 415.633 mo
206.291 415.633 li
206.291 413.982 li
208.699 413.982 li
208.699 415.633 li
cp
.905882 .905882 .905882 rgb
f
208.242 413.982 mo
206.746 413.982 li
206.746 412.484 li
208.242 412.484 li
208.242 413.982 li
cp
.678431 .678431 .678431 rgb
f
214.755 415.633 mo
210.839 415.633 li
210.839 413.982 li
214.755 413.982 li
214.755 415.633 li
cp
.760784 .760784 .760784 rgb
f
214 415.633 mo
211.593 415.633 li
211.593 413.982 li
214 413.982 li
214 415.633 li
cp
.905882 .905882 .905882 rgb
f
213.545 413.982 mo
212.049 413.982 li
212.049 412.484 li
213.545 412.484 li
213.545 413.982 li
cp
.678431 .678431 .678431 rgb
f
220.057 415.633 mo
216.141 415.633 li
216.141 413.982 li
220.057 413.982 li
220.057 415.633 li
cp
.760784 .760784 .760784 rgb
f
219.302 415.633 mo
216.895 415.633 li
216.895 413.982 li
219.302 413.982 li
219.302 415.633 li
cp
.905882 .905882 .905882 rgb
f
218.847 413.982 mo
217.351 413.982 li
217.351 412.484 li
218.847 412.484 li
218.847 413.982 li
cp
.678431 .678431 .678431 rgb
f
69.3896 439.175 mo
69.3896 408.718 li
57.6191 408.718 li
57.6191 439.175 li
57.6191 440.869 li
57.6191 450 li
89.2808 450 li
89.2808 439.175 li
69.3896 439.175 li
cp
.4 .4 .4 rgb
f
62.6074 417.882 mo
57.6191 417.882 li
57.6191 416.55 li
62.6074 416.55 li
62.6074 417.882 li
cp
.639216 .639216 .639216 rgb
f
69.3896 417.882 mo
64.4004 417.882 li
64.4004 416.55 li
69.3896 416.55 li
69.3896 417.882 li
cp
f
62.6074 420.544 mo
57.6191 420.544 li
57.6191 419.212 li
62.6074 419.212 li
62.6074 420.544 li
cp
f
69.3896 420.544 mo
64.4004 420.544 li
64.4004 419.212 li
69.3896 419.212 li
69.3896 420.544 li
cp
f
62.6074 423.204 mo
57.6191 423.204 li
57.6191 421.873 li
62.6074 421.873 li
62.6074 423.204 li
cp
f
69.3896 423.204 mo
64.4004 423.204 li
64.4004 421.873 li
69.3896 421.873 li
69.3896 423.204 li
cp
f
62.6074 425.866 mo
57.6191 425.866 li
57.6191 424.536 li
62.6074 424.536 li
62.6074 425.866 li
cp
f
69.3896 425.866 mo
64.4004 425.866 li
64.4004 424.536 li
69.3896 424.536 li
69.3896 425.866 li
cp
f
62.6074 428.528 mo
57.6191 428.528 li
57.6191 427.197 li
62.6074 427.197 li
62.6074 428.528 li
cp
f
69.3896 428.528 mo
64.4004 428.528 li
64.4004 427.197 li
69.3896 427.197 li
69.3896 428.528 li
cp
f
62.6074 431.189 mo
57.6191 431.189 li
57.6191 429.857 li
62.6074 429.857 li
62.6074 431.189 li
cp
f
69.3896 431.189 mo
64.4004 431.189 li
64.4004 429.857 li
69.3896 429.857 li
69.3896 431.189 li
cp
f
62.6074 433.852 mo
57.6191 433.852 li
57.6191 432.521 li
62.6074 432.521 li
62.6074 433.852 li
cp
f
69.3896 433.852 mo
64.4004 433.852 li
64.4004 432.521 li
69.3896 432.521 li
69.3896 433.852 li
cp
f
62.6074 436.514 mo
57.6191 436.514 li
57.6191 435.183 li
62.6074 435.183 li
62.6074 436.514 li
cp
f
69.3896 436.514 mo
64.4004 436.514 li
64.4004 435.183 li
69.3896 435.183 li
69.3896 436.514 li
cp
f
62.6074 439.175 mo
57.6191 439.175 li
57.6191 437.843 li
62.6074 437.843 li
62.6074 439.175 li
cp
f
69.3896 439.175 mo
64.4004 439.175 li
64.4004 437.843 li
69.3896 437.843 li
69.3896 439.175 li
cp
f
89.2808 450 mo
57.6191 450 li
57.6191 448.67 li
89.2808 448.67 li
89.2808 450 li
cp
f
90.686 442.847 mo
56.2143 442.847 li
56.2143 439.175 li
90.686 439.175 li
90.686 442.847 li
cp
.760784 .760784 .760784 rgb
f
69.3896 437.843 mo
69.3896 439.175 li
89.2808 439.175 li
77.8623 437.843 li
69.3896 437.843 li
cp
.247059 .486275 .627451 rgb
f
60.6103 443.97 mo
58.7842 445.795 li
60.6103 445.795 li
60.6103 443.97 li
cp
.101961 .101961 .101961 rgb
f
58.7842 443.97 mo
58.7842 445.795 li
60.6103 443.97 li
58.7842 443.97 li
cp
.2 .2 .2 rgb
f
58.7842 443.97 mo
60.6103 443.97 li
60.6103 445.795 li
58.7842 445.795 li
58.7842 443.97 li
cp
58.4424 446.138 mo
60.9526 446.138 li
60.9526 443.627 li
58.4424 443.627 li
58.4424 446.138 li
cp
.760784 .760784 .760784 rgb
f
64.5122 443.97 mo
62.686 445.795 li
64.5122 445.795 li
64.5122 443.97 li
cp
.101961 .101961 .101961 rgb
f
62.686 443.97 mo
62.686 445.795 li
64.5122 443.97 li
62.686 443.97 li
cp
.2 .2 .2 rgb
f
62.686 443.97 mo
64.5122 443.97 li
64.5122 445.795 li
62.686 445.795 li
62.686 443.97 li
cp
62.3433 446.138 mo
64.8545 446.138 li
64.8545 443.627 li
62.3433 443.627 li
62.3433 446.138 li
cp
.760784 .760784 .760784 rgb
f
68.4136 443.97 mo
66.5874 445.795 li
68.4136 445.795 li
68.4136 443.97 li
cp
.101961 .101961 .101961 rgb
f
66.5874 443.97 mo
66.5874 445.795 li
68.4136 443.97 li
66.5874 443.97 li
cp
.2 .2 .2 rgb
f
66.5874 443.97 mo
68.4136 443.97 li
68.4136 445.795 li
66.5874 445.795 li
66.5874 443.97 li
cp
66.2451 446.138 mo
68.7563 446.138 li
68.7563 443.627 li
66.2451 443.627 li
66.2451 446.138 li
cp
.760784 .760784 .760784 rgb
f
72.3164 443.97 mo
70.4892 445.795 li
72.3164 445.795 li
72.3164 443.97 li
cp
.101961 .101961 .101961 rgb
f
70.4892 443.97 mo
70.4892 445.795 li
72.3164 443.97 li
70.4892 443.97 li
cp
.2 .2 .2 rgb
f
70.4892 443.97 mo
72.3164 443.97 li
72.3164 445.795 li
70.4892 445.795 li
70.4892 443.97 li
cp
70.147 446.138 mo
72.6587 446.138 li
72.6587 443.627 li
70.147 443.627 li
70.147 446.138 li
cp
.760784 .760784 .760784 rgb
f
76.2183 443.97 mo
74.3921 445.795 li
76.2183 445.795 li
76.2183 443.97 li
cp
.101961 .101961 .101961 rgb
f
74.3921 443.97 mo
74.3921 445.795 li
76.2183 443.97 li
74.3921 443.97 li
cp
.2 .2 .2 rgb
f
74.3921 443.97 mo
76.2183 443.97 li
76.2183 445.795 li
74.3921 445.795 li
74.3921 443.97 li
cp
74.0498 446.138 mo
76.5605 446.138 li
76.5605 443.627 li
74.0498 443.627 li
74.0498 446.138 li
cp
.760784 .760784 .760784 rgb
f
80.1201 443.97 mo
78.2934 445.795 li
80.1201 445.795 li
80.1201 443.97 li
cp
.101961 .101961 .101961 rgb
f
78.2934 443.97 mo
78.2934 445.795 li
80.1201 443.97 li
78.2934 443.97 li
cp
.2 .2 .2 rgb
f
78.2934 443.97 mo
80.1201 443.97 li
80.1201 445.795 li
78.2934 445.795 li
78.2934 443.97 li
cp
77.9512 446.138 mo
80.4624 446.138 li
80.4624 443.627 li
77.9512 443.627 li
77.9512 446.138 li
cp
.760784 .760784 .760784 rgb
f
84.0215 443.97 mo
82.1953 445.795 li
84.0215 445.795 li
84.0215 443.97 li
cp
.101961 .101961 .101961 rgb
f
82.1953 443.97 mo
82.1953 445.795 li
84.0215 443.97 li
82.1953 443.97 li
cp
.2 .2 .2 rgb
f
82.1953 443.97 mo
84.0215 443.97 li
84.0215 445.795 li
82.1953 445.795 li
82.1953 443.97 li
cp
81.8535 446.138 mo
84.3633 446.138 li
84.3633 443.627 li
81.8535 443.627 li
81.8535 446.138 li
cp
.760784 .760784 .760784 rgb
f
86.0967 445.795 mo
87.9233 443.97 li
86.0967 443.97 li
86.0967 445.795 li
cp
.2 .2 .2 rgb
f
87.9233 445.795 mo
87.9233 443.97 li
86.0967 445.795 li
87.9233 445.795 li
cp
.101961 .101961 .101961 rgb
f
87.9233 445.795 mo
86.0967 445.795 li
86.0967 443.97 li
87.9233 443.97 li
87.9233 445.795 li
cp
85.7544 443.627 mo
85.7544 446.138 li
88.2656 446.138 li
88.2656 443.627 li
85.7544 443.627 li
cp
.760784 .760784 .760784 rgb
f
60.5532 413.392 mo
58.727 415.219 li
60.5532 415.219 li
60.5532 413.392 li
cp
.101961 .101961 .101961 rgb
f
58.727 413.392 mo
58.727 415.219 li
60.5532 413.392 li
58.727 413.392 li
cp
.2 .2 .2 rgb
f
58.727 413.392 mo
60.5532 413.392 li
60.5532 415.219 li
58.727 415.219 li
58.727 413.392 li
cp
58.3843 415.562 mo
60.8955 415.562 li
60.8955 413.051 li
58.3843 413.051 li
58.3843 415.562 li
cp
.760784 .760784 .760784 rgb
f
64.4551 413.392 mo
62.6289 415.219 li
64.4551 415.219 li
64.4551 413.392 li
cp
.101961 .101961 .101961 rgb
f
62.6289 413.392 mo
62.6289 415.219 li
64.4551 413.392 li
62.6289 413.392 li
cp
.2 .2 .2 rgb
f
62.6289 413.392 mo
64.4551 413.392 li
64.4551 415.219 li
62.6289 415.219 li
62.6289 413.392 li
cp
62.2866 415.562 mo
64.7974 415.562 li
64.7974 413.051 li
62.2866 413.051 li
62.2866 415.562 li
cp
.760784 .760784 .760784 rgb
f
66.5308 413.392 mo
66.5308 415.219 li
68.3569 413.392 li
66.5308 413.392 li
cp
.2 .2 .2 rgb
f
68.3569 413.392 mo
66.5308 415.219 li
68.3569 415.219 li
68.3569 413.392 li
cp
.101961 .101961 .101961 rgb
f
66.5308 413.392 mo
68.3569 413.392 li
68.3569 415.219 li
66.5308 415.219 li
66.5308 413.392 li
cp
66.188 415.562 mo
68.6997 415.562 li
68.6997 413.051 li
66.188 413.051 li
66.188 415.562 li
cp
.760784 .760784 .760784 rgb
f
58.727 410.054 mo
58.727 411.88 li
60.5532 410.054 li
58.727 410.054 li
cp
.2 .2 .2 rgb
f
60.5532 410.054 mo
58.727 411.88 li
60.5532 411.88 li
60.5532 410.054 li
cp
.101961 .101961 .101961 rgb
f
58.727 410.054 mo
60.5532 410.054 li
60.5532 411.88 li
58.727 411.88 li
58.727 410.054 li
cp
58.3843 412.223 mo
60.8955 412.223 li
60.8955 409.712 li
58.3843 409.712 li
58.3843 412.223 li
cp
.760784 .760784 .760784 rgb
f
62.6289 410.054 mo
62.6289 411.88 li
64.4551 410.054 li
62.6289 410.054 li
cp
.2 .2 .2 rgb
f
64.4551 410.054 mo
62.6289 411.88 li
64.4551 411.88 li
64.4551 410.054 li
cp
.101961 .101961 .101961 rgb
f
62.6289 410.054 mo
64.4551 410.054 li
64.4551 411.88 li
62.6289 411.88 li
62.6289 410.054 li
cp
62.2866 412.223 mo
64.7974 412.223 li
64.7974 409.712 li
62.2866 409.712 li
62.2866 412.223 li
cp
.760784 .760784 .760784 rgb
f
68.3569 411.88 mo
68.3569 410.054 li
66.5308 411.88 li
68.3569 411.88 li
cp
.101961 .101961 .101961 rgb
f
66.5308 411.88 mo
68.3569 410.054 li
66.5308 410.054 li
66.5308 411.88 li
cp
.2 .2 .2 rgb
f
68.3569 411.88 mo
66.5308 411.88 li
66.5308 410.054 li
68.3569 410.054 li
68.3569 411.88 li
cp
66.188 409.712 mo
66.188 412.223 li
68.6997 412.223 li
68.6997 409.712 li
66.188 409.712 li
cp
.760784 .760784 .760784 rgb
f
72.4101 435.183 mo
70.3955 435.183 li
70.3955 437.843 li
72.4101 437.843 li
72.4101 435.183 li
cp
f
73.417 434.488 mo
71.4033 434.488 li
71.4033 435.183 li
73.417 435.183 li
73.417 434.488 li
cp
.854902 .854902 .854902 rgb
f
74.4238 435.183 mo
72.4101 435.183 li
72.4101 437.843 li
74.4238 437.843 li
74.4238 435.183 li
cp
.572549 .572549 .572549 rgb
f
63.542 407.662 mo
61.5278 407.662 li
61.5278 408.718 li
63.542 408.718 li
63.542 407.662 li
cp
.760784 .760784 .760784 rgb
f
64.5483 406.971 mo
62.5347 406.971 li
62.5347 407.662 li
64.5483 407.662 li
64.5483 406.971 li
cp
.854902 .854902 .854902 rgb
f
65.5557 407.662 mo
63.542 407.662 li
63.542 408.718 li
65.5557 408.718 li
65.5557 407.662 li
cp
.572549 .572549 .572549 rgb
f
130.133 449.972 mo
112.943 449.972 li
112.943 408.556 li
130.133 408.556 li
130.133 449.972 li
cp
.890196 .890196 .890196 rgb
f
122.923 447.322 mo
120.153 447.322 li
120.153 450 li
122.923 450 li
122.923 447.322 li
cp
.227451 .227451 .227451 rgb
f
121.719 450 mo
121.359 450 li
121.359 447.322 li
121.719 447.322 li
121.719 450 li
cp
.564706 .564706 .564706 rgb
f
115.328 420.944 mo
114.203 420.944 li
114.203 441.269 li
115.328 441.269 li
115.328 420.944 li
cp
.247059 .717647 .713726 rgb
f
117.579 420.944 mo
116.453 420.944 li
116.453 441.269 li
117.579 441.269 li
117.579 420.944 li
cp
f
119.832 420.944 mo
118.705 420.944 li
118.705 441.269 li
119.832 441.269 li
119.832 420.944 li
cp
f
122.082 420.944 mo
120.956 420.944 li
120.956 441.269 li
122.082 441.269 li
122.082 420.944 li
cp
f
124.334 420.944 mo
123.207 420.944 li
123.207 441.269 li
124.334 441.269 li
124.334 420.944 li
cp
f
126.585 420.944 mo
125.46 420.944 li
125.46 441.269 li
126.585 441.269 li
126.585 420.944 li
cp
f
128.835 420.944 mo
127.71 420.944 li
127.71 441.269 li
128.835 441.269 li
128.835 420.944 li
cp
f
115.328 410.691 mo
114.203 410.691 li
114.203 415.281 li
115.328 415.281 li
115.328 410.691 li
cp
f
117.579 410.691 mo
116.453 410.691 li
116.453 415.281 li
117.579 415.281 li
117.579 410.691 li
cp
f
119.832 410.691 mo
118.705 410.691 li
118.705 415.281 li
119.832 415.281 li
119.832 410.691 li
cp
f
122.082 410.691 mo
120.956 410.691 li
120.956 415.281 li
122.082 415.281 li
122.082 410.691 li
cp
f
124.334 410.691 mo
123.207 410.691 li
123.207 415.281 li
124.334 415.281 li
124.334 410.691 li
cp
f
126.585 410.691 mo
125.46 410.691 li
125.46 415.281 li
126.585 415.281 li
126.585 410.691 li
cp
f
128.835 410.691 mo
127.71 410.691 li
127.71 415.281 li
128.835 415.281 li
128.835 410.691 li
cp
f
131.211 419.982 mo
111.827 419.982 li
111.827 416.298 li
131.211 416.298 li
131.211 419.982 li
cp
.666667 .666667 .666667 rgb
f
118.161 404.329 mo
118.161 408.556 li
121.538 408.556 li
121.538 404.329 li
118.161 404.329 li
cp
.890196 .890196 .890196 rgb
f
124.916 404.329 mo
121.538 404.329 li
121.538 408.556 li
124.916 408.556 li
124.916 404.329 li
cp
.666667 .666667 .666667 rgb
f
122.467 404.329 mo
120.61 404.329 li
120.61 403.512 li
122.467 403.512 li
122.467 404.329 li
cp
.478431 .478431 .478431 rgb
f
130.133 419.982 mo
112.943 419.982 li
113.905 420.944 li
130.133 420.944 li
130.133 419.982 li
cp
.756863 .756863 .756863 rgb
f
114.203 442.508 mo
114.203 445.992 li
119.776 445.992 li
123.261 442.508 li
114.203 442.508 li
cp
.247059 .717647 .713726 rgb
f
128.835 442.508 mo
123.261 442.508 li
119.776 445.992 li
128.835 445.992 li
128.835 442.508 li
cp
.184314 .537255 .537255 rgb
f
131.211 417.331 mo
111.827 417.331 li
111.827 416.298 li
131.211 416.298 li
131.211 417.331 li
cp
.733333 .733333 .733333 rgb
f
335.396 449.972 mo
318.205 449.972 li
318.205 408.556 li
335.396 408.556 li
335.396 449.972 li
cp
.890196 .890196 .890196 rgb
f
328.186 447.322 mo
325.415 447.322 li
325.415 450 li
328.186 450 li
328.186 447.322 li
cp
.227451 .227451 .227451 rgb
f
326.981 450 mo
326.621 450 li
326.621 447.322 li
326.981 447.322 li
326.981 450 li
cp
.564706 .564706 .564706 rgb
f
320.59 420.944 mo
319.465 420.944 li
319.465 441.269 li
320.59 441.269 li
320.59 420.944 li
cp
.247059 .717647 .713726 rgb
f
322.841 420.944 mo
321.715 420.944 li
321.715 441.269 li
322.841 441.269 li
322.841 420.944 li
cp
f
325.094 420.944 mo
323.967 420.944 li
323.967 441.269 li
325.094 441.269 li
325.094 420.944 li
cp
f
327.344 420.944 mo
326.218 420.944 li
326.218 441.269 li
327.344 441.269 li
327.344 420.944 li
cp
f
329.596 420.944 mo
328.469 420.944 li
328.469 441.269 li
329.596 441.269 li
329.596 420.944 li
cp
f
331.847 420.944 mo
330.722 420.944 li
330.722 441.269 li
331.847 441.269 li
331.847 420.944 li
cp
f
334.098 420.944 mo
332.973 420.944 li
332.973 441.269 li
334.098 441.269 li
334.098 420.944 li
cp
f
320.59 410.691 mo
319.465 410.691 li
319.465 415.281 li
320.59 415.281 li
320.59 410.691 li
cp
f
322.841 410.691 mo
321.715 410.691 li
321.715 415.281 li
322.841 415.281 li
322.841 410.691 li
cp
f
325.094 410.691 mo
323.967 410.691 li
323.967 415.281 li
325.094 415.281 li
325.094 410.691 li
cp
f
327.344 410.691 mo
326.218 410.691 li
326.218 415.281 li
327.344 415.281 li
327.344 410.691 li
cp
f
329.596 410.691 mo
328.469 410.691 li
328.469 415.281 li
329.596 415.281 li
329.596 410.691 li
cp
f
331.847 410.691 mo
330.722 410.691 li
330.722 415.281 li
331.847 415.281 li
331.847 410.691 li
cp
f
334.098 410.691 mo
332.973 410.691 li
332.973 415.281 li
334.098 415.281 li
334.098 410.691 li
cp
f
336.474 419.982 mo
317.089 419.982 li
317.089 416.298 li
336.474 416.298 li
336.474 419.982 li
cp
.666667 .666667 .666667 rgb
f
323.423 404.329 mo
323.423 408.556 li
326.8 408.556 li
326.8 404.329 li
323.423 404.329 li
cp
.890196 .890196 .890196 rgb
f
330.178 404.329 mo
326.8 404.329 li
326.8 408.556 li
330.178 408.556 li
330.178 404.329 li
cp
.666667 .666667 .666667 rgb
f
327.729 404.329 mo
325.872 404.329 li
325.872 403.512 li
327.729 403.512 li
327.729 404.329 li
cp
.478431 .478431 .478431 rgb
f
335.396 419.982 mo
318.205 419.982 li
319.167 420.944 li
335.396 420.944 li
335.396 419.982 li
cp
.756863 .756863 .756863 rgb
f
319.465 442.508 mo
319.465 445.992 li
325.038 445.992 li
328.523 442.508 li
319.465 442.508 li
cp
.247059 .717647 .713726 rgb
f
334.098 442.508 mo
328.523 442.508 li
325.038 445.992 li
334.098 445.992 li
334.098 442.508 li
cp
.184314 .537255 .537255 rgb
f
336.474 417.331 mo
317.089 417.331 li
317.089 416.298 li
336.474 416.298 li
336.474 417.331 li
cp
.733333 .733333 .733333 rgb
f
70.3467 442.779 mo
69.6636 442.779 li
69.6636 444.26 li
70.3467 444.26 li
70.3467 442.779 li
cp
.305882 .403922 .243137 rgb
f
70.0049 442.779 mo
70.0049 444.26 li
70.3467 444.26 li
70.3467 442.779 li
70.0049 442.779 li
cp
.611765 .807843 .486275 rgb
f
70.688 442.779 mo
70.3467 442.779 li
70.3467 444.26 li
70.688 444.26 li
70.688 442.779 li
cp
.458824 .607843 .364706 rgb
f
72.394 442.779 mo
71.7114 442.779 li
71.7114 444.26 li
72.394 444.26 li
72.394 442.779 li
cp
.305882 .403922 .243137 rgb
f
72.0527 442.779 mo
72.0527 444.26 li
72.394 444.26 li
72.394 442.779 li
72.0527 442.779 li
cp
.611765 .807843 .486275 rgb
f
72.7349 442.779 mo
72.394 442.779 li
72.394 444.26 li
72.7349 444.26 li
72.7349 442.779 li
cp
.458824 .607843 .364706 rgb
f
76.4892 442.779 mo
75.8071 442.779 li
75.8071 444.26 li
76.4892 444.26 li
76.4892 442.779 li
cp
.305882 .403922 .243137 rgb
f
76.1475 442.779 mo
76.1475 444.26 li
76.4892 444.26 li
76.4892 442.779 li
76.1475 442.779 li
cp
.611765 .807843 .486275 rgb
f
76.8301 442.779 mo
76.4892 442.779 li
76.4892 444.26 li
76.8301 444.26 li
76.8301 442.779 li
cp
.458824 .607843 .364706 rgb
f
78.5366 442.779 mo
77.8545 442.779 li
77.8545 444.26 li
78.5366 444.26 li
78.5366 442.779 li
cp
.305882 .403922 .243137 rgb
f
78.1948 442.779 mo
78.1948 444.26 li
78.5366 444.26 li
78.5366 442.779 li
78.1948 442.779 li
cp
.611765 .807843 .486275 rgb
f
78.8779 442.779 mo
78.5366 442.779 li
78.5366 444.26 li
78.8779 444.26 li
78.8779 442.779 li
cp
.458824 .607843 .364706 rgb
f
89.228 445.021 mo
81.3227 445.021 li
81.3227 417.637 li
89.228 417.637 li
89.228 445.021 li
cp
.890196 .890196 .890196 rgb
f
82.4199 419.177 mo
81.9018 419.177 li
81.9018 443.482 li
82.4199 443.482 li
82.4199 419.177 li
cp
.329412 .647059 .835294 rgb
f
83.4546 419.177 mo
82.937 419.177 li
82.937 443.482 li
83.4546 443.482 li
83.4546 419.177 li
cp
f
84.4897 419.177 mo
83.9722 419.177 li
83.9722 443.482 li
84.4897 443.482 li
84.4897 419.177 li
cp
f
85.5259 419.177 mo
85.0078 419.177 li
85.0078 443.482 li
85.5259 443.482 li
85.5259 419.177 li
cp
f
86.56 419.177 mo
86.043 419.177 li
86.043 443.482 li
86.56 443.482 li
86.56 419.177 li
cp
f
87.5957 419.177 mo
87.0781 419.177 li
87.0781 443.482 li
87.5957 443.482 li
87.5957 419.177 li
cp
f
88.6308 419.177 mo
88.1133 419.177 li
88.1133 443.482 li
88.6308 443.482 li
88.6308 419.177 li
cp
f
89.228 428.853 mo
81.3227 428.853 li
81.3227 428.064 li
89.228 428.064 li
89.228 428.853 li
cp
.890196 .890196 .890196 rgb
f
95.5391 407.159 mo
90.8198 407.159 li
90.8198 402.086 li
95.5391 402.086 li
95.5391 407.159 li
cp
f
91.9155 402.766 mo
91.3984 402.766 li
91.3984 406.489 li
91.9155 406.489 li
91.9155 402.766 li
cp
.329412 .647059 .835294 rgb
f
92.9512 402.766 mo
92.4336 402.766 li
92.4336 406.489 li
92.9512 406.489 li
92.9512 402.766 li
cp
f
93.9863 402.766 mo
93.4683 402.766 li
93.4683 406.489 li
93.9863 406.489 li
93.9863 402.766 li
cp
f
95.022 402.766 mo
94.5034 402.766 li
94.5034 406.489 li
95.022 406.489 li
95.022 402.766 li
cp
f
105.036 445.021 mo
97.1318 445.021 li
97.1318 417.637 li
105.036 417.637 li
105.036 445.021 li
cp
.890196 .890196 .890196 rgb
f
98.2285 419.177 mo
97.7109 419.177 li
97.7109 443.482 li
98.2285 443.482 li
98.2285 419.177 li
cp
.329412 .647059 .835294 rgb
f
99.2637 419.177 mo
98.7461 419.177 li
98.7461 443.482 li
99.2637 443.482 li
99.2637 419.177 li
cp
f
100.299 419.177 mo
99.7808 419.177 li
99.7808 443.482 li
100.299 443.482 li
100.299 419.177 li
cp
f
101.334 419.177 mo
100.816 419.177 li
100.816 443.482 li
101.334 443.482 li
101.334 419.177 li
cp
f
102.37 419.177 mo
101.852 419.177 li
101.852 443.482 li
102.37 443.482 li
102.37 419.177 li
cp
f
103.405 419.177 mo
102.886 419.177 li
102.886 443.482 li
103.405 443.482 li
103.405 419.177 li
cp
f
104.44 419.177 mo
103.922 419.177 li
103.922 443.482 li
104.44 443.482 li
104.44 419.177 li
cp
f
105.036 428.853 mo
97.1318 428.853 li
97.1318 428.064 li
105.036 428.064 li
105.036 428.853 li
cp
.890196 .890196 .890196 rgb
f
89.8061 408.699 mo
90.3232 408.699 li
90.3232 418.733 li
90.8418 419.25 li
90.8418 408.699 li
91.3589 408.699 li
91.3589 419.769 li
91.8774 420.285 li
91.8774 408.699 li
92.3945 408.699 li
92.3945 420.804 li
92.9121 421.32 li
92.9121 408.699 li
93.4297 408.699 li
93.4297 421.839 li
93.9473 422.357 li
93.9473 408.699 li
94.4653 408.699 li
94.4653 422.874 li
94.9829 423.392 li
94.9829 408.699 li
95.5005 408.699 li
95.5005 423.91 li
96.0176 424.428 li
96.0176 408.699 li
96.5351 408.699 li
96.5351 424.944 li
97.1318 425.541 li
97.1318 407.159 li
89.228 407.159 li
89.228 417.637 li
89.8061 418.215 li
89.8061 408.699 li
cp
.8 .8 .8 rgb
f
96.5351 424.944 mo
96.5351 443.482 li
96.0176 443.482 li
96.0176 424.428 li
95.5005 423.91 li
95.5005 443.482 li
94.9829 443.482 li
94.9829 423.392 li
94.4653 422.874 li
94.4653 443.482 li
93.9473 443.482 li
93.9473 422.357 li
93.4297 421.839 li
93.4297 443.482 li
92.9121 443.482 li
92.9121 421.32 li
92.3945 420.804 li
92.3945 443.482 li
91.8774 443.482 li
91.8774 420.285 li
91.3589 419.769 li
91.3589 443.482 li
90.8418 443.482 li
90.8418 419.25 li
90.3232 418.733 li
90.3232 443.482 li
89.8061 443.482 li
89.8061 418.215 li
89.228 417.637 li
89.228 445.021 li
97.1318 445.021 li
97.1318 425.541 li
96.5351 424.944 li
cp
.666667 .666667 .666667 rgb
f
89.8061 443.482 mo
90.3232 443.482 li
90.3232 418.733 li
89.8061 418.215 li
89.8061 443.482 li
cp
.247059 .486275 .627451 rgb
f
89.8061 408.699 mo
89.8061 418.215 li
90.3232 418.733 li
90.3232 408.699 li
89.8061 408.699 li
cp
.329412 .647059 .835294 rgb
f
90.8418 443.482 mo
91.3589 443.482 li
91.3589 419.769 li
90.8418 419.25 li
90.8418 443.482 li
cp
.247059 .486275 .627451 rgb
f
90.8418 408.699 mo
90.8418 419.25 li
91.3589 419.769 li
91.3589 408.699 li
90.8418 408.699 li
cp
.329412 .647059 .835294 rgb
f
91.8774 443.482 mo
92.3945 443.482 li
92.3945 420.804 li
91.8774 420.285 li
91.8774 443.482 li
cp
.247059 .486275 .627451 rgb
f
91.8774 408.699 mo
91.8774 420.285 li
92.3945 420.804 li
92.3945 408.699 li
91.8774 408.699 li
cp
.329412 .647059 .835294 rgb
f
92.9121 443.482 mo
93.4297 443.482 li
93.4297 421.839 li
92.9121 421.32 li
92.9121 443.482 li
cp
.247059 .486275 .627451 rgb
f
92.9121 408.699 mo
92.9121 421.32 li
93.4297 421.839 li
93.4297 408.699 li
92.9121 408.699 li
cp
.329412 .647059 .835294 rgb
f
93.9473 408.699 mo
93.9473 422.357 li
94.4653 422.874 li
94.4653 408.699 li
93.9473 408.699 li
cp
f
93.9473 443.482 mo
94.4653 443.482 li
94.4653 422.874 li
93.9473 422.357 li
93.9473 443.482 li
cp
.247059 .486275 .627451 rgb
f
94.9829 443.482 mo
95.5005 443.482 li
95.5005 423.91 li
94.9829 423.392 li
94.9829 443.482 li
cp
f
94.9829 408.699 mo
94.9829 423.392 li
95.5005 423.91 li
95.5005 408.699 li
94.9829 408.699 li
cp
.329412 .647059 .835294 rgb
f
96.0176 443.482 mo
96.5351 443.482 li
96.5351 424.944 li
96.0176 424.428 li
96.0176 443.482 li
cp
.247059 .486275 .627451 rgb
f
96.0176 408.699 mo
96.0176 424.428 li
96.5351 424.944 li
96.5351 408.699 li
96.0176 408.699 li
cp
.329412 .647059 .835294 rgb
f
106.132 437.368 mo
106.132 440.578 li
106.65 440.578 li
106.65 437.368 li
106.132 437.368 li
cp
.666667 .666667 .666667 rgb
f
108.69 436.578 mo
108.204 436.092 li
108.204 436.578 li
108.69 436.578 li
cp
f
110.791 438.682 mo
110.791 437.368 li
110.274 437.368 li
110.274 438.165 li
110.791 438.682 li
cp
.8 .8 .8 rgb
f
107.167 437.368 mo
107.167 440.578 li
107.685 440.578 li
107.685 437.368 li
107.167 437.368 li
cp
.666667 .666667 .666667 rgb
f
108.204 437.368 mo
108.204 440.578 li
108.72 440.578 li
108.72 437.368 li
108.204 437.368 li
cp
f
107.685 436.578 mo
107.685 435.575 li
107.167 435.058 li
107.167 436.578 li
107.685 436.578 li
cp
f
111.31 440.578 mo
111.827 440.578 li
111.827 439.716 li
111.31 439.198 li
111.31 440.578 li
cp
f
109.755 437.368 mo
109.478 437.368 li
109.755 437.646 li
109.755 437.368 li
cp
.8 .8 .8 rgb
f
111.31 437.368 mo
111.31 439.198 li
111.827 439.716 li
111.827 437.368 li
111.31 437.368 li
cp
f
109.478 437.368 mo
109.239 437.368 li
109.239 440.578 li
109.755 440.578 li
109.755 437.646 li
109.478 437.368 li
cp
.666667 .666667 .666667 rgb
f
110.274 438.165 mo
110.274 440.578 li
110.791 440.578 li
110.791 438.682 li
110.274 438.165 li
cp
f
105.615 437.368 mo
105.036 437.368 li
105.036 440.578 li
105.615 440.578 li
105.615 437.368 li
cp
f
112.345 440.578 mo
112.689 440.578 li
112.345 440.233 li
112.345 440.578 li
cp
f
112.345 440.233 mo
112.689 440.578 li
112.941 440.578 li
112.941 437.368 li
112.345 437.368 li
112.345 440.233 li
cp
.8 .8 .8 rgb
f
106.65 434.468 mo
107.167 434.468 li
107.167 435.058 li
107.685 435.575 li
107.685 434.468 li
108.204 434.468 li
108.204 436.092 li
108.69 436.578 li
108.72 436.578 li
108.72 434.468 li
109.239 434.468 li
109.239 436.578 li
109.755 436.578 li
109.755 434.468 li
110.274 434.468 li
110.274 436.578 li
110.791 436.578 li
110.791 434.468 li
111.31 434.468 li
111.31 436.578 li
111.827 436.578 li
111.827 434.468 li
112.345 434.468 li
112.345 436.578 li
112.941 436.578 li
112.941 432.926 li
105.036 432.926 li
106.65 434.54 li
106.65 434.468 li
cp
f
112.345 443.482 mo
111.827 443.482 li
111.827 441.367 li
111.31 441.367 li
111.31 443.482 li
110.791 443.482 li
110.791 441.367 li
110.274 441.367 li
110.274 443.482 li
109.755 443.482 li
109.755 441.367 li
109.239 441.367 li
109.239 443.482 li
108.72 443.482 li
108.72 441.367 li
108.204 441.367 li
108.204 443.482 li
107.685 443.482 li
107.685 441.367 li
107.167 441.367 li
107.167 443.482 li
106.65 443.482 li
106.65 441.367 li
106.132 441.367 li
106.132 443.482 li
105.615 443.482 li
105.615 441.367 li
105.036 441.367 li
105.036 445.021 li
112.941 445.021 li
112.941 441.367 li
112.345 441.367 li
112.345 443.482 li
cp
.666667 .666667 .666667 rgb
f
105.615 434.468 mo
106.132 434.468 li
106.132 436.578 li
106.65 436.578 li
106.65 434.54 li
105.036 432.926 li
105.036 436.578 li
105.615 436.578 li
105.615 434.468 li
cp
f
105.615 443.482 mo
106.132 443.482 li
106.132 441.367 li
105.615 441.367 li
105.615 443.482 li
cp
.247059 .486275 .627451 rgb
f
106.132 437.368 mo
105.615 437.368 li
105.615 440.578 li
106.132 440.578 li
106.132 437.368 li
cp
f
106.132 434.468 mo
105.615 434.468 li
105.615 436.578 li
106.132 436.578 li
106.132 434.468 li
cp
f
107.167 434.468 mo
106.65 434.468 li
106.65 434.54 li
107.167 435.058 li
107.167 434.468 li
cp
.329412 .647059 .835294 rgb
f
107.167 435.058 mo
106.65 434.54 li
106.65 436.578 li
107.167 436.578 li
107.167 435.058 li
cp
.247059 .486275 .627451 rgb
f
106.65 443.482 mo
107.167 443.482 li
107.167 441.367 li
106.65 441.367 li
106.65 443.482 li
cp
f
106.65 437.368 mo
106.65 440.578 li
107.167 440.578 li
107.167 437.368 li
106.65 437.368 li
cp
f
108.204 434.468 mo
107.685 434.468 li
107.685 435.575 li
108.204 436.092 li
108.204 434.468 li
cp
.329412 .647059 .835294 rgb
f
107.685 437.368 mo
107.685 440.578 li
108.204 440.578 li
108.204 437.368 li
107.685 437.368 li
cp
.247059 .486275 .627451 rgb
f
108.204 436.578 mo
108.204 436.092 li
107.685 435.575 li
107.685 436.578 li
108.204 436.578 li
cp
f
107.685 443.482 mo
108.204 443.482 li
108.204 441.367 li
107.685 441.367 li
107.685 443.482 li
cp
f
108.72 443.482 mo
109.239 443.482 li
109.239 441.367 li
108.72 441.367 li
108.72 443.482 li
cp
f
108.72 437.368 mo
108.72 440.578 li
109.239 440.578 li
109.239 437.368 li
108.72 437.368 li
cp
f
109.239 434.468 mo
108.72 434.468 li
108.72 436.578 li
109.239 436.578 li
109.239 434.468 li
cp
.329412 .647059 .835294 rgb
f
109.755 443.482 mo
110.274 443.482 li
110.274 441.367 li
109.755 441.367 li
109.755 443.482 li
cp
.247059 .486275 .627451 rgb
f
109.755 437.646 mo
109.755 440.578 li
110.274 440.578 li
110.274 438.165 li
109.755 437.646 li
cp
f
110.274 434.468 mo
109.755 434.468 li
109.755 436.578 li
110.274 436.578 li
110.274 434.468 li
cp
.329412 .647059 .835294 rgb
f
110.274 438.165 mo
110.274 437.368 li
109.755 437.368 li
109.755 437.646 li
110.274 438.165 li
cp
f
110.791 438.682 mo
110.791 440.578 li
111.31 440.578 li
111.31 439.198 li
110.791 438.682 li
cp
.247059 .486275 .627451 rgb
f
110.791 443.482 mo
111.31 443.482 li
111.31 441.367 li
110.791 441.367 li
110.791 443.482 li
cp
f
111.31 434.468 mo
110.791 434.468 li
110.791 436.578 li
111.31 436.578 li
111.31 434.468 li
cp
.329412 .647059 .835294 rgb
f
111.31 439.198 mo
111.31 437.368 li
110.791 437.368 li
110.791 438.682 li
111.31 439.198 li
cp
f
112.345 434.468 mo
111.827 434.468 li
111.827 436.578 li
112.345 436.578 li
112.345 434.468 li
cp
f
111.827 439.716 mo
112.345 440.233 li
112.345 437.368 li
111.827 437.368 li
111.827 439.716 li
cp
f
111.827 443.482 mo
112.345 443.482 li
112.345 441.367 li
111.827 441.367 li
111.827 443.482 li
cp
.247059 .486275 .627451 rgb
f
111.827 439.716 mo
111.827 440.578 li
112.345 440.578 li
112.345 440.233 li
111.827 439.716 li
cp
f
112.941 440.83 mo
112.941 440.578 li
112.689 440.578 li
112.941 440.83 li
cp
.890196 .890196 .890196 rgb
f
112.689 440.578 mo
112.345 440.578 li
111.827 440.578 li
111.31 440.578 li
110.791 440.578 li
110.274 440.578 li
109.755 440.578 li
109.239 440.578 li
108.72 440.578 li
108.204 440.578 li
107.685 440.578 li
107.167 440.578 li
106.65 440.578 li
106.132 440.578 li
105.615 440.578 li
105.036 440.578 li
105.036 441.367 li
105.615 441.367 li
106.132 441.367 li
106.65 441.367 li
107.167 441.367 li
107.685 441.367 li
108.204 441.367 li
108.72 441.367 li
109.239 441.367 li
109.755 441.367 li
110.274 441.367 li
110.791 441.367 li
111.31 441.367 li
111.827 441.367 li
112.345 441.367 li
112.941 441.367 li
112.941 440.83 li
112.689 440.578 li
cp
.8 .8 .8 rgb
f
109.239 437.129 mo
108.72 436.61 li
108.69 436.578 li
108.204 436.578 li
107.685 436.578 li
107.167 436.578 li
106.65 436.578 li
106.132 436.578 li
105.615 436.578 li
105.036 436.578 li
105.036 437.368 li
105.615 437.368 li
106.132 437.368 li
106.65 437.368 li
107.167 437.368 li
107.685 437.368 li
108.204 437.368 li
108.72 437.368 li
109.239 437.368 li
109.478 437.368 li
109.239 437.129 li
cp
f
112.345 436.578 mo
111.827 436.578 li
111.31 436.578 li
110.791 436.578 li
110.274 436.578 li
109.755 436.578 li
109.239 436.578 li
108.72 436.578 li
108.69 436.578 li
108.72 436.61 li
109.239 437.129 li
109.478 437.368 li
109.755 437.368 li
110.274 437.368 li
110.791 437.368 li
111.31 437.368 li
111.827 437.368 li
112.345 437.368 li
112.941 437.368 li
112.941 436.578 li
112.345 436.578 li
cp
.890196 .890196 .890196 rgb
f
102.636 417.637 mo
99.5312 417.637 li
99.5312 415.95 li
102.636 415.95 li
102.636 417.637 li
cp
.8 .8 .8 rgb
f
110.532 432.926 mo
107.425 432.926 li
107.425 431.239 li
110.532 431.239 li
110.532 432.926 li
cp
.890196 .890196 .890196 rgb
f
108.995 428.59 mo
108.961 428.59 li
108.764 431.239 li
109.19 431.239 li
108.995 428.59 li
cp
.615686 .615686 .615686 rgb
f
93.1968 398.992 mo
93.1631 398.992 li
92.9673 401.642 li
93.3926 401.642 li
93.1968 398.992 li
cp
f
92.6362 401.642 mo
92.6362 402.086 li
93.1802 402.086 li
93.1802 401.642 li
92.6362 401.642 li
cp
.890196 .890196 .890196 rgb
f
93.7231 401.642 mo
93.1802 401.642 li
93.1802 402.086 li
93.7231 402.086 li
93.7231 401.642 li
cp
.666667 .666667 .666667 rgb
f
68.5327 446.672 mo
115.148 446.672 li
115.148 445.02 li
68.5327 445.02 li
68.5327 446.672 li
cp
.247059 .486275 .627451 rgb
f
113.891 450 mo
69.7886 450 li
69.7886 446.672 li
113.891 446.672 li
113.891 450 li
cp
.666667 .666667 .666667 rgb
f
81.3227 444.26 mo
68.5327 444.26 li
68.5327 445.02 li
81.3227 445.02 li
81.3227 444.26 li
cp
.890196 .890196 .890196 rgb
f
69.6636 443.555 mo
68.9814 443.555 li
68.9814 444.26 li
69.6636 444.26 li
69.6636 443.555 li
cp
.611765 .807843 .486275 rgb
f
70.688 443.555 mo
70.0049 443.555 li
70.0049 444.26 li
70.688 444.26 li
70.688 443.555 li
cp
f
71.7114 443.555 mo
71.0288 443.555 li
71.0288 444.26 li
71.7114 444.26 li
71.7114 443.555 li
cp
f
72.7349 443.555 mo
72.0527 443.555 li
72.0527 444.26 li
72.7349 444.26 li
72.7349 443.555 li
cp
f
73.7588 443.555 mo
73.0766 443.555 li
73.0766 444.26 li
73.7588 444.26 li
73.7588 443.555 li
cp
f
74.7827 443.555 mo
74.1001 443.555 li
74.1001 444.26 li
74.7827 444.26 li
74.7827 443.555 li
cp
f
75.8071 443.555 mo
75.124 443.555 li
75.124 444.26 li
75.8071 444.26 li
75.8071 443.555 li
cp
f
76.8306 443.555 mo
76.1484 443.555 li
76.1484 444.26 li
76.8306 444.26 li
76.8306 443.555 li
cp
f
77.8545 443.555 mo
77.1714 443.555 li
77.1714 444.26 li
77.8545 444.26 li
77.8545 443.555 li
cp
f
78.8779 443.555 mo
78.1948 443.555 li
78.1948 444.26 li
78.8779 444.26 li
78.8779 443.555 li
cp
f
79.9014 443.555 mo
79.2192 443.555 li
79.2192 444.26 li
79.9014 444.26 li
79.9014 443.555 li
cp
f
80.9253 443.555 mo
80.2427 443.555 li
80.2427 444.26 li
80.9253 444.26 li
80.9253 443.555 li
cp
f
113.891 446.672 mo
69.7886 446.672 li
70.75 447.635 li
113.891 447.635 li
113.891 446.672 li
cp
.501961 .501961 .501961 rgb
f
81.3203 446.672 mo
77.8833 446.672 li
77.8833 449.993 li
81.3203 449.993 li
81.3203 446.672 li
cp
.227451 .227451 .227451 rgb
f
81.3203 446.847 mo
77.8833 446.847 li
77.8833 446.672 li
81.3203 446.672 li
81.3203 446.847 li
cp
.380392 .380392 .380392 rgb
f
81.3203 447.195 mo
77.8833 447.195 li
77.8833 447.021 li
81.3203 447.021 li
81.3203 447.195 li
cp
f
81.3203 447.546 mo
77.8833 447.546 li
77.8833 447.371 li
81.3203 447.371 li
81.3203 447.546 li
cp
f
81.3203 447.896 mo
77.8833 447.896 li
77.8833 447.722 li
81.3203 447.722 li
81.3203 447.896 li
cp
f
81.3203 448.245 mo
77.8833 448.245 li
77.8833 448.071 li
81.3203 448.071 li
81.3203 448.245 li
cp
f
81.3203 448.595 mo
77.8833 448.595 li
77.8833 448.421 li
81.3203 448.421 li
81.3203 448.595 li
cp
f
81.3203 448.943 mo
77.8833 448.943 li
77.8833 448.771 li
81.3203 448.771 li
81.3203 448.943 li
cp
f
81.3203 449.294 mo
77.8833 449.294 li
77.8833 449.119 li
81.3203 449.119 li
81.3203 449.294 li
cp
f
81.3203 449.643 mo
77.8833 449.643 li
77.8833 449.468 li
81.3203 449.468 li
81.3203 449.643 li
cp
f
81.3203 449.993 mo
77.8833 449.993 li
77.8833 449.818 li
81.3203 449.818 li
81.3203 449.993 li
cp
f
154.585 410.021 mo
154.585 406.173 li
156.343 406.173 li
156.343 403.293 li
166.831 403.293 li
171.807 408.269 li
171.807 400.377 li
151.367 400.377 li
151.367 444.433 li
152.966 444.433 li
152.966 410.021 li
154.585 410.021 li
cp
.4 .4 .4 rgb
f
166.831 403.293 mo
166.831 406.173 li
168.59 406.173 li
168.59 410.021 li
170.209 410.021 li
170.209 444.433 li
171.807 444.433 li
171.807 408.269 li
166.831 403.293 li
cp
.301961 .301961 .301961 rgb
f
168.59 410.021 mo
168.59 406.173 li
166.831 406.173 li
166.831 403.293 li
156.343 403.293 li
156.343 406.173 li
154.585 406.173 li
154.585 410.021 li
152.966 410.021 li
152.966 444.433 li
170.209 444.433 li
170.209 410.021 li
168.59 410.021 li
cp
.772549 .772549 .772549 rgb
f
168.276 399.129 mo
165.17 399.129 li
165.17 397.441 li
168.276 397.441 li
168.276 399.129 li
cp
.890196 .890196 .890196 rgb
f
166.74 394.793 mo
166.706 394.793 li
166.51 397.441 li
166.936 397.441 li
166.74 394.793 li
cp
.615686 .615686 .615686 rgb
f
162.839 406.141 mo
160.335 406.141 li
160.335 405.113 li
162.839 405.113 li
162.839 406.141 li
cp
.231373 .447059 .447059 rgb
f
162.839 408.192 mo
160.335 408.192 li
160.335 407.167 li
162.839 407.167 li
162.839 408.192 li
cp
f
162.839 410.247 mo
160.335 410.247 li
160.335 409.219 li
162.839 409.219 li
162.839 410.247 li
cp
f
162.839 412.3 mo
160.335 412.3 li
160.335 411.273 li
162.839 411.273 li
162.839 412.3 li
cp
f
162.839 414.312 mo
160.335 414.312 li
160.335 413.283 li
162.839 413.283 li
162.839 414.312 li
cp
f
162.839 416.364 mo
160.335 416.364 li
160.335 415.338 li
162.839 415.338 li
162.839 416.364 li
cp
f
162.839 418.417 mo
160.335 418.417 li
160.335 417.392 li
162.839 417.392 li
162.839 418.417 li
cp
f
162.839 420.472 mo
160.335 420.472 li
160.335 419.443 li
162.839 419.443 li
162.839 420.472 li
cp
f
162.839 422.523 mo
160.335 422.523 li
160.335 421.497 li
162.839 421.497 li
162.839 422.523 li
cp
f
162.839 424.578 mo
160.335 424.578 li
160.335 423.552 li
162.839 423.552 li
162.839 424.578 li
cp
f
162.839 426.632 mo
160.335 426.632 li
160.335 425.605 li
162.839 425.605 li
162.839 426.632 li
cp
f
162.839 428.685 mo
160.335 428.685 li
160.335 427.658 li
162.839 427.658 li
162.839 428.685 li
cp
f
162.839 430.694 mo
160.335 430.694 li
160.335 429.67 li
162.839 429.67 li
162.839 430.694 li
cp
f
162.839 432.749 mo
160.335 432.749 li
160.335 431.722 li
162.839 431.722 li
162.839 432.749 li
cp
f
162.839 434.802 mo
160.335 434.802 li
160.335 433.776 li
162.839 433.776 li
162.839 434.802 li
cp
f
162.839 436.857 mo
160.335 436.857 li
160.335 435.83 li
162.839 435.83 li
162.839 436.857 li
cp
f
162.839 438.91 mo
160.335 438.91 li
160.335 437.883 li
162.839 437.883 li
162.839 438.91 li
cp
f
162.839 440.963 mo
160.335 440.963 li
160.335 439.937 li
162.839 439.937 li
162.839 440.963 li
cp
f
162.839 443.017 mo
160.335 443.017 li
160.335 441.989 li
162.839 441.989 li
162.839 443.017 li
cp
f
166.592 408.192 mo
164.09 408.192 li
164.09 407.167 li
166.592 407.167 li
166.592 408.192 li
cp
f
166.592 410.247 mo
164.09 410.247 li
164.09 409.219 li
166.592 409.219 li
166.592 410.247 li
cp
f
166.592 412.3 mo
164.09 412.3 li
164.09 411.273 li
166.592 411.273 li
166.592 412.3 li
cp
f
166.592 414.312 mo
164.09 414.312 li
164.09 413.283 li
166.592 413.283 li
166.592 414.312 li
cp
f
166.592 416.364 mo
164.09 416.364 li
164.09 415.338 li
166.592 415.338 li
166.592 416.364 li
cp
f
166.592 418.417 mo
164.09 418.417 li
164.09 417.392 li
166.592 417.392 li
166.592 418.417 li
cp
f
166.592 420.472 mo
164.09 420.472 li
164.09 419.443 li
166.592 419.443 li
166.592 420.472 li
cp
f
166.592 422.523 mo
164.09 422.523 li
164.09 421.497 li
166.592 421.497 li
166.592 422.523 li
cp
f
166.592 424.578 mo
164.09 424.578 li
164.09 423.552 li
166.592 423.552 li
166.592 424.578 li
cp
f
166.592 426.632 mo
164.09 426.632 li
164.09 425.605 li
166.592 425.605 li
166.592 426.632 li
cp
f
166.592 428.685 mo
164.09 428.685 li
164.09 427.658 li
166.592 427.658 li
166.592 428.685 li
cp
f
166.592 430.694 mo
164.09 430.694 li
164.09 429.67 li
166.592 429.67 li
166.592 430.694 li
cp
f
166.592 432.749 mo
164.09 432.749 li
164.09 431.722 li
166.592 431.722 li
166.592 432.749 li
cp
f
166.592 434.802 mo
164.09 434.802 li
164.09 433.776 li
166.592 433.776 li
166.592 434.802 li
cp
f
166.592 436.857 mo
164.09 436.857 li
164.09 435.83 li
166.592 435.83 li
166.592 436.857 li
cp
f
166.592 438.91 mo
164.09 438.91 li
164.09 437.883 li
166.592 437.883 li
166.592 438.91 li
cp
f
166.592 440.963 mo
164.09 440.963 li
164.09 439.937 li
166.592 439.937 li
166.592 440.963 li
cp
f
166.592 443.017 mo
164.09 443.017 li
164.09 441.989 li
166.592 441.989 li
166.592 443.017 li
cp
f
159.084 408.192 mo
156.582 408.192 li
156.582 407.167 li
159.084 407.167 li
159.084 408.192 li
cp
f
159.084 410.247 mo
156.582 410.247 li
156.582 409.219 li
159.084 409.219 li
159.084 410.247 li
cp
f
159.084 412.3 mo
156.582 412.3 li
156.582 411.273 li
159.084 411.273 li
159.084 412.3 li
cp
f
159.084 414.312 mo
156.582 414.312 li
156.582 413.283 li
159.084 413.283 li
159.084 414.312 li
cp
f
159.084 416.364 mo
156.582 416.364 li
156.582 415.338 li
159.084 415.338 li
159.084 416.364 li
cp
f
159.084 418.417 mo
156.582 418.417 li
156.582 417.392 li
159.084 417.392 li
159.084 418.417 li
cp
f
159.084 420.472 mo
156.582 420.472 li
156.582 419.443 li
159.084 419.443 li
159.084 420.472 li
cp
f
159.084 422.523 mo
156.582 422.523 li
156.582 421.497 li
159.084 421.497 li
159.084 422.523 li
cp
f
159.084 424.578 mo
156.582 424.578 li
156.582 423.552 li
159.084 423.552 li
159.084 424.578 li
cp
f
159.084 426.632 mo
156.582 426.632 li
156.582 425.605 li
159.084 425.605 li
159.084 426.632 li
cp
f
159.084 428.685 mo
156.582 428.685 li
156.582 427.658 li
159.084 427.658 li
159.084 428.685 li
cp
f
159.084 430.694 mo
156.582 430.694 li
156.582 429.67 li
159.084 429.67 li
159.084 430.694 li
cp
f
159.084 432.749 mo
156.582 432.749 li
156.582 431.722 li
159.084 431.722 li
159.084 432.749 li
cp
f
159.084 434.802 mo
156.582 434.802 li
156.582 433.776 li
159.084 433.776 li
159.084 434.802 li
cp
f
159.084 436.857 mo
156.582 436.857 li
156.582 435.83 li
159.084 435.83 li
159.084 436.857 li
cp
f
159.084 438.91 mo
156.582 438.91 li
156.582 437.883 li
159.084 437.883 li
159.084 438.91 li
cp
f
159.084 440.963 mo
156.582 440.963 li
156.582 439.937 li
159.084 439.937 li
159.084 440.963 li
cp
f
159.084 443.017 mo
156.582 443.017 li
156.582 441.989 li
159.084 441.989 li
159.084 443.017 li
cp
f
170.209 400.407 mo
152.966 400.407 li
152.966 399.129 li
170.209 399.129 li
170.209 400.407 li
cp
.666667 .666667 .666667 rgb
f
157.018 399.129 mo
155.47 399.129 li
155.47 397.301 li
157.018 397.301 li
157.018 399.129 li
cp
.831373 .831373 .831373 rgb
f
172.428 444.433 mo
171.807 444.433 li
171.807 400.377 li
172.428 400.377 li
172.428 444.433 li
cp
.396078 .772549 .772549 rgb
f
151.367 444.433 mo
150.747 444.433 li
150.747 400.377 li
151.367 400.377 li
151.367 444.433 li
cp
f
154.972 447.273 mo
154.972 449.972 li
156.185 449.972 li
156.185 447.273 li
154.972 447.273 li
cp
.113725 .27451 .27451 rgb
f
158.976 447.273 mo
158.976 449.972 li
160.191 449.972 li
160.191 447.273 li
158.976 447.273 li
cp
f
162.982 447.273 mo
162.982 449.972 li
164.198 449.972 li
164.198 447.273 li
162.982 447.273 li
cp
f
166.989 447.273 mo
166.989 449.972 li
168.202 449.972 li
168.202 447.273 li
166.989 447.273 li
cp
f
150.903 447.273 mo
152.178 448.551 li
152.178 447.273 li
150.903 447.273 li
cp
f
150.903 447.273 mo
150.903 446.552 li
172.272 446.552 li
174.337 448.616 li
174.337 444.433 li
148.837 444.433 li
148.837 449.972 li
152.178 449.972 li
152.178 448.551 li
150.903 447.273 li
cp
.168627 .407843 .407843 rgb
f
172.272 446.552 mo
172.272 447.273 li
170.995 447.273 li
170.995 449.972 li
174.337 449.972 li
174.337 448.616 li
172.272 446.552 li
cp
.113725 .27451 .27451 rgb
f
153.756 447.273 mo
153.756 449.972 li
154.972 449.972 li
154.972 447.273 li
153.756 447.273 li
cp
.172549 .172549 .172549 rgb
f
152.178 448.551 mo
153.392 449.766 li
153.392 447.273 li
152.178 447.273 li
152.178 448.551 li
cp
f
152.178 448.551 mo
152.178 449.972 li
153.392 449.972 li
153.392 449.766 li
152.178 448.551 li
cp
.227451 .227451 .227451 rgb
f
153.392 447.273 mo
153.392 449.766 li
153.599 449.972 li
153.756 449.972 li
153.756 447.273 li
153.392 447.273 li
cp
.423529 .423529 .423529 rgb
f
153.392 449.972 mo
153.599 449.972 li
153.392 449.766 li
153.392 449.972 li
cp
.564706 .564706 .564706 rgb
f
156.185 447.273 mo
156.185 449.972 li
157.398 449.972 li
157.398 447.273 li
156.185 447.273 li
cp
.172549 .172549 .172549 rgb
f
157.763 447.273 mo
157.763 449.972 li
158.976 449.972 li
158.976 447.273 li
157.763 447.273 li
cp
f
157.398 447.273 mo
157.398 449.972 li
157.763 449.972 li
157.763 447.273 li
157.398 447.273 li
cp
.423529 .423529 .423529 rgb
f
160.191 447.273 mo
160.191 449.972 li
161.405 449.972 li
161.405 447.273 li
160.191 447.273 li
cp
.172549 .172549 .172549 rgb
f
161.77 447.273 mo
161.77 449.972 li
162.982 449.972 li
162.982 447.273 li
161.77 447.273 li
cp
f
161.405 447.273 mo
161.405 449.972 li
161.77 449.972 li
161.77 447.273 li
161.405 447.273 li
cp
.423529 .423529 .423529 rgb
f
165.776 447.273 mo
165.776 449.972 li
166.989 449.972 li
166.989 447.273 li
165.776 447.273 li
cp
.172549 .172549 .172549 rgb
f
164.198 447.273 mo
164.198 449.972 li
165.412 449.972 li
165.412 447.273 li
164.198 447.273 li
cp
f
165.412 447.273 mo
165.412 449.972 li
165.776 449.972 li
165.776 447.273 li
165.412 447.273 li
cp
.423529 .423529 .423529 rgb
f
169.781 447.273 mo
169.781 449.972 li
170.995 449.972 li
170.995 447.273 li
169.781 447.273 li
cp
.172549 .172549 .172549 rgb
f
168.202 447.273 mo
168.202 449.972 li
169.417 449.972 li
169.417 447.273 li
168.202 447.273 li
cp
f
169.417 447.273 mo
169.417 449.972 li
169.781 449.972 li
169.781 447.273 li
169.417 447.273 li
cp
.423529 .423529 .423529 rgb
f
150.903 446.552 mo
150.903 447.273 li
152.178 447.273 li
153.392 447.273 li
153.756 447.273 li
154.972 447.273 li
156.185 447.273 li
157.398 447.273 li
157.763 447.273 li
158.976 447.273 li
160.191 447.273 li
161.405 447.273 li
161.586 447.273 li
161.586 446.552 li
150.903 446.552 li
cp
.584314 .584314 .584314 rgb
f
161.586 446.552 mo
161.586 447.273 li
161.77 447.273 li
162.982 447.273 li
164.198 447.273 li
165.412 447.273 li
165.776 447.273 li
166.989 447.273 li
168.202 447.273 li
169.417 447.273 li
169.781 447.273 li
170.995 447.273 li
172.272 447.273 li
172.272 446.552 li
161.586 446.552 li
cp
.478431 .478431 .478431 rgb
f
338.402 410.021 mo
338.402 406.173 li
340.161 406.173 li
340.161 403.293 li
350.648 403.293 li
355.625 408.269 li
355.625 400.377 li
335.185 400.377 li
335.185 444.433 li
336.784 444.433 li
336.784 410.021 li
338.402 410.021 li
cp
.4 .4 .4 rgb
f
350.648 403.293 mo
350.648 406.173 li
352.408 406.173 li
352.408 410.021 li
354.026 410.021 li
354.026 444.433 li
355.625 444.433 li
355.625 408.269 li
350.648 403.293 li
cp
.301961 .301961 .301961 rgb
f
352.408 410.021 mo
352.408 406.173 li
350.648 406.173 li
350.648 403.293 li
340.161 403.293 li
340.161 406.173 li
338.402 406.173 li
338.402 410.021 li
336.784 410.021 li
336.784 444.433 li
354.026 444.433 li
354.026 410.021 li
352.408 410.021 li
cp
.772549 .772549 .772549 rgb
f
352.094 399.129 mo
348.988 399.129 li
348.988 397.441 li
352.094 397.441 li
352.094 399.129 li
cp
.890196 .890196 .890196 rgb
f
350.558 394.793 mo
350.523 394.793 li
350.328 397.441 li
350.754 397.441 li
350.558 394.793 li
cp
.615686 .615686 .615686 rgb
f
346.657 406.141 mo
344.152 406.141 li
344.152 405.113 li
346.657 405.113 li
346.657 406.141 li
cp
.231373 .447059 .447059 rgb
f
346.657 408.192 mo
344.152 408.192 li
344.152 407.167 li
346.657 407.167 li
346.657 408.192 li
cp
f
346.657 410.247 mo
344.152 410.247 li
344.152 409.219 li
346.657 409.219 li
346.657 410.247 li
cp
f
346.657 412.3 mo
344.152 412.3 li
344.152 411.273 li
346.657 411.273 li
346.657 412.3 li
cp
f
346.657 414.312 mo
344.152 414.312 li
344.152 413.283 li
346.657 413.283 li
346.657 414.312 li
cp
f
346.657 416.364 mo
344.152 416.364 li
344.152 415.338 li
346.657 415.338 li
346.657 416.364 li
cp
f
346.657 418.417 mo
344.152 418.417 li
344.152 417.392 li
346.657 417.392 li
346.657 418.417 li
cp
f
346.657 420.472 mo
344.152 420.472 li
344.152 419.443 li
346.657 419.443 li
346.657 420.472 li
cp
f
346.657 422.523 mo
344.152 422.523 li
344.152 421.497 li
346.657 421.497 li
346.657 422.523 li
cp
f
346.657 424.578 mo
344.152 424.578 li
344.152 423.552 li
346.657 423.552 li
346.657 424.578 li
cp
f
346.657 426.632 mo
344.152 426.632 li
344.152 425.605 li
346.657 425.605 li
346.657 426.632 li
cp
f
346.657 428.685 mo
344.152 428.685 li
344.152 427.658 li
346.657 427.658 li
346.657 428.685 li
cp
f
346.657 430.694 mo
344.152 430.694 li
344.152 429.67 li
346.657 429.67 li
346.657 430.694 li
cp
f
346.657 432.749 mo
344.152 432.749 li
344.152 431.722 li
346.657 431.722 li
346.657 432.749 li
cp
f
346.657 434.802 mo
344.152 434.802 li
344.152 433.776 li
346.657 433.776 li
346.657 434.802 li
cp
f
346.657 436.857 mo
344.152 436.857 li
344.152 435.83 li
346.657 435.83 li
346.657 436.857 li
cp
f
346.657 438.91 mo
344.152 438.91 li
344.152 437.883 li
346.657 437.883 li
346.657 438.91 li
cp
f
346.657 440.963 mo
344.152 440.963 li
344.152 439.937 li
346.657 439.937 li
346.657 440.963 li
cp
f
346.657 443.017 mo
344.152 443.017 li
344.152 441.989 li
346.657 441.989 li
346.657 443.017 li
cp
f
350.41 408.192 mo
347.908 408.192 li
347.908 407.167 li
350.41 407.167 li
350.41 408.192 li
cp
f
350.41 410.247 mo
347.908 410.247 li
347.908 409.219 li
350.41 409.219 li
350.41 410.247 li
cp
f
350.41 412.3 mo
347.908 412.3 li
347.908 411.273 li
350.41 411.273 li
350.41 412.3 li
cp
f
350.41 414.312 mo
347.908 414.312 li
347.908 413.283 li
350.41 413.283 li
350.41 414.312 li
cp
f
350.41 416.364 mo
347.908 416.364 li
347.908 415.338 li
350.41 415.338 li
350.41 416.364 li
cp
f
350.41 418.417 mo
347.908 418.417 li
347.908 417.392 li
350.41 417.392 li
350.41 418.417 li
cp
f
350.41 420.472 mo
347.908 420.472 li
347.908 419.443 li
350.41 419.443 li
350.41 420.472 li
cp
f
350.41 422.523 mo
347.908 422.523 li
347.908 421.497 li
350.41 421.497 li
350.41 422.523 li
cp
f
350.41 424.578 mo
347.908 424.578 li
347.908 423.552 li
350.41 423.552 li
350.41 424.578 li
cp
f
350.41 426.632 mo
347.908 426.632 li
347.908 425.605 li
350.41 425.605 li
350.41 426.632 li
cp
f
350.41 428.685 mo
347.908 428.685 li
347.908 427.658 li
350.41 427.658 li
350.41 428.685 li
cp
f
350.41 430.694 mo
347.908 430.694 li
347.908 429.67 li
350.41 429.67 li
350.41 430.694 li
cp
f
350.41 432.749 mo
347.908 432.749 li
347.908 431.722 li
350.41 431.722 li
350.41 432.749 li
cp
f
350.41 434.802 mo
347.908 434.802 li
347.908 433.776 li
350.41 433.776 li
350.41 434.802 li
cp
f
350.41 436.857 mo
347.908 436.857 li
347.908 435.83 li
350.41 435.83 li
350.41 436.857 li
cp
f
350.41 438.91 mo
347.908 438.91 li
347.908 437.883 li
350.41 437.883 li
350.41 438.91 li
cp
f
350.41 440.963 mo
347.908 440.963 li
347.908 439.937 li
350.41 439.937 li
350.41 440.963 li
cp
f
350.41 443.017 mo
347.908 443.017 li
347.908 441.989 li
350.41 441.989 li
350.41 443.017 li
cp
f
342.901 408.192 mo
340.399 408.192 li
340.399 407.167 li
342.901 407.167 li
342.901 408.192 li
cp
f
342.901 410.247 mo
340.399 410.247 li
340.399 409.219 li
342.901 409.219 li
342.901 410.247 li
cp
f
342.901 412.3 mo
340.399 412.3 li
340.399 411.273 li
342.901 411.273 li
342.901 412.3 li
cp
f
342.901 414.312 mo
340.399 414.312 li
340.399 413.283 li
342.901 413.283 li
342.901 414.312 li
cp
f
342.901 416.364 mo
340.399 416.364 li
340.399 415.338 li
342.901 415.338 li
342.901 416.364 li
cp
f
342.901 418.417 mo
340.399 418.417 li
340.399 417.392 li
342.901 417.392 li
342.901 418.417 li
cp
f
342.901 420.472 mo
340.399 420.472 li
340.399 419.443 li
342.901 419.443 li
342.901 420.472 li
cp
f
342.901 422.523 mo
340.399 422.523 li
340.399 421.497 li
342.901 421.497 li
342.901 422.523 li
cp
f
342.901 424.578 mo
340.399 424.578 li
340.399 423.552 li
342.901 423.552 li
342.901 424.578 li
cp
f
342.901 426.632 mo
340.399 426.632 li
340.399 425.605 li
342.901 425.605 li
342.901 426.632 li
cp
f
342.901 428.685 mo
340.399 428.685 li
340.399 427.658 li
342.901 427.658 li
342.901 428.685 li
cp
f
342.901 430.694 mo
340.399 430.694 li
340.399 429.67 li
342.901 429.67 li
342.901 430.694 li
cp
f
342.901 432.749 mo
340.399 432.749 li
340.399 431.722 li
342.901 431.722 li
342.901 432.749 li
cp
f
342.901 434.802 mo
340.399 434.802 li
340.399 433.776 li
342.901 433.776 li
342.901 434.802 li
cp
f
342.901 436.857 mo
340.399 436.857 li
340.399 435.83 li
342.901 435.83 li
342.901 436.857 li
cp
f
342.901 438.91 mo
340.399 438.91 li
340.399 437.883 li
342.901 437.883 li
342.901 438.91 li
cp
f
342.901 440.963 mo
340.399 440.963 li
340.399 439.937 li
342.901 439.937 li
342.901 440.963 li
cp
f
342.901 443.017 mo
340.399 443.017 li
340.399 441.989 li
342.901 441.989 li
342.901 443.017 li
cp
f
354.026 400.407 mo
336.784 400.407 li
336.784 399.129 li
354.026 399.129 li
354.026 400.407 li
cp
.666667 .666667 .666667 rgb
f
340.836 399.129 mo
339.288 399.129 li
339.288 397.301 li
340.836 397.301 li
340.836 399.129 li
cp
.831373 .831373 .831373 rgb
f
356.246 444.433 mo
355.625 444.433 li
355.625 400.377 li
356.246 400.377 li
356.246 444.433 li
cp
.396078 .772549 .772549 rgb
f
335.185 444.433 mo
334.564 444.433 li
334.564 400.377 li
335.185 400.377 li
335.185 444.433 li
cp
f
338.79 447.273 mo
338.79 449.972 li
340.003 449.972 li
340.003 447.273 li
338.79 447.273 li
cp
.113725 .27451 .27451 rgb
f
342.794 447.273 mo
342.794 449.972 li
344.009 449.972 li
344.009 447.273 li
342.794 447.273 li
cp
f
346.8 447.273 mo
346.8 449.972 li
348.016 449.972 li
348.016 447.273 li
346.8 447.273 li
cp
f
350.807 447.273 mo
350.807 449.972 li
352.02 449.972 li
352.02 447.273 li
350.807 447.273 li
cp
f
334.721 447.273 mo
335.996 448.551 li
335.996 447.273 li
334.721 447.273 li
cp
f
334.721 447.273 mo
334.721 446.552 li
356.09 446.552 li
358.155 448.616 li
358.155 444.433 li
332.655 444.433 li
332.655 449.972 li
335.996 449.972 li
335.996 448.551 li
334.721 447.273 li
cp
.168627 .407843 .407843 rgb
f
356.09 446.552 mo
356.09 447.273 li
354.813 447.273 li
354.813 449.972 li
358.155 449.972 li
358.155 448.616 li
356.09 446.552 li
cp
.113725 .27451 .27451 rgb
f
337.574 447.273 mo
337.574 449.972 li
338.79 449.972 li
338.79 447.273 li
337.574 447.273 li
cp
.172549 .172549 .172549 rgb
f
335.996 448.551 mo
337.21 449.766 li
337.21 447.273 li
335.996 447.273 li
335.996 448.551 li
cp
f
335.996 448.551 mo
335.996 449.972 li
337.21 449.972 li
337.21 449.766 li
335.996 448.551 li
cp
.227451 .227451 .227451 rgb
f
337.21 447.273 mo
337.21 449.766 li
337.417 449.972 li
337.574 449.972 li
337.574 447.273 li
337.21 447.273 li
cp
.423529 .423529 .423529 rgb
f
337.21 449.972 mo
337.417 449.972 li
337.21 449.766 li
337.21 449.972 li
cp
.564706 .564706 .564706 rgb
f
340.003 447.273 mo
340.003 449.972 li
341.216 449.972 li
341.216 447.273 li
340.003 447.273 li
cp
.172549 .172549 .172549 rgb
f
341.581 447.273 mo
341.581 449.972 li
342.794 449.972 li
342.794 447.273 li
341.581 447.273 li
cp
f
341.216 447.273 mo
341.216 449.972 li
341.581 449.972 li
341.581 447.273 li
341.216 447.273 li
cp
.423529 .423529 .423529 rgb
f
344.009 447.273 mo
344.009 449.972 li
345.223 449.972 li
345.223 447.273 li
344.009 447.273 li
cp
.172549 .172549 .172549 rgb
f
345.588 447.273 mo
345.588 449.972 li
346.8 449.972 li
346.8 447.273 li
345.588 447.273 li
cp
f
345.223 447.273 mo
345.223 449.972 li
345.588 449.972 li
345.588 447.273 li
345.223 447.273 li
cp
.423529 .423529 .423529 rgb
f
349.594 447.273 mo
349.594 449.972 li
350.807 449.972 li
350.807 447.273 li
349.594 447.273 li
cp
.172549 .172549 .172549 rgb
f
348.016 447.273 mo
348.016 449.972 li
349.229 449.972 li
349.229 447.273 li
348.016 447.273 li
cp
f
349.229 447.273 mo
349.229 449.972 li
349.594 449.972 li
349.594 447.273 li
349.229 447.273 li
cp
.423529 .423529 .423529 rgb
f
353.599 447.273 mo
353.599 449.972 li
354.813 449.972 li
354.813 447.273 li
353.599 447.273 li
cp
.172549 .172549 .172549 rgb
f
352.02 447.273 mo
352.02 449.972 li
353.234 449.972 li
353.234 447.273 li
352.02 447.273 li
cp
f
353.234 447.273 mo
353.234 449.972 li
353.599 449.972 li
353.599 447.273 li
353.234 447.273 li
cp
.423529 .423529 .423529 rgb
f
334.721 446.552 mo
334.721 447.273 li
335.996 447.273 li
337.21 447.273 li
337.574 447.273 li
338.79 447.273 li
340.003 447.273 li
341.216 447.273 li
341.581 447.273 li
342.794 447.273 li
344.009 447.273 li
345.223 447.273 li
345.404 447.273 li
345.404 446.552 li
334.721 446.552 li
cp
.584314 .584314 .584314 rgb
f
345.404 446.552 mo
345.404 447.273 li
345.588 447.273 li
346.8 447.273 li
348.016 447.273 li
349.229 447.273 li
349.594 447.273 li
350.807 447.273 li
352.02 447.273 li
353.234 447.273 li
353.599 447.273 li
354.813 447.273 li
356.09 447.273 li
356.09 446.552 li
345.404 446.552 li
cp
.478431 .478431 .478431 rgb
f
191.709 431.56 mo
174.337 431.56 li
174.337 398.654 li
191.709 398.654 li
191.709 431.56 li
cp
.227451 .447059 .576471 rgb
f
191.709 449.972 mo
174.337 449.972 li
174.337 435.656 li
191.709 435.656 li
191.709 449.972 li
cp
f
191.709 401.167 mo
174.337 401.167 li
174.337 400.488 li
191.709 400.488 li
191.709 401.167 li
cp
.282353 .552941 .713726 rgb
f
191.709 429.727 mo
174.337 429.727 li
174.337 429.049 li
191.709 429.049 li
191.709 429.727 li
cp
f
191.709 448.109 mo
174.337 448.109 li
174.337 447.432 li
191.709 447.432 li
191.709 448.109 li
cp
f
176.401 429.049 mo
175.369 429.049 li
175.369 401.167 li
176.401 401.167 li
176.401 429.049 li
cp
.141176 .290196 .356863 rgb
f
178.465 429.049 mo
177.434 429.049 li
177.434 401.167 li
178.465 401.167 li
178.465 429.049 li
cp
f
180.467 429.049 mo
179.434 429.049 li
179.434 401.167 li
180.467 401.167 li
180.467 429.049 li
cp
f
182.531 429.049 mo
181.499 429.049 li
181.499 401.167 li
182.531 401.167 li
182.531 429.049 li
cp
f
184.595 429.049 mo
183.563 429.049 li
183.563 401.167 li
184.595 401.167 li
184.595 429.049 li
cp
f
186.66 429.049 mo
185.627 429.049 li
185.627 401.167 li
186.66 401.167 li
186.66 429.049 li
cp
f
188.661 429.049 mo
187.628 429.049 li
187.628 401.167 li
188.661 401.167 li
188.661 429.049 li
cp
f
190.726 429.049 mo
189.693 429.049 li
189.693 401.167 li
190.726 401.167 li
190.726 429.049 li
cp
f
176.401 447.421 mo
175.369 447.421 li
175.369 436.668 li
176.401 436.668 li
176.401 447.421 li
cp
f
178.465 447.421 mo
177.434 447.421 li
177.434 436.668 li
178.465 436.668 li
178.465 447.421 li
cp
f
180.467 447.421 mo
179.434 447.421 li
179.434 436.668 li
180.467 436.668 li
180.467 447.421 li
cp
f
182.531 447.421 mo
181.499 447.421 li
181.499 436.668 li
182.531 436.668 li
182.531 447.421 li
cp
f
184.595 447.421 mo
183.563 447.421 li
183.563 436.668 li
184.595 436.668 li
184.595 447.421 li
cp
f
186.66 447.421 mo
185.627 447.421 li
185.627 436.668 li
186.66 436.668 li
186.66 447.421 li
cp
f
188.661 447.421 mo
187.628 447.421 li
187.628 436.668 li
188.661 436.668 li
188.661 447.421 li
cp
f
190.726 447.421 mo
189.693 447.421 li
189.693 436.668 li
190.726 436.668 li
190.726 447.421 li
cp
f
182.315 448.109 mo
180.388 448.109 li
180.388 449.972 li
182.315 449.972 li
182.315 448.109 li
cp
.113725 .223529 .290196 rgb
f
181.479 449.972 mo
181.227 449.972 li
181.227 448.109 li
181.479 448.109 li
181.479 449.972 li
cp
.160784 .356863 .45098 rgb
f
185.594 448.109 mo
183.668 448.109 li
183.668 449.972 li
185.594 449.972 li
185.594 448.109 li
cp
.113725 .223529 .290196 rgb
f
184.755 449.972 mo
184.504 449.972 li
184.504 448.109 li
184.755 448.109 li
184.755 449.972 li
cp
.160784 .356863 .45098 rgb
f
191.709 435.656 mo
191.709 431.56 li
179.256 431.56 li
183.353 435.656 li
191.709 435.656 li
cp
.113725 .223529 .290196 rgb
f
179.256 431.56 mo
179.256 435.656 li
183.353 435.656 li
179.256 431.56 li
cp
.141176 .290196 .356863 rgb
f
194.72 398.654 mo
191.709 398.654 li
191.709 449.972 li
194.72 449.972 li
194.72 435.639 li
194.72 398.654 li
cp
f
194.72 435.639 mo
194.72 449.972 li
201.375 449.972 li
201.375 435.639 li
194.72 435.639 li
cp
.113725 .223529 .290196 rgb
f
395.588 430.14 mo
376.877 430.14 li
376.877 394.697 li
395.588 394.697 li
395.588 430.14 li
cp
.4 .4 .4 rgb
f
395.588 449.972 mo
376.877 449.972 li
376.877 434.553 li
395.588 434.553 li
395.588 449.972 li
cp
f
395.588 397.403 mo
376.877 397.403 li
376.877 396.673 li
395.588 396.673 li
395.588 397.403 li
cp
.639216 .639216 .639216 rgb
f
395.588 428.165 mo
376.877 428.165 li
376.877 427.436 li
395.588 427.436 li
395.588 428.165 li
cp
f
395.588 447.966 mo
376.877 447.966 li
376.877 447.235 li
395.588 447.235 li
395.588 447.966 li
cp
f
379.101 427.436 mo
377.987 427.436 li
377.987 397.403 li
379.101 397.403 li
379.101 427.436 li
cp
.2 .2 .2 rgb
f
381.324 427.436 mo
380.214 427.436 li
380.214 397.403 li
381.324 397.403 li
381.324 427.436 li
cp
f
383.48 427.436 mo
382.367 427.436 li
382.367 397.403 li
383.48 397.403 li
383.48 427.436 li
cp
f
385.702 427.436 mo
384.591 427.436 li
384.591 397.403 li
385.702 397.403 li
385.702 427.436 li
cp
f
387.926 427.436 mo
386.814 427.436 li
386.814 397.403 li
387.926 397.403 li
387.926 427.436 li
cp
f
390.149 427.436 mo
389.038 427.436 li
389.038 397.403 li
390.149 397.403 li
390.149 427.436 li
cp
f
392.306 427.436 mo
391.192 427.436 li
391.192 397.403 li
392.306 397.403 li
392.306 427.436 li
cp
f
394.529 427.436 mo
393.416 427.436 li
393.416 397.403 li
394.529 397.403 li
394.529 427.436 li
cp
f
379.101 447.225 mo
377.987 447.225 li
377.987 435.643 li
379.101 435.643 li
379.101 447.225 li
cp
f
381.324 447.225 mo
380.214 447.225 li
380.214 435.643 li
381.324 435.643 li
381.324 447.225 li
cp
f
383.48 447.225 mo
382.367 447.225 li
382.367 435.643 li
383.48 435.643 li
383.48 447.225 li
cp
f
385.702 447.225 mo
384.591 447.225 li
384.591 435.643 li
385.702 435.643 li
385.702 447.225 li
cp
f
387.926 447.225 mo
386.814 447.225 li
386.814 435.643 li
387.926 435.643 li
387.926 447.225 li
cp
f
390.149 447.225 mo
389.038 447.225 li
389.038 435.643 li
390.149 435.643 li
390.149 447.225 li
cp
f
392.306 447.225 mo
391.192 447.225 li
391.192 435.643 li
392.306 435.643 li
392.306 447.225 li
cp
f
394.529 447.225 mo
393.416 447.225 li
393.416 435.643 li
394.529 435.643 li
394.529 447.225 li
cp
f
385.471 447.966 mo
383.395 447.966 li
383.395 449.972 li
385.471 449.972 li
385.471 447.966 li
cp
f
384.57 449.972 mo
384.299 449.972 li
384.299 447.966 li
384.57 447.966 li
384.57 449.972 li
cp
.4 .4 .4 rgb
f
389.003 447.966 mo
386.927 447.966 li
386.927 449.972 li
389.003 449.972 li
389.003 447.966 li
cp
.2 .2 .2 rgb
f
388.099 449.972 mo
387.829 449.972 li
387.829 447.966 li
388.099 447.966 li
388.099 449.972 li
cp
.4 .4 .4 rgb
f
395.588 434.553 mo
395.588 430.14 li
382.176 430.14 li
386.588 434.553 li
395.588 434.553 li
cp
.2 .2 .2 rgb
f
382.176 430.14 mo
382.176 434.553 li
386.588 434.553 li
382.176 430.14 li
cp
.301961 .301961 .301961 rgb
f
398.831 394.697 mo
395.588 394.697 li
395.588 449.972 li
398.831 449.972 li
398.831 434.533 li
398.831 394.697 li
cp
f
398.831 434.533 mo
398.831 449.972 li
405.999 449.972 li
405.999 434.533 li
398.831 434.533 li
cp
.2 .2 .2 rgb
f
131.802 405.95 mo
131.802 415.562 li
139.382 415.562 li
139.382 405.95 li
131.802 405.95 li
cp
.227451 .447059 .576471 rgb
f
147.185 405.95 mo
139.382 405.95 li
139.382 415.562 li
147.185 415.562 li
147.185 405.95 li
cp
.172549 .337255 .431373 rgb
f
145.568 415.562 mo
145.568 411.714 li
143.809 411.714 li
143.809 408.831 li
142.055 408.831 li
142.055 405.95 li
140.292 405.95 li
140.292 403.068 li
138.698 403.068 li
138.698 405.95 li
136.933 405.95 li
136.933 408.831 li
135.179 408.831 li
135.179 411.714 li
133.419 411.714 li
133.419 415.562 li
131.802 415.562 li
131.802 449.972 li
147.185 449.972 li
147.185 415.562 li
145.568 415.562 li
cp
.772549 .772549 .772549 rgb
f
135.052 444.512 mo
134.265 444.512 li
134.265 416.761 li
135.052 416.761 li
135.052 444.512 li
cp
.227451 .447059 .576471 rgb
f
136.627 444.512 mo
135.84 444.512 li
135.84 416.761 li
136.627 416.761 li
136.627 444.512 li
cp
f
138.202 444.512 mo
137.416 444.512 li
137.416 416.761 li
138.202 416.761 li
138.202 444.512 li
cp
f
139.776 444.512 mo
138.989 444.512 li
138.989 416.761 li
139.776 416.761 li
139.776 444.512 li
cp
f
141.351 444.512 mo
140.563 444.512 li
140.563 416.761 li
141.351 416.761 li
141.351 444.512 li
cp
f
142.924 444.512 mo
142.137 444.512 li
142.137 416.761 li
142.924 416.761 li
142.924 444.512 li
cp
f
144.5 444.512 mo
143.712 444.512 li
143.712 416.761 li
144.5 416.761 li
144.5 444.512 li
cp
f
135.052 415.514 mo
134.265 415.514 li
134.265 412.996 li
135.052 412.996 li
135.052 415.514 li
cp
f
136.627 415.514 mo
135.84 415.514 li
135.84 412.996 li
136.627 412.996 li
136.627 415.514 li
cp
f
138.202 415.514 mo
137.416 415.514 li
137.416 412.996 li
138.202 412.996 li
138.202 415.514 li
cp
f
139.776 415.514 mo
138.989 415.514 li
138.989 412.996 li
139.776 412.996 li
139.776 415.514 li
cp
f
141.351 415.514 mo
140.563 415.514 li
140.563 412.996 li
141.351 412.996 li
141.351 415.514 li
cp
f
142.924 415.514 mo
142.137 415.514 li
142.137 412.996 li
142.924 412.996 li
142.924 415.514 li
cp
f
144.5 415.514 mo
143.712 415.514 li
143.712 412.996 li
144.5 412.996 li
144.5 415.514 li
cp
f
148.855 403.068 mo
147.185 403.068 li
147.185 449.972 li
148.855 449.972 li
148.855 403.068 li
cp
.580392 .580392 .580392 rgb
f
131.802 403.068 mo
130.133 403.068 li
130.133 449.972 li
131.802 449.972 li
131.802 403.068 li
cp
.909804 .909804 .909804 rgb
f
148.855 444.512 mo
130.133 444.512 li
130.133 449.972 li
148.855 449.972 li
148.855 444.512 li
cp
.141176 .290196 .356863 rgb
f
147.185 446.886 mo
131.802 446.886 li
131.802 448.163 li
133.612 449.972 li
145.377 449.972 li
147.185 448.163 li
147.185 446.886 li
cp
.772549 .772549 .772549 rgb
f
133.612 448.163 mo
131.802 448.163 li
131.802 449.972 li
133.612 449.972 li
133.612 448.163 li
cp
.0862745 .168627 .219608 rgb
f
136.324 448.163 mo
134.515 448.163 li
134.515 449.972 li
136.324 449.972 li
136.324 448.163 li
cp
f
139.047 448.163 mo
137.238 448.163 li
137.238 449.972 li
139.047 449.972 li
139.047 448.163 li
cp
f
141.759 448.163 mo
139.952 448.163 li
139.952 449.972 li
141.759 449.972 li
141.759 448.163 li
cp
f
144.472 448.163 mo
142.665 448.163 li
142.665 449.972 li
144.472 449.972 li
144.472 448.163 li
cp
f
147.185 448.163 mo
145.377 448.163 li
145.377 449.972 li
147.185 449.972 li
147.185 448.163 li
cp
f
147.185 416.761 mo
131.802 416.761 li
131.802 415.514 li
147.185 415.514 li
147.185 416.761 li
cp
.909804 .909804 .909804 rgb
f
359.824 405.95 mo
359.824 415.562 li
367.404 415.562 li
367.404 405.95 li
359.824 405.95 li
cp
.247059 .717647 .713726 rgb
f
375.207 405.95 mo
367.404 405.95 li
367.404 415.562 li
375.207 415.562 li
375.207 405.95 li
cp
.184314 .537255 .537255 rgb
f
373.59 415.562 mo
373.59 411.714 li
371.831 411.714 li
371.831 408.831 li
370.077 408.831 li
370.077 405.95 li
368.314 405.95 li
368.314 403.068 li
366.72 403.068 li
366.72 405.95 li
364.955 405.95 li
364.955 408.831 li
363.201 408.831 li
363.201 411.714 li
361.441 411.714 li
361.441 415.562 li
359.824 415.562 li
359.824 449.972 li
375.207 449.972 li
375.207 415.562 li
373.59 415.562 li
cp
.772549 .772549 .772549 rgb
f
363.074 444.512 mo
362.287 444.512 li
362.287 416.761 li
363.074 416.761 li
363.074 444.512 li
cp
.184314 .537255 .537255 rgb
f
364.649 444.512 mo
363.862 444.512 li
363.862 416.761 li
364.649 416.761 li
364.649 444.512 li
cp
f
366.224 444.512 mo
365.438 444.512 li
365.438 416.761 li
366.224 416.761 li
366.224 444.512 li
cp
f
367.798 444.512 mo
367.011 444.512 li
367.011 416.761 li
367.798 416.761 li
367.798 444.512 li
cp
f
369.373 444.512 mo
368.585 444.512 li
368.585 416.761 li
369.373 416.761 li
369.373 444.512 li
cp
f
370.946 444.512 mo
370.159 444.512 li
370.159 416.761 li
370.946 416.761 li
370.946 444.512 li
cp
f
372.522 444.512 mo
371.734 444.512 li
371.734 416.761 li
372.522 416.761 li
372.522 444.512 li
cp
f
363.074 415.514 mo
362.287 415.514 li
362.287 412.996 li
363.074 412.996 li
363.074 415.514 li
cp
f
364.649 415.514 mo
363.862 415.514 li
363.862 412.996 li
364.649 412.996 li
364.649 415.514 li
cp
f
366.224 415.514 mo
365.438 415.514 li
365.438 412.996 li
366.224 412.996 li
366.224 415.514 li
cp
f
367.798 415.514 mo
367.011 415.514 li
367.011 412.996 li
367.798 412.996 li
367.798 415.514 li
cp
f
369.373 415.514 mo
368.585 415.514 li
368.585 412.996 li
369.373 412.996 li
369.373 415.514 li
cp
f
370.946 415.514 mo
370.159 415.514 li
370.159 412.996 li
370.946 412.996 li
370.946 415.514 li
cp
f
372.522 415.514 mo
371.734 415.514 li
371.734 412.996 li
372.522 412.996 li
372.522 415.514 li
cp
f
376.877 403.068 mo
375.207 403.068 li
375.207 449.972 li
376.877 449.972 li
376.877 403.068 li
cp
.580392 .580392 .580392 rgb
f
359.824 403.068 mo
358.155 403.068 li
358.155 449.972 li
359.824 449.972 li
359.824 403.068 li
cp
.909804 .909804 .909804 rgb
f
376.877 444.512 mo
358.155 444.512 li
358.155 449.972 li
376.877 449.972 li
376.877 444.512 li
cp
.0627451 .180392 .180392 rgb
f
375.207 446.886 mo
359.824 446.886 li
359.824 448.163 li
361.634 449.972 li
373.399 449.972 li
375.207 448.163 li
375.207 446.886 li
cp
.772549 .772549 .772549 rgb
f
361.634 448.163 mo
359.824 448.163 li
359.824 449.972 li
361.634 449.972 li
361.634 448.163 li
cp
.101961 .419608 .415686 rgb
f
364.346 448.163 mo
362.537 448.163 li
362.537 449.972 li
364.346 449.972 li
364.346 448.163 li
cp
f
367.069 448.163 mo
365.26 448.163 li
365.26 449.972 li
367.069 449.972 li
367.069 448.163 li
cp
f
369.781 448.163 mo
367.974 448.163 li
367.974 449.972 li
369.781 449.972 li
369.781 448.163 li
cp
f
372.494 448.163 mo
370.686 448.163 li
370.686 449.972 li
372.494 449.972 li
372.494 448.163 li
cp
f
375.207 448.163 mo
373.399 448.163 li
373.399 449.972 li
375.207 449.972 li
375.207 448.163 li
cp
f
375.207 416.761 mo
359.824 416.761 li
359.824 415.514 li
375.207 415.514 li
375.207 416.761 li
cp
.909804 .909804 .909804 rgb
f
225.964 405.95 mo
225.964 415.562 li
233.544 415.562 li
233.544 405.95 li
225.964 405.95 li
cp
.227451 .447059 .576471 rgb
f
241.347 405.95 mo
233.544 405.95 li
233.544 415.562 li
241.347 415.562 li
241.347 405.95 li
cp
.172549 .337255 .431373 rgb
f
239.73 415.562 mo
239.73 411.714 li
237.971 411.714 li
237.971 408.831 li
236.217 408.831 li
236.217 405.95 li
234.453 405.95 li
234.453 403.068 li
232.859 403.068 li
232.859 405.95 li
231.095 405.95 li
231.095 408.831 li
229.341 408.831 li
229.341 411.714 li
227.581 411.714 li
227.581 415.562 li
225.964 415.562 li
225.964 449.972 li
241.347 449.972 li
241.347 415.562 li
239.73 415.562 li
cp
.772549 .772549 .772549 rgb
f
229.214 444.512 mo
228.427 444.512 li
228.427 416.761 li
229.214 416.761 li
229.214 444.512 li
cp
.227451 .447059 .576471 rgb
f
230.789 444.512 mo
230.002 444.512 li
230.002 416.761 li
230.789 416.761 li
230.789 444.512 li
cp
f
232.363 444.512 mo
231.577 444.512 li
231.577 416.761 li
232.363 416.761 li
232.363 444.512 li
cp
f
233.938 444.512 mo
233.15 444.512 li
233.15 416.761 li
233.938 416.761 li
233.938 444.512 li
cp
f
235.513 444.512 mo
234.725 444.512 li
234.725 416.761 li
235.513 416.761 li
235.513 444.512 li
cp
f
237.086 444.512 mo
236.299 444.512 li
236.299 416.761 li
237.086 416.761 li
237.086 444.512 li
cp
f
238.661 444.512 mo
237.874 444.512 li
237.874 416.761 li
238.661 416.761 li
238.661 444.512 li
cp
f
229.214 415.514 mo
228.427 415.514 li
228.427 412.996 li
229.214 412.996 li
229.214 415.514 li
cp
f
230.789 415.514 mo
230.002 415.514 li
230.002 412.996 li
230.789 412.996 li
230.789 415.514 li
cp
f
232.363 415.514 mo
231.577 415.514 li
231.577 412.996 li
232.363 412.996 li
232.363 415.514 li
cp
f
233.938 415.514 mo
233.15 415.514 li
233.15 412.996 li
233.938 412.996 li
233.938 415.514 li
cp
f
235.513 415.514 mo
234.725 415.514 li
234.725 412.996 li
235.513 412.996 li
235.513 415.514 li
cp
f
237.086 415.514 mo
236.299 415.514 li
236.299 412.996 li
237.086 412.996 li
237.086 415.514 li
cp
f
238.661 415.514 mo
237.874 415.514 li
237.874 412.996 li
238.661 412.996 li
238.661 415.514 li
cp
f
243.017 403.068 mo
241.347 403.068 li
241.347 449.972 li
243.017 449.972 li
243.017 403.068 li
cp
.580392 .580392 .580392 rgb
f
225.964 403.068 mo
224.295 403.068 li
224.295 449.972 li
225.964 449.972 li
225.964 403.068 li
cp
.909804 .909804 .909804 rgb
f
243.017 444.512 mo
224.295 444.512 li
224.295 449.972 li
243.017 449.972 li
243.017 444.512 li
cp
.141176 .290196 .356863 rgb
f
241.347 446.886 mo
225.964 446.886 li
225.964 448.163 li
227.773 449.972 li
239.539 449.972 li
241.347 448.163 li
241.347 446.886 li
cp
.772549 .772549 .772549 rgb
f
227.773 448.163 mo
225.964 448.163 li
225.964 449.972 li
227.773 449.972 li
227.773 448.163 li
cp
.0862745 .168627 .219608 rgb
f
230.485 448.163 mo
228.677 448.163 li
228.677 449.972 li
230.485 449.972 li
230.485 448.163 li
cp
f
233.209 448.163 mo
231.399 448.163 li
231.399 449.972 li
233.209 449.972 li
233.209 448.163 li
cp
f
235.921 448.163 mo
234.113 448.163 li
234.113 449.972 li
235.921 449.972 li
235.921 448.163 li
cp
f
238.634 448.163 mo
236.826 448.163 li
236.826 449.972 li
238.634 449.972 li
238.634 448.163 li
cp
f
241.347 448.163 mo
239.539 448.163 li
239.539 449.972 li
241.347 449.972 li
241.347 448.163 li
cp
f
241.347 416.761 mo
225.964 416.761 li
225.964 415.514 li
241.347 415.514 li
241.347 416.761 li
cp
.909804 .909804 .909804 rgb
f
8.39601 450 mo
21.3345 450 li
21.3345 448.677 li
8.39601 448.677 li
8.39601 450 li
cp
.580392 .580392 .580392 rgb
f
21.3345 416.465 mo
8.39601 416.465 li
8.39601 418.251 li
21.3345 418.251 li
21.3345 416.465 li
cp
.772549 .772549 .772549 rgb
f
12.3638 422.221 mo
21.3345 422.221 li
21.3345 420.896 li
11.041 420.896 li
12.3638 422.221 li
cp
.247059 .717647 .713726 rgb
f
11.041 420.896 mo
8.39601 420.896 li
8.39601 422.221 li
12.3638 422.221 li
11.041 420.896 li
cp
.184314 .537255 .537255 rgb
f
15.0102 424.866 mo
21.3345 424.866 li
21.3345 423.543 li
13.687 423.543 li
15.0102 424.866 li
cp
.247059 .717647 .713726 rgb
f
13.687 423.543 mo
8.39601 423.543 li
8.39601 424.866 li
15.0102 424.866 li
13.687 423.543 li
cp
.184314 .537255 .537255 rgb
f
16.333 426.189 mo
8.39601 426.189 li
8.39601 427.511 li
17.6558 427.511 li
16.333 426.189 li
cp
f
17.6558 427.511 mo
21.3345 427.511 li
21.3345 426.189 li
16.333 426.189 li
17.6558 427.511 li
cp
.247059 .717647 .713726 rgb
f
18.9785 428.834 mo
8.39601 428.834 li
8.39601 430.157 li
20.3013 430.157 li
18.9785 428.834 li
cp
.184314 .537255 .537255 rgb
f
20.3013 430.157 mo
21.3345 430.157 li
21.3345 428.834 li
18.9785 428.834 li
20.3013 430.157 li
cp
.247059 .717647 .713726 rgb
f
8.39601 432.803 mo
21.3345 432.803 li
21.3345 431.479 li
8.39601 431.479 li
8.39601 432.803 li
cp
.184314 .537255 .537255 rgb
f
8.39601 435.448 mo
21.3345 435.448 li
21.3345 434.125 li
8.39601 434.125 li
8.39601 435.448 li
cp
f
8.39601 438.093 mo
21.3345 438.093 li
21.3345 436.771 li
8.39601 436.771 li
8.39601 438.093 li
cp
f
8.39601 440.74 mo
21.3345 440.74 li
21.3345 439.417 li
8.39601 439.417 li
8.39601 440.74 li
cp
f
8.39601 443.386 mo
21.3345 443.386 li
21.3345 442.064 li
8.39601 442.064 li
8.39601 443.386 li
cp
f
8.39601 446.031 mo
21.3345 446.031 li
21.3345 444.709 li
8.39601 444.709 li
8.39601 446.031 li
cp
f
8.39601 448.677 mo
21.3345 448.677 li
21.3345 447.354 li
8.39601 447.354 li
8.39601 448.677 li
cp
f
12.3638 422.221 mo
8.39601 422.221 li
8.39601 423.543 li
13.687 423.543 li
12.3638 422.221 li
cp
.0784314 .313726 .313726 rgb
f
13.687 423.543 mo
21.3345 423.543 li
21.3345 422.221 li
12.3638 422.221 li
13.687 423.543 li
cp
.101961 .419608 .415686 rgb
f
8.39601 418.251 mo
8.39601 419.574 li
9.71871 419.574 li
8.39601 418.251 li
cp
.184314 .537255 .537255 rgb
f
21.3345 419.574 mo
21.3345 418.251 li
8.39601 418.251 li
9.71871 419.574 li
21.3345 419.574 li
cp
.247059 .717647 .713726 rgb
f
9.71871 419.574 mo
8.39601 419.574 li
8.39601 420.896 li
11.041 420.896 li
9.71871 419.574 li
cp
.0784314 .313726 .313726 rgb
f
11.041 420.896 mo
21.3345 420.896 li
21.3345 419.574 li
9.71871 419.574 li
11.041 420.896 li
cp
.101961 .419608 .415686 rgb
f
15.0102 424.866 mo
8.39601 424.866 li
8.39601 426.189 li
16.333 426.189 li
15.0102 424.866 li
cp
.0784314 .313726 .313726 rgb
f
16.333 426.189 mo
21.3345 426.189 li
21.3345 424.866 li
15.0102 424.866 li
16.333 426.189 li
cp
.101961 .419608 .415686 rgb
f
18.9785 428.834 mo
21.3345 428.834 li
21.3345 427.511 li
17.6558 427.511 li
18.9785 428.834 li
cp
f
17.6558 427.511 mo
8.39601 427.511 li
8.39601 428.834 li
18.9785 428.834 li
17.6558 427.511 li
cp
.0784314 .313726 .313726 rgb
f
20.3013 430.157 mo
8.39601 430.157 li
8.39601 431.479 li
21.3345 431.479 li
21.3345 431.189 li
20.3013 430.157 li
cp
f
21.3345 431.189 mo
21.3345 430.157 li
20.3013 430.157 li
21.3345 431.189 li
cp
.101961 .419608 .415686 rgb
f
8.39601 434.125 mo
21.3345 434.125 li
21.3345 432.803 li
8.39601 432.803 li
8.39601 434.125 li
cp
.0784314 .313726 .313726 rgb
f
8.39601 436.771 mo
21.3345 436.771 li
21.3345 435.448 li
8.39601 435.448 li
8.39601 436.771 li
cp
f
8.39601 439.417 mo
21.3345 439.417 li
21.3345 438.093 li
8.39601 438.093 li
8.39601 439.417 li
cp
f
8.39601 442.064 mo
21.3345 442.064 li
21.3345 440.74 li
8.39601 440.74 li
8.39601 442.064 li
cp
f
8.39601 444.709 mo
21.3345 444.709 li
21.3345 443.386 li
8.39601 443.386 li
8.39601 444.709 li
cp
f
8.39601 447.354 mo
21.3345 447.354 li
21.3345 446.031 li
8.39601 446.031 li
8.39601 447.354 li
cp
f
8.39601 450 mo
.76465 450 li
.76465 419.574 li
8.39601 419.574 li
8.39601 450 li
cp
.772549 .772549 .772549 rgb
f
8.39601 422.221 mo
1.47656 422.221 li
1.47656 420.896 li
8.39601 420.896 li
8.39601 422.221 li
cp
.247059 .717647 .713726 rgb
f
8.39601 424.866 mo
1.47656 424.866 li
1.47656 423.543 li
8.39601 423.543 li
8.39601 424.866 li
cp
f
8.39601 427.511 mo
1.47656 427.511 li
1.47656 426.189 li
8.39601 426.189 li
8.39601 427.511 li
cp
f
8.39601 430.157 mo
1.47656 430.157 li
1.47656 428.834 li
8.39601 428.834 li
8.39601 430.157 li
cp
f
8.39601 432.803 mo
1.47656 432.803 li
1.47656 431.479 li
8.39601 431.479 li
8.39601 432.803 li
cp
f
8.39601 435.448 mo
1.47656 435.448 li
1.47656 434.125 li
8.39601 434.125 li
8.39601 435.448 li
cp
f
8.39601 438.093 mo
1.47656 438.093 li
1.47656 436.771 li
8.39601 436.771 li
8.39601 438.093 li
cp
f
8.39601 440.74 mo
1.47656 440.74 li
1.47656 439.417 li
8.39601 439.417 li
8.39601 440.74 li
cp
f
8.39601 443.386 mo
1.47656 443.386 li
1.47656 442.064 li
8.39601 442.064 li
8.39601 443.386 li
cp
f
8.39601 446.031 mo
1.47656 446.031 li
1.47656 444.709 li
8.39601 444.709 li
8.39601 446.031 li
cp
f
8.39601 448.677 mo
1.47656 448.677 li
1.47656 447.354 li
8.39601 447.354 li
8.39601 448.677 li
cp
f
8.39601 423.543 mo
1.47656 423.543 li
1.47656 422.221 li
8.39601 422.221 li
8.39601 423.543 li
cp
.101961 .419608 .415686 rgb
f
8.39601 426.189 mo
1.47656 426.189 li
1.47656 424.866 li
8.39601 424.866 li
8.39601 426.189 li
cp
f
8.39601 428.834 mo
1.47656 428.834 li
1.47656 427.511 li
8.39601 427.511 li
8.39601 428.834 li
cp
f
8.39601 431.479 mo
1.47656 431.479 li
1.47656 430.157 li
8.39601 430.157 li
8.39601 431.479 li
cp
f
8.39601 434.125 mo
1.47656 434.125 li
1.47656 432.803 li
8.39601 432.803 li
8.39601 434.125 li
cp
f
8.39601 436.771 mo
1.47656 436.771 li
1.47656 435.448 li
8.39601 435.448 li
8.39601 436.771 li
cp
f
8.39601 439.417 mo
1.47656 439.417 li
1.47656 438.093 li
8.39601 438.093 li
8.39601 439.417 li
cp
f
8.39601 442.064 mo
1.47656 442.064 li
1.47656 440.74 li
8.39601 440.74 li
8.39601 442.064 li
cp
f
8.39601 444.709 mo
1.47656 444.709 li
1.47656 443.386 li
8.39601 443.386 li
8.39601 444.709 li
cp
f
8.39601 447.354 mo
1.47656 447.354 li
1.47656 446.031 li
8.39601 446.031 li
8.39601 447.354 li
cp
f
37.6533 450 mo
30.7344 450 li
30.7344 432.803 li
37.6533 432.803 li
37.6533 450 li
cp
.772549 .772549 .772549 rgb
f
37.6533 435.448 mo
30.7344 435.448 li
30.7344 434.125 li
37.6533 434.125 li
37.6533 435.448 li
cp
.247059 .717647 .713726 rgb
f
37.6533 438.093 mo
30.7344 438.093 li
30.7344 436.771 li
37.6533 436.771 li
37.6533 438.093 li
cp
f
37.6533 440.74 mo
30.7344 440.74 li
30.7344 439.417 li
37.6533 439.417 li
37.6533 440.74 li
cp
f
37.6533 443.386 mo
30.7344 443.386 li
30.7344 442.064 li
37.6533 442.064 li
37.6533 443.386 li
cp
f
37.6533 446.031 mo
30.7344 446.031 li
30.7344 444.709 li
37.6533 444.709 li
37.6533 446.031 li
cp
f
37.6533 448.677 mo
30.7344 448.677 li
30.7344 447.354 li
37.6533 447.354 li
37.6533 448.677 li
cp
f
37.6533 436.771 mo
30.7344 436.771 li
30.7344 435.448 li
37.6533 435.448 li
37.6533 436.771 li
cp
.101961 .419608 .415686 rgb
f
37.6533 439.417 mo
30.7344 439.417 li
30.7344 438.093 li
37.6533 438.093 li
37.6533 439.417 li
cp
f
37.6533 442.064 mo
30.7344 442.064 li
30.7344 440.74 li
37.6533 440.74 li
37.6533 442.064 li
cp
f
37.6533 444.709 mo
30.7344 444.709 li
30.7344 443.386 li
37.6533 443.386 li
37.6533 444.709 li
cp
f
37.6533 447.354 mo
30.7344 447.354 li
30.7344 446.031 li
37.6533 446.031 li
37.6533 447.354 li
cp
f
30.7344 450 mo
21.3345 450 li
21.3345 427.511 li
30.7344 427.511 li
30.7344 450 li
cp
.772549 .772549 .772549 rgb
f
30.7344 430.157 mo
21.3345 430.157 li
21.3345 428.834 li
30.7344 428.834 li
30.7344 430.157 li
cp
.247059 .717647 .713726 rgb
f
30.7344 432.803 mo
21.3345 432.803 li
21.3345 431.479 li
30.7344 431.479 li
30.7344 432.803 li
cp
f
30.7344 435.448 mo
21.3345 435.448 li
21.3345 434.125 li
30.7344 434.125 li
30.7344 435.448 li
cp
f
30.7344 438.093 mo
21.3345 438.093 li
21.3345 436.771 li
30.7344 436.771 li
30.7344 438.093 li
cp
f
30.7344 440.74 mo
21.3345 440.74 li
21.3345 439.417 li
30.7344 439.417 li
30.7344 440.74 li
cp
f
30.7344 443.386 mo
21.3345 443.386 li
21.3345 442.064 li
30.7344 442.064 li
30.7344 443.386 li
cp
f
30.7344 446.031 mo
21.3345 446.031 li
21.3345 444.709 li
30.7344 444.709 li
30.7344 446.031 li
cp
f
30.7344 448.677 mo
21.3345 448.677 li
21.3345 447.354 li
30.7344 447.354 li
30.7344 448.677 li
cp
f
30.7344 431.479 mo
21.3345 431.479 li
21.3345 430.157 li
30.7344 430.157 li
30.7344 431.479 li
cp
.101961 .419608 .415686 rgb
f
30.7344 434.125 mo
21.3345 434.125 li
21.3345 432.803 li
30.7344 432.803 li
30.7344 434.125 li
cp
f
30.7344 436.771 mo
21.3345 436.771 li
21.3345 435.448 li
30.7344 435.448 li
30.7344 436.771 li
cp
f
30.7344 439.417 mo
21.3345 439.417 li
21.3345 438.093 li
30.7344 438.093 li
30.7344 439.417 li
cp
f
30.7344 442.064 mo
21.3345 442.064 li
21.3345 440.74 li
30.7344 440.74 li
30.7344 442.064 li
cp
f
30.7344 444.709 mo
21.3345 444.709 li
21.3345 443.386 li
30.7344 443.386 li
30.7344 444.709 li
cp
f
30.7344 447.354 mo
21.3345 447.354 li
21.3345 446.031 li
30.7344 446.031 li
30.7344 447.354 li
cp
f
0 418.251 mo
8.39601 418.251 li
8.39601 420.896 li
0 420.896 li
0 418.251 li
cp
.909804 .909804 .909804 rgb
f
30.7339 431.479 mo
38.8647 431.479 li
38.8647 434.125 li
30.7339 434.125 li
30.7339 431.479 li
cp
f
21.3345 426.189 mo
32.0308 426.189 li
32.0308 428.834 li
21.3345 428.834 li
21.3345 426.189 li
cp
f
7.22803 415.607 mo
22.519 415.607 li
22.519 418.251 li
7.22803 418.251 li
7.22803 415.607 li
cp
f
22.0464 448.677 mo
21.3345 448.677 li
21.3345 428.834 li
22.0464 428.834 li
22.0464 448.677 li
cp
f
1.47656 448.677 mo
.76465 448.677 li
.76465 420.896 li
1.47656 420.896 li
1.47656 448.677 li
cp
f
31.4477 448.677 mo
30.7344 448.677 li
30.7344 434.125 li
31.4477 434.125 li
31.4477 448.677 li
cp
f
9.10841 418.251 mo
8.39601 418.251 li
9.10841 418.963 li
9.10841 418.251 li
cp
f
8.39601 418.251 mo
8.39601 448.677 li
9.10841 448.677 li
9.10841 418.963 li
8.39601 418.251 li
cp
.682353 .682353 .682353 rgb
f
20.041 413.599 mo
14.8735 413.599 li
14.8735 415.607 li
20.041 415.607 li
20.041 413.599 li
cp
.537255 .290196 .184314 rgb
f
9.70601 413.599 mo
9.70601 415.607 li
14.8735 415.607 li
14.8735 413.599 li
9.70601 413.599 li
cp
.717647 .384314 .247059 rgb
f
52.4897 408.091 mo
49.3833 408.091 li
49.3833 406.404 li
52.4897 406.404 li
52.4897 408.091 li
cp
.827451 .827451 .827451 rgb
f
50.9531 403.755 mo
50.9194 403.755 li
50.7231 406.404 li
51.1489 406.404 li
50.9531 403.755 li
cp
.615686 .615686 .615686 rgb
f
41.1142 408.091 mo
38.0088 408.091 li
38.0088 406.404 li
41.1142 406.404 li
41.1142 408.091 li
cp
.827451 .827451 .827451 rgb
f
39.5786 403.755 mo
39.5449 403.755 li
39.3486 406.404 li
39.7749 406.404 li
39.5786 403.755 li
cp
.615686 .615686 .615686 rgb
f
56.2095 450 mo
34.2895 450 li
34.2895 408.091 li
56.2095 408.091 li
56.2095 450 li
cp
.890196 .890196 .890196 rgb
f
37.7993 412.369 mo
35.2969 412.369 li
35.2969 411.343 li
37.7993 411.343 li
37.7993 412.369 li
cp
.247059 .717647 .713726 rgb
f
40.7178 412.369 mo
38.2148 412.369 li
38.2148 411.343 li
40.7178 411.343 li
40.7178 412.369 li
cp
f
43.5996 412.369 mo
41.0976 412.369 li
41.0976 411.343 li
43.5996 411.343 li
43.5996 412.369 li
cp
f
46.5185 412.369 mo
44.0166 412.369 li
44.0166 411.343 li
46.5185 411.343 li
46.5185 412.369 li
cp
f
49.4014 412.369 mo
46.8979 412.369 li
46.8979 411.343 li
49.4014 411.343 li
49.4014 412.369 li
cp
f
52.3188 412.369 mo
49.8169 412.369 li
49.8169 411.343 li
52.3188 411.343 li
52.3188 412.369 li
cp
f
55.2021 412.369 mo
52.6997 412.369 li
52.6997 411.343 li
55.2021 411.343 li
55.2021 412.369 li
cp
f
37.7993 413.909 mo
35.2969 413.909 li
35.2969 412.882 li
37.7993 412.882 li
37.7993 413.909 li
cp
f
40.7178 413.909 mo
38.2148 413.909 li
38.2148 412.882 li
40.7178 412.882 li
40.7178 413.909 li
cp
f
43.5996 413.909 mo
41.0976 413.909 li
41.0976 412.882 li
43.5996 412.882 li
43.5996 413.909 li
cp
f
46.5185 413.909 mo
44.0166 413.909 li
44.0166 412.882 li
46.5185 412.882 li
46.5185 413.909 li
cp
f
49.4014 413.909 mo
46.8979 413.909 li
46.8979 412.882 li
49.4014 412.882 li
49.4014 413.909 li
cp
f
52.3188 413.909 mo
49.8169 413.909 li
49.8169 412.882 li
52.3188 412.882 li
52.3188 413.909 li
cp
f
55.2021 413.909 mo
52.6997 413.909 li
52.6997 412.882 li
55.2021 412.882 li
55.2021 413.909 li
cp
f
37.7993 415.449 mo
35.2969 415.449 li
35.2969 414.423 li
37.7993 414.423 li
37.7993 415.449 li
cp
f
40.7178 415.449 mo
38.2148 415.449 li
38.2148 414.423 li
40.7178 414.423 li
40.7178 415.449 li
cp
f
43.5996 415.449 mo
41.0976 415.449 li
41.0976 414.423 li
43.5996 414.423 li
43.5996 415.449 li
cp
f
46.5185 415.449 mo
44.0166 415.449 li
44.0166 414.423 li
46.5185 414.423 li
46.5185 415.449 li
cp
f
49.4014 415.449 mo
46.8979 415.449 li
46.8979 414.423 li
49.4014 414.423 li
49.4014 415.449 li
cp
f
52.3188 415.449 mo
49.8169 415.449 li
49.8169 414.423 li
52.3188 414.423 li
52.3188 415.449 li
cp
f
55.2021 415.449 mo
52.6997 415.449 li
52.6997 414.423 li
55.2021 414.423 li
55.2021 415.449 li
cp
f
37.7993 416.988 mo
35.2969 416.988 li
35.2969 415.962 li
37.7993 415.962 li
37.7993 416.988 li
cp
f
40.7178 416.988 mo
38.2148 416.988 li
38.2148 415.962 li
40.7178 415.962 li
40.7178 416.988 li
cp
f
43.5996 416.988 mo
41.0976 416.988 li
41.0976 415.962 li
43.5996 415.962 li
43.5996 416.988 li
cp
f
46.5185 416.988 mo
44.0166 416.988 li
44.0166 415.962 li
46.5185 415.962 li
46.5185 416.988 li
cp
f
49.4014 416.988 mo
46.8979 416.988 li
46.8979 415.962 li
49.4014 415.962 li
49.4014 416.988 li
cp
f
52.3188 416.988 mo
49.8169 416.988 li
49.8169 415.962 li
52.3188 415.962 li
52.3188 416.988 li
cp
f
55.2021 416.988 mo
52.6997 416.988 li
52.6997 415.962 li
55.2021 415.962 li
55.2021 416.988 li
cp
f
37.7993 418.528 mo
35.2969 418.528 li
35.2969 417.502 li
37.7993 417.502 li
37.7993 418.528 li
cp
f
40.7178 418.528 mo
38.2148 418.528 li
38.2148 417.502 li
40.7178 417.502 li
40.7178 418.528 li
cp
f
43.5996 418.528 mo
41.0976 418.528 li
41.0976 417.502 li
43.5996 417.502 li
43.5996 418.528 li
cp
f
46.5185 418.528 mo
44.0166 418.528 li
44.0166 417.502 li
46.5185 417.502 li
46.5185 418.528 li
cp
f
49.4014 418.528 mo
46.8979 418.528 li
46.8979 417.502 li
49.4014 417.502 li
49.4014 418.528 li
cp
f
52.3188 418.528 mo
49.8169 418.528 li
49.8169 417.502 li
52.3188 417.502 li
52.3188 418.528 li
cp
f
55.2021 418.528 mo
52.6997 418.528 li
52.6997 417.502 li
55.2021 417.502 li
55.2021 418.528 li
cp
f
37.7993 420.068 mo
35.2969 420.068 li
35.2969 419.041 li
37.7993 419.041 li
37.7993 420.068 li
cp
f
40.7178 420.068 mo
38.2148 420.068 li
38.2148 419.041 li
40.7178 419.041 li
40.7178 420.068 li
cp
f
43.5996 420.068 mo
41.0976 420.068 li
41.0976 419.041 li
43.5996 419.041 li
43.5996 420.068 li
cp
f
46.5185 420.068 mo
44.0166 420.068 li
44.0166 419.041 li
46.5185 419.041 li
46.5185 420.068 li
cp
f
49.4014 420.068 mo
46.8979 420.068 li
46.8979 419.041 li
49.4014 419.041 li
49.4014 420.068 li
cp
f
52.3188 420.068 mo
49.8169 420.068 li
49.8169 419.041 li
52.3188 419.041 li
52.3188 420.068 li
cp
f
55.2021 420.068 mo
52.6997 420.068 li
52.6997 419.041 li
55.2021 419.041 li
55.2021 420.068 li
cp
f
37.7993 421.608 mo
35.2969 421.608 li
35.2969 420.581 li
37.7993 420.581 li
37.7993 421.608 li
cp
f
40.7178 421.608 mo
38.2148 421.608 li
38.2148 420.581 li
40.7178 420.581 li
40.7178 421.608 li
cp
f
43.5996 421.608 mo
41.0976 421.608 li
41.0976 420.581 li
43.5996 420.581 li
43.5996 421.608 li
cp
f
46.5185 421.608 mo
44.0166 421.608 li
44.0166 420.581 li
46.5185 420.581 li
46.5185 421.608 li
cp
f
49.4014 421.608 mo
46.8979 421.608 li
46.8979 420.581 li
49.4014 420.581 li
49.4014 421.608 li
cp
f
52.3188 421.608 mo
49.8169 421.608 li
49.8169 420.581 li
52.3188 420.581 li
52.3188 421.608 li
cp
f
55.2021 421.608 mo
52.6997 421.608 li
52.6997 420.581 li
55.2021 420.581 li
55.2021 421.608 li
cp
f
37.7993 423.147 mo
35.2969 423.147 li
35.2969 422.121 li
37.7993 422.121 li
37.7993 423.147 li
cp
f
40.7178 423.147 mo
38.2148 423.147 li
38.2148 422.121 li
40.7178 422.121 li
40.7178 423.147 li
cp
f
43.5996 423.147 mo
41.0976 423.147 li
41.0976 422.121 li
43.5996 422.121 li
43.5996 423.147 li
cp
f
46.5185 423.147 mo
44.0166 423.147 li
44.0166 422.121 li
46.5185 422.121 li
46.5185 423.147 li
cp
f
49.4014 423.147 mo
46.8979 423.147 li
46.8979 422.121 li
49.4014 422.121 li
49.4014 423.147 li
cp
f
52.3188 423.147 mo
49.8169 423.147 li
49.8169 422.121 li
52.3188 422.121 li
52.3188 423.147 li
cp
f
55.2021 423.147 mo
52.6997 423.147 li
52.6997 422.121 li
55.2021 422.121 li
55.2021 423.147 li
cp
f
37.7993 424.688 mo
35.2969 424.688 li
35.2969 423.661 li
37.7993 423.661 li
37.7993 424.688 li
cp
f
40.7178 424.688 mo
38.2148 424.688 li
38.2148 423.661 li
40.7178 423.661 li
40.7178 424.688 li
cp
f
43.5996 424.688 mo
41.0976 424.688 li
41.0976 423.661 li
43.5996 423.661 li
43.5996 424.688 li
cp
f
46.5185 424.688 mo
44.0166 424.688 li
44.0166 423.661 li
46.5185 423.661 li
46.5185 424.688 li
cp
f
49.4014 424.688 mo
46.8979 424.688 li
46.8979 423.661 li
49.4014 423.661 li
49.4014 424.688 li
cp
f
52.3188 424.688 mo
49.8169 424.688 li
49.8169 423.661 li
52.3188 423.661 li
52.3188 424.688 li
cp
f
55.2021 424.688 mo
52.6997 424.688 li
52.6997 423.661 li
55.2021 423.661 li
55.2021 424.688 li
cp
f
37.7993 426.228 mo
35.2969 426.228 li
35.2969 425.201 li
37.7993 425.201 li
37.7993 426.228 li
cp
f
40.7178 426.228 mo
38.2148 426.228 li
38.2148 425.201 li
40.7178 425.201 li
40.7178 426.228 li
cp
f
43.5996 426.228 mo
41.0976 426.228 li
41.0976 425.201 li
43.5996 425.201 li
43.5996 426.228 li
cp
f
46.5185 426.228 mo
44.0166 426.228 li
44.0166 425.201 li
46.5185 425.201 li
46.5185 426.228 li
cp
f
49.4014 426.228 mo
46.8979 426.228 li
46.8979 425.201 li
49.4014 425.201 li
49.4014 426.228 li
cp
f
52.3188 426.228 mo
49.8169 426.228 li
49.8169 425.201 li
52.3188 425.201 li
52.3188 426.228 li
cp
f
55.2021 426.228 mo
52.6997 426.228 li
52.6997 425.201 li
55.2021 425.201 li
55.2021 426.228 li
cp
f
37.7993 427.768 mo
35.2969 427.768 li
35.2969 426.74 li
37.7993 426.74 li
37.7993 427.768 li
cp
f
40.7178 427.768 mo
38.2148 427.768 li
38.2148 426.74 li
40.7178 426.74 li
40.7178 427.768 li
cp
f
43.5996 427.768 mo
41.0976 427.768 li
41.0976 426.74 li
43.5996 426.74 li
43.5996 427.768 li
cp
f
46.5185 427.768 mo
44.0166 427.768 li
44.0166 426.74 li
46.5185 426.74 li
46.5185 427.768 li
cp
f
49.4014 427.768 mo
46.8979 427.768 li
46.8979 426.74 li
49.4014 426.74 li
49.4014 427.768 li
cp
f
52.3188 427.768 mo
49.8169 427.768 li
49.8169 426.74 li
52.3188 426.74 li
52.3188 427.768 li
cp
f
55.2021 427.768 mo
52.6997 427.768 li
52.6997 426.74 li
55.2021 426.74 li
55.2021 427.768 li
cp
f
37.7993 429.307 mo
35.2969 429.307 li
35.2969 428.28 li
37.7993 428.28 li
37.7993 429.307 li
cp
f
40.7178 429.307 mo
38.2148 429.307 li
38.2148 428.28 li
40.7178 428.28 li
40.7178 429.307 li
cp
f
43.5996 429.307 mo
41.0976 429.307 li
41.0976 428.28 li
43.5996 428.28 li
43.5996 429.307 li
cp
f
46.5185 429.307 mo
44.0166 429.307 li
44.0166 428.28 li
46.5185 428.28 li
46.5185 429.307 li
cp
f
49.4014 429.307 mo
46.8979 429.307 li
46.8979 428.28 li
49.4014 428.28 li
49.4014 429.307 li
cp
f
52.3188 429.307 mo
49.8169 429.307 li
49.8169 428.28 li
52.3188 428.28 li
52.3188 429.307 li
cp
f
55.2021 429.307 mo
52.6997 429.307 li
52.6997 428.28 li
55.2021 428.28 li
55.2021 429.307 li
cp
f
37.7993 430.847 mo
35.2969 430.847 li
35.2969 429.82 li
37.7993 429.82 li
37.7993 430.847 li
cp
f
40.7178 430.847 mo
38.2148 430.847 li
38.2148 429.82 li
40.7178 429.82 li
40.7178 430.847 li
cp
f
43.5996 430.847 mo
41.0976 430.847 li
41.0976 429.82 li
43.5996 429.82 li
43.5996 430.847 li
cp
f
46.5185 430.847 mo
44.0166 430.847 li
44.0166 429.82 li
46.5185 429.82 li
46.5185 430.847 li
cp
f
49.4014 430.847 mo
46.8979 430.847 li
46.8979 429.82 li
49.4014 429.82 li
49.4014 430.847 li
cp
f
52.3188 430.847 mo
49.8169 430.847 li
49.8169 429.82 li
52.3188 429.82 li
52.3188 430.847 li
cp
f
55.2021 430.847 mo
52.6997 430.847 li
52.6997 429.82 li
55.2021 429.82 li
55.2021 430.847 li
cp
f
37.7993 432.387 mo
35.2969 432.387 li
35.2969 431.36 li
37.7993 431.36 li
37.7993 432.387 li
cp
f
40.7178 432.387 mo
38.2148 432.387 li
38.2148 431.36 li
40.7178 431.36 li
40.7178 432.387 li
cp
f
43.5996 432.387 mo
41.0976 432.387 li
41.0976 431.36 li
43.5996 431.36 li
43.5996 432.387 li
cp
f
46.5185 432.387 mo
44.0166 432.387 li
44.0166 431.36 li
46.5185 431.36 li
46.5185 432.387 li
cp
f
49.4014 432.387 mo
46.8979 432.387 li
46.8979 431.36 li
49.4014 431.36 li
49.4014 432.387 li
cp
f
52.3188 432.387 mo
49.8169 432.387 li
49.8169 431.36 li
52.3188 431.36 li
52.3188 432.387 li
cp
f
55.2021 432.387 mo
52.6997 432.387 li
52.6997 431.36 li
55.2021 431.36 li
55.2021 432.387 li
cp
f
37.7993 433.927 mo
35.2969 433.927 li
35.2969 432.899 li
37.7993 432.899 li
37.7993 433.927 li
cp
f
40.7178 433.927 mo
38.2148 433.927 li
38.2148 432.899 li
40.7178 432.899 li
40.7178 433.927 li
cp
f
43.5996 433.927 mo
41.0976 433.927 li
41.0976 432.899 li
43.5996 432.899 li
43.5996 433.927 li
cp
f
46.5185 433.927 mo
44.0166 433.927 li
44.0166 432.899 li
46.5185 432.899 li
46.5185 433.927 li
cp
f
49.4014 433.927 mo
46.8979 433.927 li
46.8979 432.899 li
49.4014 432.899 li
49.4014 433.927 li
cp
f
52.3188 433.927 mo
49.8169 433.927 li
49.8169 432.899 li
52.3188 432.899 li
52.3188 433.927 li
cp
f
55.2021 433.927 mo
52.6997 433.927 li
52.6997 432.899 li
55.2021 432.899 li
55.2021 433.927 li
cp
f
37.7993 435.468 mo
35.2969 435.468 li
35.2969 434.439 li
37.7993 434.439 li
37.7993 435.468 li
cp
f
40.7178 435.468 mo
38.2148 435.468 li
38.2148 434.439 li
40.7178 434.439 li
40.7178 435.468 li
cp
f
43.5996 435.468 mo
41.0976 435.468 li
41.0976 434.439 li
43.5996 434.439 li
43.5996 435.468 li
cp
f
46.5185 435.468 mo
44.0166 435.468 li
44.0166 434.439 li
46.5185 434.439 li
46.5185 435.468 li
cp
f
49.4014 435.468 mo
46.8979 435.468 li
46.8979 434.439 li
49.4014 434.439 li
49.4014 435.468 li
cp
f
52.3188 435.468 mo
49.8169 435.468 li
49.8169 434.439 li
52.3188 434.439 li
52.3188 435.468 li
cp
f
55.2021 435.468 mo
52.6997 435.468 li
52.6997 434.439 li
55.2021 434.439 li
55.2021 435.468 li
cp
f
37.7993 437.006 mo
35.2969 437.006 li
35.2969 435.979 li
37.7993 435.979 li
37.7993 437.006 li
cp
f
40.7178 437.006 mo
38.2148 437.006 li
38.2148 435.979 li
40.7178 435.979 li
40.7178 437.006 li
cp
f
43.5996 437.006 mo
41.0976 437.006 li
41.0976 435.979 li
43.5996 435.979 li
43.5996 437.006 li
cp
f
46.5185 437.006 mo
44.0166 437.006 li
44.0166 435.979 li
46.5185 435.979 li
46.5185 437.006 li
cp
f
49.4014 437.006 mo
46.8979 437.006 li
46.8979 435.979 li
49.4014 435.979 li
49.4014 437.006 li
cp
f
52.3188 437.006 mo
49.8169 437.006 li
49.8169 435.979 li
52.3188 435.979 li
52.3188 437.006 li
cp
f
55.2021 437.006 mo
52.6997 437.006 li
52.6997 435.979 li
55.2021 435.979 li
55.2021 437.006 li
cp
f
37.7993 438.546 mo
35.2969 438.546 li
35.2969 437.52 li
37.7993 437.52 li
37.7993 438.546 li
cp
f
40.7178 438.546 mo
38.2148 438.546 li
38.2148 437.52 li
40.7178 437.52 li
40.7178 438.546 li
cp
f
43.5996 438.546 mo
41.0976 438.546 li
41.0976 437.52 li
43.5996 437.52 li
43.5996 438.546 li
cp
f
46.5185 438.546 mo
44.0166 438.546 li
44.0166 437.52 li
46.5185 437.52 li
46.5185 438.546 li
cp
f
49.4014 438.546 mo
46.8979 438.546 li
46.8979 437.52 li
49.4014 437.52 li
49.4014 438.546 li
cp
f
52.3188 438.546 mo
49.8169 438.546 li
49.8169 437.52 li
52.3188 437.52 li
52.3188 438.546 li
cp
f
55.2021 438.546 mo
52.6997 438.546 li
52.6997 437.52 li
55.2021 437.52 li
55.2021 438.546 li
cp
f
37.7993 440.086 mo
35.2969 440.086 li
35.2969 439.059 li
37.7993 439.059 li
37.7993 440.086 li
cp
f
40.7178 440.086 mo
38.2148 440.086 li
38.2148 439.059 li
40.7178 439.059 li
40.7178 440.086 li
cp
f
43.5996 440.086 mo
41.0976 440.086 li
41.0976 439.059 li
43.5996 439.059 li
43.5996 440.086 li
cp
f
46.5185 440.086 mo
44.0166 440.086 li
44.0166 439.059 li
46.5185 439.059 li
46.5185 440.086 li
cp
f
49.4014 440.086 mo
46.8979 440.086 li
46.8979 439.059 li
49.4014 439.059 li
49.4014 440.086 li
cp
f
52.3188 440.086 mo
49.8169 440.086 li
49.8169 439.059 li
52.3188 439.059 li
52.3188 440.086 li
cp
f
55.2021 440.086 mo
52.6997 440.086 li
52.6997 439.059 li
55.2021 439.059 li
55.2021 440.086 li
cp
f
37.7993 441.626 mo
35.2969 441.626 li
35.2969 440.599 li
37.7993 440.599 li
37.7993 441.626 li
cp
f
40.7178 441.626 mo
38.2148 441.626 li
38.2148 440.599 li
40.7178 440.599 li
40.7178 441.626 li
cp
f
43.5996 441.626 mo
41.0976 441.626 li
41.0976 440.599 li
43.5996 440.599 li
43.5996 441.626 li
cp
f
46.5185 441.626 mo
44.0166 441.626 li
44.0166 440.599 li
46.5185 440.599 li
46.5185 441.626 li
cp
f
49.4014 441.626 mo
46.8979 441.626 li
46.8979 440.599 li
49.4014 440.599 li
49.4014 441.626 li
cp
f
52.3188 441.626 mo
49.8169 441.626 li
49.8169 440.599 li
52.3188 440.599 li
52.3188 441.626 li
cp
f
55.2021 441.626 mo
52.6997 441.626 li
52.6997 440.599 li
55.2021 440.599 li
55.2021 441.626 li
cp
f
37.7993 443.165 mo
35.2969 443.165 li
35.2969 442.14 li
37.7993 442.14 li
37.7993 443.165 li
cp
f
40.7178 443.165 mo
38.2148 443.165 li
38.2148 442.14 li
40.7178 442.14 li
40.7178 443.165 li
cp
f
43.5996 443.165 mo
41.0976 443.165 li
41.0976 442.14 li
43.5996 442.14 li
43.5996 443.165 li
cp
f
46.5185 443.165 mo
44.0166 443.165 li
44.0166 442.14 li
46.5185 442.14 li
46.5185 443.165 li
cp
f
49.4014 443.165 mo
46.8979 443.165 li
46.8979 442.14 li
49.4014 442.14 li
49.4014 443.165 li
cp
f
52.3188 443.165 mo
49.8169 443.165 li
49.8169 442.14 li
52.3188 442.14 li
52.3188 443.165 li
cp
f
55.2021 443.165 mo
52.6997 443.165 li
52.6997 442.14 li
55.2021 442.14 li
55.2021 443.165 li
cp
f
37.7993 444.706 mo
35.2969 444.706 li
35.2969 443.679 li
37.7993 443.679 li
37.7993 444.706 li
cp
f
40.7178 444.706 mo
38.2148 444.706 li
38.2148 443.679 li
40.7178 443.679 li
40.7178 444.706 li
cp
f
43.5996 444.706 mo
41.0976 444.706 li
41.0976 443.679 li
43.5996 443.679 li
43.5996 444.706 li
cp
f
46.5185 444.706 mo
44.0166 444.706 li
44.0166 443.679 li
46.5185 443.679 li
46.5185 444.706 li
cp
f
49.4014 444.706 mo
46.8979 444.706 li
46.8979 443.679 li
49.4014 443.679 li
49.4014 444.706 li
cp
f
52.3188 444.706 mo
49.8169 444.706 li
49.8169 443.679 li
52.3188 443.679 li
52.3188 444.706 li
cp
f
55.2021 444.706 mo
52.6997 444.706 li
52.6997 443.679 li
55.2021 443.679 li
55.2021 444.706 li
cp
f
36.2446 410.129 mo
35.2969 410.129 li
35.2969 408.091 li
36.2446 408.091 li
36.2446 410.129 li
cp
.666667 .666667 .666667 rgb
f
38.1406 410.129 mo
37.1924 410.129 li
37.1924 408.091 li
38.1406 408.091 li
38.1406 410.129 li
cp
f
40.0356 410.129 mo
39.0884 410.129 li
39.0884 408.091 li
40.0356 408.091 li
40.0356 410.129 li
cp
f
41.9321 410.129 mo
40.9839 410.129 li
40.9839 408.091 li
41.9321 408.091 li
41.9321 410.129 li
cp
f
43.8276 410.129 mo
42.8789 410.129 li
42.8789 408.091 li
43.8276 408.091 li
43.8276 410.129 li
cp
f
45.7231 410.129 mo
44.7759 410.129 li
44.7759 408.091 li
45.7231 408.091 li
45.7231 410.129 li
cp
f
47.6186 410.129 mo
46.6704 410.129 li
46.6704 408.091 li
47.6186 408.091 li
47.6186 410.129 li
cp
f
49.5141 410.129 mo
48.5669 410.129 li
48.5669 408.091 li
49.5141 408.091 li
49.5141 410.129 li
cp
f
51.4106 410.129 mo
50.4624 410.129 li
50.4624 408.091 li
51.4106 408.091 li
51.4106 410.129 li
cp
f
53.3066 410.129 mo
52.3579 410.129 li
52.3579 408.091 li
53.3066 408.091 li
53.3066 410.129 li
cp
f
55.2021 410.129 mo
54.2534 410.129 li
54.2534 408.091 li
55.2021 408.091 li
55.2021 410.129 li
cp
f
56.2095 411.341 mo
56.2095 426.4 li
59.0283 426.4 li
59.0283 414.161 li
56.2095 411.341 li
cp
f
56.2095 429.646 mo
56.2095 444.706 li
59.0283 444.706 li
59.0283 432.466 li
56.2095 429.646 li
cp
f
34.2895 411.341 mo
34.2895 426.4 li
31.4702 426.4 li
31.4702 414.161 li
34.2895 411.341 li
cp
.8 .8 .8 rgb
f
34.2895 429.646 mo
34.2895 444.706 li
31.4702 444.706 li
31.4702 432.466 li
34.2895 429.646 li
cp
f
55.2021 446.314 mo
52.3188 446.314 li
55.2021 449.194 li
55.2021 446.314 li
cp
.184314 .537255 .537255 rgb
f
38.2148 448.023 mo
38.2148 447.333 li
38.2148 447.192 li
38.2148 446.314 li
35.2969 446.314 li
35.2969 450 li
38.2148 450 li
38.2148 448.163 li
38.2148 448.023 li
cp
f
52.3188 446.314 mo
52.3188 447.192 li
52.3188 447.333 li
52.3188 447.71 li
52.3188 448.023 li
52.3188 448.163 li
52.3188 450 li
55.2021 450 li
55.2021 449.194 li
52.3188 446.314 li
cp
.137255 .403922 .403922 rgb
f
47.6977 447.192 mo
38.2148 447.192 li
38.3564 447.333 li
39.374 447.333 li
39.5141 447.333 li
40.5395 447.333 li
40.6807 447.333 li
41.6977 447.333 li
41.8393 447.333 li
42.5229 447.333 li
42.8647 447.333 li
43.0044 447.333 li
44.0298 447.333 li
44.1714 447.333 li
45.1968 447.333 li
45.3369 447.333 li
46.3633 447.333 li
46.5034 447.333 li
47.5439 447.333 li
47.6841 447.333 li
47.6977 447.333 li
48.7095 447.333 li
48.8511 447.333 li
49.8682 447.333 li
50.0088 447.333 li
51.0342 447.333 li
51.1743 447.333 li
51.9385 447.333 li
52.3188 447.333 li
52.3188 447.192 li
51.7969 447.192 li
47.6977 447.192 li
cp
.376471 .376471 .376471 rgb
f
38.2148 447.192 mo
38.2148 447.333 li
38.3564 447.333 li
38.2148 447.192 li
cp
.74902 .74902 .74902 rgb
f
44.1714 448.023 mo
45.1968 448.023 li
45.1968 447.333 li
44.1714 447.333 li
44.1714 448.023 li
cp
.0705882 .203922 .203922 rgb
f
45.3369 448.023 mo
46.3633 448.023 li
46.3633 447.333 li
45.3369 447.333 li
45.3369 448.023 li
cp
f
43.0044 448.023 mo
43.0596 448.023 li
44.0298 448.023 li
44.0298 447.333 li
43.0044 447.333 li
43.0044 448.023 li
cp
f
38.2148 447.333 mo
38.2148 448.023 li
39.0449 448.023 li
38.3564 447.333 li
38.2148 447.333 li
cp
.0941176 .270588 .270588 rgb
f
42.5229 447.333 mo
41.8393 447.333 li
41.8393 448.023 li
42.8647 448.023 li
42.8647 447.333 li
42.5229 447.333 li
cp
.0705882 .203922 .203922 rgb
f
40.6807 447.333 mo
40.6807 448.023 li
41.6977 448.023 li
41.6977 447.333 li
40.6807 447.333 li
cp
f
39.5141 447.333 mo
39.5141 448.023 li
40.5395 448.023 li
40.5395 447.333 li
39.5141 447.333 li
cp
f
38.3564 447.333 mo
39.0449 448.023 li
39.374 448.023 li
39.374 447.333 li
38.3564 447.333 li
cp
f
39.1865 448.163 mo
38.2148 448.163 li
38.2148 450 li
39.374 450 li
39.374 448.351 li
39.1865 448.163 li
cp
.0941176 .270588 .270588 rgb
f
40.6807 450 mo
41.022 450 li
40.6807 449.658 li
40.6807 450 li
cp
f
39.5141 448.493 mo
39.5141 450 li
40.5395 450 li
40.5395 449.519 li
39.5141 448.493 li
cp
f
40.6807 448.163 mo
40.6807 449.658 li
41.022 450 li
41.6977 450 li
41.6977 448.163 li
40.6807 448.163 li
cp
.0705882 .203922 .203922 rgb
f
44.0298 448.163 mo
43.1997 448.163 li
43.0044 448.163 li
43.0044 450 li
44.0298 450 li
44.0298 448.993 li
44.0298 448.163 li
cp
f
39.374 448.163 mo
39.1865 448.163 li
39.374 448.351 li
39.374 448.163 li
cp
f
40.5395 449.519 mo
40.5395 448.163 li
39.5141 448.163 li
39.5141 448.493 li
40.5395 449.519 li
cp
f
41.8393 448.163 mo
41.8393 450 li
42.8647 450 li
42.8647 448.163 li
41.8393 448.163 li
cp
f
47.6841 448.163 mo
47.6841 450 li
48.7095 450 li
48.7095 448.163 li
47.6841 448.163 li
cp
f
46.5034 448.163 mo
46.5034 450 li
47.5439 450 li
47.5439 448.163 li
46.5034 448.163 li
cp
f
50.0088 448.163 mo
50.0088 450 li
51.0342 450 li
51.0342 448.163 li
50.0088 448.163 li
cp
f
48.8511 448.163 mo
48.8511 450 li
49.8682 450 li
49.8682 448.163 li
48.8511 448.163 li
cp
f
51.1743 448.163 mo
51.1743 450 li
52.3188 450 li
52.3188 448.163 li
51.1743 448.163 li
cp
f
44.9858 449.115 mo
44.8452 449.115 li
44.8452 448.78 li
44.9858 448.78 li
44.9858 449.115 li
cp
44.1714 448.163 mo
44.1714 449.133 li
44.1714 450 li
45.0361 450 li
45.1968 450 li
45.1968 448.163 li
44.1714 448.163 li
cp
f
45.6807 449.115 mo
45.5405 449.115 li
45.5405 448.78 li
45.6807 448.78 li
45.6807 449.115 li
cp
45.3369 448.163 mo
45.3369 450 li
46.3633 450 li
46.3633 448.163 li
45.3369 448.163 li
cp
f
48.8511 447.333 mo
48.8511 448.023 li
49.8682 448.023 li
49.8682 447.333 li
48.8511 447.333 li
cp
f
47.6977 447.333 mo
47.6841 447.333 li
47.6841 448.023 li
48.7095 448.023 li
48.7095 447.333 li
47.6977 447.333 li
cp
f
46.5034 447.333 mo
46.5034 448.023 li
47.5439 448.023 li
47.5439 447.333 li
46.5034 447.333 li
cp
f
51.1743 447.333 mo
51.1743 448.023 li
52.3188 448.023 li
52.3188 447.71 li
52.3188 447.333 li
51.9385 447.333 li
51.1743 447.333 li
cp
f
50.0088 447.333 mo
50.0088 448.023 li
51.0342 448.023 li
51.0342 447.333 li
50.0088 447.333 li
cp
f
45.5405 449.115 mo
45.6807 449.115 li
45.6807 448.78 li
45.5405 448.78 li
45.5405 449.115 li
cp
.74902 .74902 .74902 rgb
f
44.8452 449.115 mo
44.9858 449.115 li
44.9858 448.78 li
44.8452 448.78 li
44.8452 449.115 li
cp
f
38.2148 448.163 mo
39.1865 448.163 li
39.0449 448.023 li
38.2148 448.023 li
38.2148 448.163 li
cp
1 1 1 rgb
f
39.374 448.351 mo
39.374 450 li
39.5141 450 li
39.5141 448.493 li
39.374 448.351 li
cp
f
40.5395 449.519 mo
40.5395 450 li
40.6807 450 li
40.6807 449.658 li
40.5395 449.519 li
cp
f
51.1743 448.023 mo
51.1743 447.333 li
51.0342 447.333 li
51.0342 448.023 li
50.0088 448.023 li
50.0088 447.333 li
49.8682 447.333 li
49.8682 448.023 li
48.8511 448.023 li
48.8511 447.333 li
48.7095 447.333 li
48.7095 448.023 li
47.6841 448.023 li
47.6841 447.333 li
47.5439 447.333 li
47.5439 448.023 li
46.5034 448.023 li
46.5034 447.333 li
46.3633 447.333 li
46.3633 448.023 li
45.3369 448.023 li
45.3369 447.333 li
45.1968 447.333 li
45.1968 448.023 li
44.1714 448.023 li
44.1714 447.333 li
44.0298 447.333 li
44.0298 448.023 li
43.0596 448.023 li
43.0044 448.023 li
43.0044 447.333 li
42.8647 447.333 li
42.8647 448.023 li
41.8393 448.023 li
41.8393 447.333 li
41.6977 447.333 li
41.6977 448.023 li
40.6807 448.023 li
40.6807 447.333 li
40.5395 447.333 li
40.5395 448.023 li
39.5141 448.023 li
39.5141 447.333 li
39.374 447.333 li
39.374 448.023 li
39.0449 448.023 li
39.1865 448.163 li
39.374 448.163 li
39.374 448.351 li
39.5141 448.493 li
39.5141 448.163 li
40.5395 448.163 li
40.5395 449.519 li
40.6807 449.658 li
40.6807 448.163 li
41.6977 448.163 li
41.6977 450 li
41.8393 450 li
41.8393 448.163 li
42.8647 448.163 li
42.8647 450 li
43.0044 450 li
43.0044 448.163 li
43.1997 448.163 li
44.0298 448.163 li
44.0298 448.993 li
44.0298 450 li
44.1714 450 li
44.1714 449.133 li
44.1714 448.163 li
45.1968 448.163 li
45.1968 450 li
45.3369 450 li
45.3369 448.163 li
46.3633 448.163 li
46.3633 450 li
46.5034 450 li
46.5034 448.163 li
47.5439 448.163 li
47.5439 450 li
47.6841 450 li
47.6841 448.163 li
48.7095 448.163 li
48.7095 450 li
48.8511 450 li
48.8511 448.163 li
49.8682 448.163 li
49.8682 450 li
50.0088 450 li
50.0088 448.163 li
51.0342 448.163 li
51.0342 450 li
51.1743 450 li
51.1743 448.163 li
52.3188 448.163 li
52.3188 448.023 li
51.1743 448.023 li
cp
.74902 .74902 .74902 rgb
f
38.2148 446.314 mo
38.2148 447.192 li
45.2715 447.192 li
45.2715 446.314 li
38.2148 446.314 li
cp
.956863 .956863 .956863 rgb
f
45.2715 446.314 mo
45.2715 447.192 li
47.6977 447.192 li
51.7969 447.192 li
52.3188 447.192 li
52.3188 446.314 li
45.2715 446.314 li
cp
.717647 .717647 .717647 rgb
f
58.5122 413.646 mo
59.0283 414.161 li
59.0283 426.4 li
58.5122 426.4 li
58.5122 413.646 li
cp
.184314 .537255 .537255 rgb
f
58.5122 431.95 mo
59.0283 432.466 li
59.0283 444.706 li
58.5122 444.706 li
58.5122 431.95 li
cp
f
31.9985 413.646 mo
31.4829 414.161 li
31.4829 426.4 li
31.9985 426.4 li
31.9985 413.646 li
cp
.247059 .717647 .713726 rgb
f
31.9985 431.95 mo
31.4829 432.466 li
31.4829 444.706 li
31.9985 444.706 li
31.9985 431.95 li
cp
f
278.404 408.091 mo
275.298 408.091 li
275.298 406.404 li
278.404 406.404 li
278.404 408.091 li
cp
.827451 .827451 .827451 rgb
f
276.867 403.755 mo
276.834 403.755 li
276.638 406.404 li
277.064 406.404 li
276.867 403.755 li
cp
.615686 .615686 .615686 rgb
f
267.029 408.091 mo
263.924 408.091 li
263.924 406.404 li
267.029 406.404 li
267.029 408.091 li
cp
.827451 .827451 .827451 rgb
f
265.493 403.755 mo
265.459 403.755 li
265.264 406.404 li
265.689 406.404 li
265.493 403.755 li
cp
.615686 .615686 .615686 rgb
f
282.124 450 mo
260.204 450 li
260.204 408.091 li
282.124 408.091 li
282.124 450 li
cp
.890196 .890196 .890196 rgb
f
263.714 412.369 mo
261.211 412.369 li
261.211 411.343 li
263.714 411.343 li
263.714 412.369 li
cp
.247059 .717647 .713726 rgb
f
266.633 412.369 mo
264.129 412.369 li
264.129 411.343 li
266.633 411.343 li
266.633 412.369 li
cp
f
269.514 412.369 mo
267.012 412.369 li
267.012 411.343 li
269.514 411.343 li
269.514 412.369 li
cp
f
272.434 412.369 mo
269.932 412.369 li
269.932 411.343 li
272.434 411.343 li
272.434 412.369 li
cp
f
275.316 412.369 mo
272.813 412.369 li
272.813 411.343 li
275.316 411.343 li
275.316 412.369 li
cp
f
278.233 412.369 mo
275.731 412.369 li
275.731 411.343 li
278.233 411.343 li
278.233 412.369 li
cp
f
281.117 412.369 mo
278.614 412.369 li
278.614 411.343 li
281.117 411.343 li
281.117 412.369 li
cp
f
263.714 413.909 mo
261.211 413.909 li
261.211 412.882 li
263.714 412.882 li
263.714 413.909 li
cp
f
266.633 413.909 mo
264.129 413.909 li
264.129 412.882 li
266.633 412.882 li
266.633 413.909 li
cp
f
269.514 413.909 mo
267.012 413.909 li
267.012 412.882 li
269.514 412.882 li
269.514 413.909 li
cp
f
272.434 413.909 mo
269.932 413.909 li
269.932 412.882 li
272.434 412.882 li
272.434 413.909 li
cp
f
275.316 413.909 mo
272.813 413.909 li
272.813 412.882 li
275.316 412.882 li
275.316 413.909 li
cp
f
278.233 413.909 mo
275.731 413.909 li
275.731 412.882 li
278.233 412.882 li
278.233 413.909 li
cp
f
281.117 413.909 mo
278.614 413.909 li
278.614 412.882 li
281.117 412.882 li
281.117 413.909 li
cp
f
263.714 415.449 mo
261.211 415.449 li
261.211 414.423 li
263.714 414.423 li
263.714 415.449 li
cp
f
266.633 415.449 mo
264.129 415.449 li
264.129 414.423 li
266.633 414.423 li
266.633 415.449 li
cp
f
269.514 415.449 mo
267.012 415.449 li
267.012 414.423 li
269.514 414.423 li
269.514 415.449 li
cp
f
272.434 415.449 mo
269.932 415.449 li
269.932 414.423 li
272.434 414.423 li
272.434 415.449 li
cp
f
275.316 415.449 mo
272.813 415.449 li
272.813 414.423 li
275.316 414.423 li
275.316 415.449 li
cp
f
278.233 415.449 mo
275.731 415.449 li
275.731 414.423 li
278.233 414.423 li
278.233 415.449 li
cp
f
281.117 415.449 mo
278.614 415.449 li
278.614 414.423 li
281.117 414.423 li
281.117 415.449 li
cp
f
263.714 416.988 mo
261.211 416.988 li
261.211 415.962 li
263.714 415.962 li
263.714 416.988 li
cp
f
266.633 416.988 mo
264.129 416.988 li
264.129 415.962 li
266.633 415.962 li
266.633 416.988 li
cp
f
269.514 416.988 mo
267.012 416.988 li
267.012 415.962 li
269.514 415.962 li
269.514 416.988 li
cp
f
272.434 416.988 mo
269.932 416.988 li
269.932 415.962 li
272.434 415.962 li
272.434 416.988 li
cp
f
275.316 416.988 mo
272.813 416.988 li
272.813 415.962 li
275.316 415.962 li
275.316 416.988 li
cp
f
278.233 416.988 mo
275.731 416.988 li
275.731 415.962 li
278.233 415.962 li
278.233 416.988 li
cp
f
281.117 416.988 mo
278.614 416.988 li
278.614 415.962 li
281.117 415.962 li
281.117 416.988 li
cp
f
263.714 418.528 mo
261.211 418.528 li
261.211 417.502 li
263.714 417.502 li
263.714 418.528 li
cp
f
266.633 418.528 mo
264.129 418.528 li
264.129 417.502 li
266.633 417.502 li
266.633 418.528 li
cp
f
269.514 418.528 mo
267.012 418.528 li
267.012 417.502 li
269.514 417.502 li
269.514 418.528 li
cp
f
272.434 418.528 mo
269.932 418.528 li
269.932 417.502 li
272.434 417.502 li
272.434 418.528 li
cp
f
275.316 418.528 mo
272.813 418.528 li
272.813 417.502 li
275.316 417.502 li
275.316 418.528 li
cp
f
278.233 418.528 mo
275.731 418.528 li
275.731 417.502 li
278.233 417.502 li
278.233 418.528 li
cp
f
281.117 418.528 mo
278.614 418.528 li
278.614 417.502 li
281.117 417.502 li
281.117 418.528 li
cp
f
263.714 420.068 mo
261.211 420.068 li
261.211 419.041 li
263.714 419.041 li
263.714 420.068 li
cp
f
266.633 420.068 mo
264.129 420.068 li
264.129 419.041 li
266.633 419.041 li
266.633 420.068 li
cp
f
269.514 420.068 mo
267.012 420.068 li
267.012 419.041 li
269.514 419.041 li
269.514 420.068 li
cp
f
272.434 420.068 mo
269.932 420.068 li
269.932 419.041 li
272.434 419.041 li
272.434 420.068 li
cp
f
275.316 420.068 mo
272.813 420.068 li
272.813 419.041 li
275.316 419.041 li
275.316 420.068 li
cp
f
278.233 420.068 mo
275.731 420.068 li
275.731 419.041 li
278.233 419.041 li
278.233 420.068 li
cp
f
281.117 420.068 mo
278.614 420.068 li
278.614 419.041 li
281.117 419.041 li
281.117 420.068 li
cp
f
263.714 421.608 mo
261.211 421.608 li
261.211 420.581 li
263.714 420.581 li
263.714 421.608 li
cp
f
266.633 421.608 mo
264.129 421.608 li
264.129 420.581 li
266.633 420.581 li
266.633 421.608 li
cp
f
269.514 421.608 mo
267.012 421.608 li
267.012 420.581 li
269.514 420.581 li
269.514 421.608 li
cp
f
272.434 421.608 mo
269.932 421.608 li
269.932 420.581 li
272.434 420.581 li
272.434 421.608 li
cp
f
275.316 421.608 mo
272.813 421.608 li
272.813 420.581 li
275.316 420.581 li
275.316 421.608 li
cp
f
278.233 421.608 mo
275.731 421.608 li
275.731 420.581 li
278.233 420.581 li
278.233 421.608 li
cp
f
281.117 421.608 mo
278.614 421.608 li
278.614 420.581 li
281.117 420.581 li
281.117 421.608 li
cp
f
263.714 423.147 mo
261.211 423.147 li
261.211 422.121 li
263.714 422.121 li
263.714 423.147 li
cp
f
266.633 423.147 mo
264.129 423.147 li
264.129 422.121 li
266.633 422.121 li
266.633 423.147 li
cp
f
269.514 423.147 mo
267.012 423.147 li
267.012 422.121 li
269.514 422.121 li
269.514 423.147 li
cp
f
272.434 423.147 mo
269.932 423.147 li
269.932 422.121 li
272.434 422.121 li
272.434 423.147 li
cp
f
275.316 423.147 mo
272.813 423.147 li
272.813 422.121 li
275.316 422.121 li
275.316 423.147 li
cp
f
278.233 423.147 mo
275.731 423.147 li
275.731 422.121 li
278.233 422.121 li
278.233 423.147 li
cp
f
281.117 423.147 mo
278.614 423.147 li
278.614 422.121 li
281.117 422.121 li
281.117 423.147 li
cp
f
263.714 424.688 mo
261.211 424.688 li
261.211 423.661 li
263.714 423.661 li
263.714 424.688 li
cp
f
266.633 424.688 mo
264.129 424.688 li
264.129 423.661 li
266.633 423.661 li
266.633 424.688 li
cp
f
269.514 424.688 mo
267.012 424.688 li
267.012 423.661 li
269.514 423.661 li
269.514 424.688 li
cp
f
272.434 424.688 mo
269.932 424.688 li
269.932 423.661 li
272.434 423.661 li
272.434 424.688 li
cp
f
275.316 424.688 mo
272.813 424.688 li
272.813 423.661 li
275.316 423.661 li
275.316 424.688 li
cp
f
278.233 424.688 mo
275.731 424.688 li
275.731 423.661 li
278.233 423.661 li
278.233 424.688 li
cp
f
281.117 424.688 mo
278.614 424.688 li
278.614 423.661 li
281.117 423.661 li
281.117 424.688 li
cp
f
263.714 426.228 mo
261.211 426.228 li
261.211 425.201 li
263.714 425.201 li
263.714 426.228 li
cp
f
266.633 426.228 mo
264.129 426.228 li
264.129 425.201 li
266.633 425.201 li
266.633 426.228 li
cp
f
269.514 426.228 mo
267.012 426.228 li
267.012 425.201 li
269.514 425.201 li
269.514 426.228 li
cp
f
272.434 426.228 mo
269.932 426.228 li
269.932 425.201 li
272.434 425.201 li
272.434 426.228 li
cp
f
275.316 426.228 mo
272.813 426.228 li
272.813 425.201 li
275.316 425.201 li
275.316 426.228 li
cp
f
278.233 426.228 mo
275.731 426.228 li
275.731 425.201 li
278.233 425.201 li
278.233 426.228 li
cp
f
281.117 426.228 mo
278.614 426.228 li
278.614 425.201 li
281.117 425.201 li
281.117 426.228 li
cp
f
263.714 427.768 mo
261.211 427.768 li
261.211 426.74 li
263.714 426.74 li
263.714 427.768 li
cp
f
266.633 427.768 mo
264.129 427.768 li
264.129 426.74 li
266.633 426.74 li
266.633 427.768 li
cp
f
269.514 427.768 mo
267.012 427.768 li
267.012 426.74 li
269.514 426.74 li
269.514 427.768 li
cp
f
272.434 427.768 mo
269.932 427.768 li
269.932 426.74 li
272.434 426.74 li
272.434 427.768 li
cp
f
275.316 427.768 mo
272.813 427.768 li
272.813 426.74 li
275.316 426.74 li
275.316 427.768 li
cp
f
278.233 427.768 mo
275.731 427.768 li
275.731 426.74 li
278.233 426.74 li
278.233 427.768 li
cp
f
281.117 427.768 mo
278.614 427.768 li
278.614 426.74 li
281.117 426.74 li
281.117 427.768 li
cp
f
263.714 429.307 mo
261.211 429.307 li
261.211 428.28 li
263.714 428.28 li
263.714 429.307 li
cp
f
266.633 429.307 mo
264.129 429.307 li
264.129 428.28 li
266.633 428.28 li
266.633 429.307 li
cp
f
269.514 429.307 mo
267.012 429.307 li
267.012 428.28 li
269.514 428.28 li
269.514 429.307 li
cp
f
272.434 429.307 mo
269.932 429.307 li
269.932 428.28 li
272.434 428.28 li
272.434 429.307 li
cp
f
275.316 429.307 mo
272.813 429.307 li
272.813 428.28 li
275.316 428.28 li
275.316 429.307 li
cp
f
278.233 429.307 mo
275.731 429.307 li
275.731 428.28 li
278.233 428.28 li
278.233 429.307 li
cp
f
281.117 429.307 mo
278.614 429.307 li
278.614 428.28 li
281.117 428.28 li
281.117 429.307 li
cp
f
263.714 430.847 mo
261.211 430.847 li
261.211 429.82 li
263.714 429.82 li
263.714 430.847 li
cp
f
266.633 430.847 mo
264.129 430.847 li
264.129 429.82 li
266.633 429.82 li
266.633 430.847 li
cp
f
269.514 430.847 mo
267.012 430.847 li
267.012 429.82 li
269.514 429.82 li
269.514 430.847 li
cp
f
272.434 430.847 mo
269.932 430.847 li
269.932 429.82 li
272.434 429.82 li
272.434 430.847 li
cp
f
275.316 430.847 mo
272.813 430.847 li
272.813 429.82 li
275.316 429.82 li
275.316 430.847 li
cp
f
278.233 430.847 mo
275.731 430.847 li
275.731 429.82 li
278.233 429.82 li
278.233 430.847 li
cp
f
281.117 430.847 mo
278.614 430.847 li
278.614 429.82 li
281.117 429.82 li
281.117 430.847 li
cp
f
263.714 432.387 mo
261.211 432.387 li
261.211 431.36 li
263.714 431.36 li
263.714 432.387 li
cp
f
266.633 432.387 mo
264.129 432.387 li
264.129 431.36 li
266.633 431.36 li
266.633 432.387 li
cp
f
269.514 432.387 mo
267.012 432.387 li
267.012 431.36 li
269.514 431.36 li
269.514 432.387 li
cp
f
272.434 432.387 mo
269.932 432.387 li
269.932 431.36 li
272.434 431.36 li
272.434 432.387 li
cp
f
275.316 432.387 mo
272.813 432.387 li
272.813 431.36 li
275.316 431.36 li
275.316 432.387 li
cp
f
278.233 432.387 mo
275.731 432.387 li
275.731 431.36 li
278.233 431.36 li
278.233 432.387 li
cp
f
281.117 432.387 mo
278.614 432.387 li
278.614 431.36 li
281.117 431.36 li
281.117 432.387 li
cp
f
263.714 433.927 mo
261.211 433.927 li
261.211 432.899 li
263.714 432.899 li
263.714 433.927 li
cp
f
266.633 433.927 mo
264.129 433.927 li
264.129 432.899 li
266.633 432.899 li
266.633 433.927 li
cp
f
269.514 433.927 mo
267.012 433.927 li
267.012 432.899 li
269.514 432.899 li
269.514 433.927 li
cp
f
272.434 433.927 mo
269.932 433.927 li
269.932 432.899 li
272.434 432.899 li
272.434 433.927 li
cp
f
275.316 433.927 mo
272.813 433.927 li
272.813 432.899 li
275.316 432.899 li
275.316 433.927 li
cp
f
278.233 433.927 mo
275.731 433.927 li
275.731 432.899 li
278.233 432.899 li
278.233 433.927 li
cp
f
281.117 433.927 mo
278.614 433.927 li
278.614 432.899 li
281.117 432.899 li
281.117 433.927 li
cp
f
263.714 435.468 mo
261.211 435.468 li
261.211 434.439 li
263.714 434.439 li
263.714 435.468 li
cp
f
266.633 435.468 mo
264.129 435.468 li
264.129 434.439 li
266.633 434.439 li
266.633 435.468 li
cp
f
269.514 435.468 mo
267.012 435.468 li
267.012 434.439 li
269.514 434.439 li
269.514 435.468 li
cp
f
272.434 435.468 mo
269.932 435.468 li
269.932 434.439 li
272.434 434.439 li
272.434 435.468 li
cp
f
275.316 435.468 mo
272.813 435.468 li
272.813 434.439 li
275.316 434.439 li
275.316 435.468 li
cp
f
278.233 435.468 mo
275.731 435.468 li
275.731 434.439 li
278.233 434.439 li
278.233 435.468 li
cp
f
281.117 435.468 mo
278.614 435.468 li
278.614 434.439 li
281.117 434.439 li
281.117 435.468 li
cp
f
263.714 437.006 mo
261.211 437.006 li
261.211 435.979 li
263.714 435.979 li
263.714 437.006 li
cp
f
266.633 437.006 mo
264.129 437.006 li
264.129 435.979 li
266.633 435.979 li
266.633 437.006 li
cp
f
269.514 437.006 mo
267.012 437.006 li
267.012 435.979 li
269.514 435.979 li
269.514 437.006 li
cp
f
272.434 437.006 mo
269.932 437.006 li
269.932 435.979 li
272.434 435.979 li
272.434 437.006 li
cp
f
275.316 437.006 mo
272.813 437.006 li
272.813 435.979 li
275.316 435.979 li
275.316 437.006 li
cp
f
278.233 437.006 mo
275.731 437.006 li
275.731 435.979 li
278.233 435.979 li
278.233 437.006 li
cp
f
281.117 437.006 mo
278.614 437.006 li
278.614 435.979 li
281.117 435.979 li
281.117 437.006 li
cp
f
263.714 438.546 mo
261.211 438.546 li
261.211 437.52 li
263.714 437.52 li
263.714 438.546 li
cp
f
266.633 438.546 mo
264.129 438.546 li
264.129 437.52 li
266.633 437.52 li
266.633 438.546 li
cp
f
269.514 438.546 mo
267.012 438.546 li
267.012 437.52 li
269.514 437.52 li
269.514 438.546 li
cp
f
272.434 438.546 mo
269.932 438.546 li
269.932 437.52 li
272.434 437.52 li
272.434 438.546 li
cp
f
275.316 438.546 mo
272.813 438.546 li
272.813 437.52 li
275.316 437.52 li
275.316 438.546 li
cp
f
278.233 438.546 mo
275.731 438.546 li
275.731 437.52 li
278.233 437.52 li
278.233 438.546 li
cp
f
281.117 438.546 mo
278.614 438.546 li
278.614 437.52 li
281.117 437.52 li
281.117 438.546 li
cp
f
263.714 440.086 mo
261.211 440.086 li
261.211 439.059 li
263.714 439.059 li
263.714 440.086 li
cp
f
266.633 440.086 mo
264.129 440.086 li
264.129 439.059 li
266.633 439.059 li
266.633 440.086 li
cp
f
269.514 440.086 mo
267.012 440.086 li
267.012 439.059 li
269.514 439.059 li
269.514 440.086 li
cp
f
272.434 440.086 mo
269.932 440.086 li
269.932 439.059 li
272.434 439.059 li
272.434 440.086 li
cp
f
275.316 440.086 mo
272.813 440.086 li
272.813 439.059 li
275.316 439.059 li
275.316 440.086 li
cp
f
278.233 440.086 mo
275.731 440.086 li
275.731 439.059 li
278.233 439.059 li
278.233 440.086 li
cp
f
281.117 440.086 mo
278.614 440.086 li
278.614 439.059 li
281.117 439.059 li
281.117 440.086 li
cp
f
263.714 441.626 mo
261.211 441.626 li
261.211 440.599 li
263.714 440.599 li
263.714 441.626 li
cp
f
266.633 441.626 mo
264.129 441.626 li
264.129 440.599 li
266.633 440.599 li
266.633 441.626 li
cp
f
269.514 441.626 mo
267.012 441.626 li
267.012 440.599 li
269.514 440.599 li
269.514 441.626 li
cp
f
272.434 441.626 mo
269.932 441.626 li
269.932 440.599 li
272.434 440.599 li
272.434 441.626 li
cp
f
275.316 441.626 mo
272.813 441.626 li
272.813 440.599 li
275.316 440.599 li
275.316 441.626 li
cp
f
278.233 441.626 mo
275.731 441.626 li
275.731 440.599 li
278.233 440.599 li
278.233 441.626 li
cp
f
281.117 441.626 mo
278.614 441.626 li
278.614 440.599 li
281.117 440.599 li
281.117 441.626 li
cp
f
263.714 443.165 mo
261.211 443.165 li
261.211 442.14 li
263.714 442.14 li
263.714 443.165 li
cp
f
266.633 443.165 mo
264.129 443.165 li
264.129 442.14 li
266.633 442.14 li
266.633 443.165 li
cp
f
269.514 443.165 mo
267.012 443.165 li
267.012 442.14 li
269.514 442.14 li
269.514 443.165 li
cp
f
272.434 443.165 mo
269.932 443.165 li
269.932 442.14 li
272.434 442.14 li
272.434 443.165 li
cp
f
275.316 443.165 mo
272.813 443.165 li
272.813 442.14 li
275.316 442.14 li
275.316 443.165 li
cp
f
278.233 443.165 mo
275.731 443.165 li
275.731 442.14 li
278.233 442.14 li
278.233 443.165 li
cp
f
281.117 443.165 mo
278.614 443.165 li
278.614 442.14 li
281.117 442.14 li
281.117 443.165 li
cp
f
263.714 444.706 mo
261.211 444.706 li
261.211 443.679 li
263.714 443.679 li
263.714 444.706 li
cp
f
266.633 444.706 mo
264.129 444.706 li
264.129 443.679 li
266.633 443.679 li
266.633 444.706 li
cp
f
269.514 444.706 mo
267.012 444.706 li
267.012 443.679 li
269.514 443.679 li
269.514 444.706 li
cp
f
272.434 444.706 mo
269.932 444.706 li
269.932 443.679 li
272.434 443.679 li
272.434 444.706 li
cp
f
275.316 444.706 mo
272.813 444.706 li
272.813 443.679 li
275.316 443.679 li
275.316 444.706 li
cp
f
278.233 444.706 mo
275.731 444.706 li
275.731 443.679 li
278.233 443.679 li
278.233 444.706 li
cp
f
281.117 444.706 mo
278.614 444.706 li
278.614 443.679 li
281.117 443.679 li
281.117 444.706 li
cp
f
262.159 410.129 mo
261.211 410.129 li
261.211 408.091 li
262.159 408.091 li
262.159 410.129 li
cp
.666667 .666667 .666667 rgb
f
264.055 410.129 mo
263.107 410.129 li
263.107 408.091 li
264.055 408.091 li
264.055 410.129 li
cp
f
265.95 410.129 mo
265.003 410.129 li
265.003 408.091 li
265.95 408.091 li
265.95 410.129 li
cp
f
267.847 410.129 mo
266.898 410.129 li
266.898 408.091 li
267.847 408.091 li
267.847 410.129 li
cp
f
269.742 410.129 mo
268.793 410.129 li
268.793 408.091 li
269.742 408.091 li
269.742 410.129 li
cp
f
271.638 410.129 mo
270.69 410.129 li
270.69 408.091 li
271.638 408.091 li
271.638 410.129 li
cp
f
273.533 410.129 mo
272.585 410.129 li
272.585 408.091 li
273.533 408.091 li
273.533 410.129 li
cp
f
275.429 410.129 mo
274.481 410.129 li
274.481 408.091 li
275.429 408.091 li
275.429 410.129 li
cp
f
277.325 410.129 mo
276.377 410.129 li
276.377 408.091 li
277.325 408.091 li
277.325 410.129 li
cp
f
279.221 410.129 mo
278.272 410.129 li
278.272 408.091 li
279.221 408.091 li
279.221 410.129 li
cp
f
281.117 410.129 mo
280.168 410.129 li
280.168 408.091 li
281.117 408.091 li
281.117 410.129 li
cp
f
282.124 411.341 mo
282.124 426.4 li
284.943 426.4 li
284.943 414.161 li
282.124 411.341 li
cp
f
282.124 429.646 mo
282.124 444.706 li
284.943 444.706 li
284.943 432.466 li
282.124 429.646 li
cp
f
260.204 411.341 mo
260.204 426.4 li
257.385 426.4 li
257.385 414.161 li
260.204 411.341 li
cp
.8 .8 .8 rgb
f
260.204 429.646 mo
260.204 444.706 li
257.385 444.706 li
257.385 432.466 li
260.204 429.646 li
cp
f
281.117 446.314 mo
278.233 446.314 li
281.117 449.194 li
281.117 446.314 li
cp
.184314 .537255 .537255 rgb
f
264.129 448.023 mo
264.129 447.333 li
264.129 447.192 li
264.129 446.314 li
261.211 446.314 li
261.211 450 li
264.129 450 li
264.129 448.163 li
264.129 448.023 li
cp
f
278.233 446.314 mo
278.233 447.192 li
278.233 447.333 li
278.233 447.71 li
278.233 448.023 li
278.233 448.163 li
278.233 450 li
281.117 450 li
281.117 449.194 li
278.233 446.314 li
cp
.137255 .403922 .403922 rgb
f
273.612 447.192 mo
264.129 447.192 li
264.272 447.333 li
265.289 447.333 li
265.429 447.333 li
266.454 447.333 li
266.596 447.333 li
267.612 447.333 li
267.754 447.333 li
268.438 447.333 li
268.779 447.333 li
268.919 447.333 li
269.944 447.333 li
270.086 447.333 li
271.111 447.333 li
271.252 447.333 li
272.277 447.333 li
272.418 447.333 li
273.459 447.333 li
273.599 447.333 li
273.612 447.333 li
274.624 447.333 li
274.766 447.333 li
275.783 447.333 li
275.924 447.333 li
276.949 447.333 li
277.089 447.333 li
277.854 447.333 li
278.233 447.333 li
278.233 447.192 li
277.711 447.192 li
273.612 447.192 li
cp
.376471 .376471 .376471 rgb
f
264.129 447.192 mo
264.129 447.333 li
264.272 447.333 li
264.129 447.192 li
cp
.74902 .74902 .74902 rgb
f
270.086 448.023 mo
271.111 448.023 li
271.111 447.333 li
270.086 447.333 li
270.086 448.023 li
cp
.0705882 .203922 .203922 rgb
f
271.252 448.023 mo
272.277 448.023 li
272.277 447.333 li
271.252 447.333 li
271.252 448.023 li
cp
f
268.919 448.023 mo
268.975 448.023 li
269.944 448.023 li
269.944 447.333 li
268.919 447.333 li
268.919 448.023 li
cp
f
264.129 447.333 mo
264.129 448.023 li
264.959 448.023 li
264.272 447.333 li
264.129 447.333 li
cp
.0941176 .270588 .270588 rgb
f
268.438 447.333 mo
267.754 447.333 li
267.754 448.023 li
268.779 448.023 li
268.779 447.333 li
268.438 447.333 li
cp
.0705882 .203922 .203922 rgb
f
266.596 447.333 mo
266.596 448.023 li
267.612 448.023 li
267.612 447.333 li
266.596 447.333 li
cp
f
265.429 447.333 mo
265.429 448.023 li
266.454 448.023 li
266.454 447.333 li
265.429 447.333 li
cp
f
264.272 447.333 mo
264.959 448.023 li
265.289 448.023 li
265.289 447.333 li
264.272 447.333 li
cp
f
265.102 448.163 mo
264.129 448.163 li
264.129 450 li
265.289 450 li
265.289 448.351 li
265.102 448.163 li
cp
.0941176 .270588 .270588 rgb
f
266.596 450 mo
266.936 450 li
266.596 449.658 li
266.596 450 li
cp
f
265.429 448.493 mo
265.429 450 li
266.454 450 li
266.454 449.519 li
265.429 448.493 li
cp
f
266.596 448.163 mo
266.596 449.658 li
266.936 450 li
267.612 450 li
267.612 448.163 li
266.596 448.163 li
cp
.0705882 .203922 .203922 rgb
f
269.944 448.163 mo
269.114 448.163 li
268.919 448.163 li
268.919 450 li
269.944 450 li
269.944 448.993 li
269.944 448.163 li
cp
f
265.289 448.163 mo
265.102 448.163 li
265.289 448.351 li
265.289 448.163 li
cp
f
266.454 449.519 mo
266.454 448.163 li
265.429 448.163 li
265.429 448.493 li
266.454 449.519 li
cp
f
267.754 448.163 mo
267.754 450 li
268.779 450 li
268.779 448.163 li
267.754 448.163 li
cp
f
273.599 448.163 mo
273.599 450 li
274.624 450 li
274.624 448.163 li
273.599 448.163 li
cp
f
272.418 448.163 mo
272.418 450 li
273.459 450 li
273.459 448.163 li
272.418 448.163 li
cp
f
275.924 448.163 mo
275.924 450 li
276.949 450 li
276.949 448.163 li
275.924 448.163 li
cp
f
274.766 448.163 mo
274.766 450 li
275.783 450 li
275.783 448.163 li
274.766 448.163 li
cp
f
277.089 448.163 mo
277.089 450 li
278.233 450 li
278.233 448.163 li
277.089 448.163 li
cp
f
270.9 449.115 mo
270.76 449.115 li
270.76 448.78 li
270.9 448.78 li
270.9 449.115 li
cp
270.086 448.163 mo
270.086 449.133 li
270.086 450 li
270.951 450 li
271.111 450 li
271.111 448.163 li
270.086 448.163 li
cp
f
271.596 449.115 mo
271.455 449.115 li
271.455 448.78 li
271.596 448.78 li
271.596 449.115 li
cp
271.252 448.163 mo
271.252 450 li
272.277 450 li
272.277 448.163 li
271.252 448.163 li
cp
f
274.766 447.333 mo
274.766 448.023 li
275.783 448.023 li
275.783 447.333 li
274.766 447.333 li
cp
f
273.612 447.333 mo
273.599 447.333 li
273.599 448.023 li
274.624 448.023 li
274.624 447.333 li
273.612 447.333 li
cp
f
272.418 447.333 mo
272.418 448.023 li
273.459 448.023 li
273.459 447.333 li
272.418 447.333 li
cp
f
277.089 447.333 mo
277.089 448.023 li
278.233 448.023 li
278.233 447.71 li
278.233 447.333 li
277.854 447.333 li
277.089 447.333 li
cp
f
275.924 447.333 mo
275.924 448.023 li
276.949 448.023 li
276.949 447.333 li
275.924 447.333 li
cp
f
271.455 449.115 mo
271.596 449.115 li
271.596 448.78 li
271.455 448.78 li
271.455 449.115 li
cp
.74902 .74902 .74902 rgb
f
270.76 449.115 mo
270.9 449.115 li
270.9 448.78 li
270.76 448.78 li
270.76 449.115 li
cp
f
264.129 448.163 mo
265.102 448.163 li
264.959 448.023 li
264.129 448.023 li
264.129 448.163 li
cp
1 1 1 rgb
f
265.289 448.351 mo
265.289 450 li
265.429 450 li
265.429 448.493 li
265.289 448.351 li
cp
f
266.454 449.519 mo
266.454 450 li
266.596 450 li
266.596 449.658 li
266.454 449.519 li
cp
f
277.089 448.023 mo
277.089 447.333 li
276.949 447.333 li
276.949 448.023 li
275.924 448.023 li
275.924 447.333 li
275.783 447.333 li
275.783 448.023 li
274.766 448.023 li
274.766 447.333 li
274.624 447.333 li
274.624 448.023 li
273.599 448.023 li
273.599 447.333 li
273.459 447.333 li
273.459 448.023 li
272.418 448.023 li
272.418 447.333 li
272.277 447.333 li
272.277 448.023 li
271.252 448.023 li
271.252 447.333 li
271.111 447.333 li
271.111 448.023 li
270.086 448.023 li
270.086 447.333 li
269.944 447.333 li
269.944 448.023 li
268.975 448.023 li
268.919 448.023 li
268.919 447.333 li
268.779 447.333 li
268.779 448.023 li
267.754 448.023 li
267.754 447.333 li
267.612 447.333 li
267.612 448.023 li
266.596 448.023 li
266.596 447.333 li
266.454 447.333 li
266.454 448.023 li
265.429 448.023 li
265.429 447.333 li
265.289 447.333 li
265.289 448.023 li
264.959 448.023 li
265.102 448.163 li
265.289 448.163 li
265.289 448.351 li
265.429 448.493 li
265.429 448.163 li
266.454 448.163 li
266.454 449.519 li
266.596 449.658 li
266.596 448.163 li
267.612 448.163 li
267.612 450 li
267.754 450 li
267.754 448.163 li
268.779 448.163 li
268.779 450 li
268.919 450 li
268.919 448.163 li
269.114 448.163 li
269.944 448.163 li
269.944 448.993 li
269.944 450 li
270.086 450 li
270.086 449.133 li
270.086 448.163 li
271.111 448.163 li
271.111 450 li
271.252 450 li
271.252 448.163 li
272.277 448.163 li
272.277 450 li
272.418 450 li
272.418 448.163 li
273.459 448.163 li
273.459 450 li
273.599 450 li
273.599 448.163 li
274.624 448.163 li
274.624 450 li
274.766 450 li
274.766 448.163 li
275.783 448.163 li
275.783 450 li
275.924 450 li
275.924 448.163 li
276.949 448.163 li
276.949 450 li
277.089 450 li
277.089 448.163 li
278.233 448.163 li
278.233 448.023 li
277.089 448.023 li
cp
.74902 .74902 .74902 rgb
f
264.129 446.314 mo
264.129 447.192 li
271.186 447.192 li
271.186 446.314 li
264.129 446.314 li
cp
.956863 .956863 .956863 rgb
f
271.186 446.314 mo
271.186 447.192 li
273.612 447.192 li
277.711 447.192 li
278.233 447.192 li
278.233 446.314 li
271.186 446.314 li
cp
.717647 .717647 .717647 rgb
f
284.427 413.646 mo
284.943 414.161 li
284.943 426.4 li
284.427 426.4 li
284.427 413.646 li
cp
.184314 .537255 .537255 rgb
f
284.427 431.95 mo
284.943 432.466 li
284.943 444.706 li
284.427 444.706 li
284.427 431.95 li
cp
f
257.913 413.646 mo
257.397 414.161 li
257.397 426.4 li
257.913 426.4 li
257.913 413.646 li
cp
.247059 .717647 .713726 rgb
f
257.913 431.95 mo
257.397 432.466 li
257.397 444.706 li
257.913 444.706 li
257.913 431.95 li
cp
f
254.799 439.175 mo
254.799 408.718 li
243.027 408.718 li
243.027 439.175 li
243.027 440.869 li
243.027 450 li
274.689 450 li
274.689 439.175 li
254.799 439.175 li
cp
.4 .4 .4 rgb
f
248.016 417.882 mo
243.027 417.882 li
243.027 416.55 li
248.016 416.55 li
248.016 417.882 li
cp
.639216 .639216 .639216 rgb
f
254.799 417.882 mo
249.809 417.882 li
249.809 416.55 li
254.799 416.55 li
254.799 417.882 li
cp
f
248.016 420.544 mo
243.027 420.544 li
243.027 419.212 li
248.016 419.212 li
248.016 420.544 li
cp
f
254.799 420.544 mo
249.809 420.544 li
249.809 419.212 li
254.799 419.212 li
254.799 420.544 li
cp
f
248.016 423.204 mo
243.027 423.204 li
243.027 421.873 li
248.016 421.873 li
248.016 423.204 li
cp
f
254.799 423.204 mo
249.809 423.204 li
249.809 421.873 li
254.799 421.873 li
254.799 423.204 li
cp
f
248.016 425.866 mo
243.027 425.866 li
243.027 424.536 li
248.016 424.536 li
248.016 425.866 li
cp
f
254.799 425.866 mo
249.809 425.866 li
249.809 424.536 li
254.799 424.536 li
254.799 425.866 li
cp
f
248.016 428.528 mo
243.027 428.528 li
243.027 427.197 li
248.016 427.197 li
248.016 428.528 li
cp
f
254.799 428.528 mo
249.809 428.528 li
249.809 427.197 li
254.799 427.197 li
254.799 428.528 li
cp
f
248.016 431.189 mo
243.027 431.189 li
243.027 429.857 li
248.016 429.857 li
248.016 431.189 li
cp
f
254.799 431.189 mo
249.809 431.189 li
249.809 429.857 li
254.799 429.857 li
254.799 431.189 li
cp
f
248.016 433.852 mo
243.027 433.852 li
243.027 432.521 li
248.016 432.521 li
248.016 433.852 li
cp
f
254.799 433.852 mo
249.809 433.852 li
249.809 432.521 li
254.799 432.521 li
254.799 433.852 li
cp
f
248.016 436.514 mo
243.027 436.514 li
243.027 435.183 li
248.016 435.183 li
248.016 436.514 li
cp
f
254.799 436.514 mo
249.809 436.514 li
249.809 435.183 li
254.799 435.183 li
254.799 436.514 li
cp
f
248.016 439.175 mo
243.027 439.175 li
243.027 437.843 li
248.016 437.843 li
248.016 439.175 li
cp
f
254.799 439.175 mo
249.809 439.175 li
249.809 437.843 li
254.799 437.843 li
254.799 439.175 li
cp
f
274.689 450 mo
243.027 450 li
243.027 448.67 li
274.689 448.67 li
274.689 450 li
cp
f
276.095 442.847 mo
241.623 442.847 li
241.623 439.175 li
276.095 439.175 li
276.095 442.847 li
cp
.760784 .760784 .760784 rgb
f
254.799 437.843 mo
254.799 439.175 li
274.689 439.175 li
263.272 437.843 li
254.799 437.843 li
cp
.247059 .486275 .627451 rgb
f
246.02 443.97 mo
244.193 445.795 li
246.02 445.795 li
246.02 443.97 li
cp
.101961 .101961 .101961 rgb
f
244.193 443.97 mo
244.193 445.795 li
246.02 443.97 li
244.193 443.97 li
cp
.2 .2 .2 rgb
f
244.193 443.97 mo
246.02 443.97 li
246.02 445.795 li
244.193 445.795 li
244.193 443.97 li
cp
243.852 446.138 mo
246.361 446.138 li
246.361 443.627 li
243.852 443.627 li
243.852 446.138 li
cp
.760784 .760784 .760784 rgb
f
249.921 443.97 mo
248.095 445.795 li
249.921 445.795 li
249.921 443.97 li
cp
.101961 .101961 .101961 rgb
f
248.095 443.97 mo
248.095 445.795 li
249.921 443.97 li
248.095 443.97 li
cp
.2 .2 .2 rgb
f
248.095 443.97 mo
249.921 443.97 li
249.921 445.795 li
248.095 445.795 li
248.095 443.97 li
cp
247.752 446.138 mo
250.264 446.138 li
250.264 443.627 li
247.752 443.627 li
247.752 446.138 li
cp
.760784 .760784 .760784 rgb
f
253.822 443.97 mo
251.996 445.795 li
253.822 445.795 li
253.822 443.97 li
cp
.101961 .101961 .101961 rgb
f
251.996 443.97 mo
251.996 445.795 li
253.822 443.97 li
251.996 443.97 li
cp
.2 .2 .2 rgb
f
251.996 443.97 mo
253.822 443.97 li
253.822 445.795 li
251.996 445.795 li
251.996 443.97 li
cp
251.654 446.138 mo
254.165 446.138 li
254.165 443.627 li
251.654 443.627 li
251.654 446.138 li
cp
.760784 .760784 .760784 rgb
f
257.725 443.97 mo
255.898 445.795 li
257.725 445.795 li
257.725 443.97 li
cp
.101961 .101961 .101961 rgb
f
255.898 443.97 mo
255.898 445.795 li
257.725 443.97 li
255.898 443.97 li
cp
.2 .2 .2 rgb
f
255.898 443.97 mo
257.725 443.97 li
257.725 445.795 li
255.898 445.795 li
255.898 443.97 li
cp
255.556 446.138 mo
258.067 446.138 li
258.067 443.627 li
255.556 443.627 li
255.556 446.138 li
cp
.760784 .760784 .760784 rgb
f
261.627 443.97 mo
259.801 445.795 li
261.627 445.795 li
261.627 443.97 li
cp
.101961 .101961 .101961 rgb
f
259.801 443.97 mo
259.801 445.795 li
261.627 443.97 li
259.801 443.97 li
cp
.2 .2 .2 rgb
f
259.801 443.97 mo
261.627 443.97 li
261.627 445.795 li
259.801 445.795 li
259.801 443.97 li
cp
259.459 446.138 mo
261.969 446.138 li
261.969 443.627 li
259.459 443.627 li
259.459 446.138 li
cp
.760784 .760784 .760784 rgb
f
265.529 443.97 mo
263.702 445.795 li
265.529 445.795 li
265.529 443.97 li
cp
.101961 .101961 .101961 rgb
f
263.702 443.97 mo
263.702 445.795 li
265.529 443.97 li
263.702 443.97 li
cp
.2 .2 .2 rgb
f
263.702 443.97 mo
265.529 443.97 li
265.529 445.795 li
263.702 445.795 li
263.702 443.97 li
cp
263.359 446.138 mo
265.871 446.138 li
265.871 443.627 li
263.359 443.627 li
263.359 446.138 li
cp
.760784 .760784 .760784 rgb
f
269.43 443.97 mo
267.604 445.795 li
269.43 445.795 li
269.43 443.97 li
cp
.101961 .101961 .101961 rgb
f
267.604 443.97 mo
267.604 445.795 li
269.43 443.97 li
267.604 443.97 li
cp
.2 .2 .2 rgb
f
267.604 443.97 mo
269.43 443.97 li
269.43 445.795 li
267.604 445.795 li
267.604 443.97 li
cp
267.262 446.138 mo
269.772 446.138 li
269.772 443.627 li
267.262 443.627 li
267.262 446.138 li
cp
.760784 .760784 .760784 rgb
f
271.506 445.795 mo
273.332 443.97 li
271.506 443.97 li
271.506 445.795 li
cp
.2 .2 .2 rgb
f
273.332 445.795 mo
273.332 443.97 li
271.506 445.795 li
273.332 445.795 li
cp
.101961 .101961 .101961 rgb
f
273.332 445.795 mo
271.506 445.795 li
271.506 443.97 li
273.332 443.97 li
273.332 445.795 li
cp
271.163 443.627 mo
271.163 446.138 li
273.674 446.138 li
273.674 443.627 li
271.163 443.627 li
cp
.760784 .760784 .760784 rgb
f
245.962 413.392 mo
244.136 415.219 li
245.962 415.219 li
245.962 413.392 li
cp
.101961 .101961 .101961 rgb
f
244.136 413.392 mo
244.136 415.219 li
245.962 413.392 li
244.136 413.392 li
cp
.2 .2 .2 rgb
f
244.136 413.392 mo
245.962 413.392 li
245.962 415.219 li
244.136 415.219 li
244.136 413.392 li
cp
243.793 415.562 mo
246.305 415.562 li
246.305 413.051 li
243.793 413.051 li
243.793 415.562 li
cp
.760784 .760784 .760784 rgb
f
249.863 413.392 mo
248.037 415.219 li
249.863 415.219 li
249.863 413.392 li
cp
.101961 .101961 .101961 rgb
f
248.037 413.392 mo
248.037 415.219 li
249.863 413.392 li
248.037 413.392 li
cp
.2 .2 .2 rgb
f
248.037 413.392 mo
249.863 413.392 li
249.863 415.219 li
248.037 415.219 li
248.037 413.392 li
cp
247.695 415.562 mo
250.206 415.562 li
250.206 413.051 li
247.695 413.051 li
247.695 415.562 li
cp
.760784 .760784 .760784 rgb
f
251.939 413.392 mo
251.939 415.219 li
253.766 413.392 li
251.939 413.392 li
cp
.2 .2 .2 rgb
f
253.766 413.392 mo
251.939 415.219 li
253.766 415.219 li
253.766 413.392 li
cp
.101961 .101961 .101961 rgb
f
251.939 413.392 mo
253.766 413.392 li
253.766 415.219 li
251.939 415.219 li
251.939 413.392 li
cp
251.597 415.562 mo
254.108 415.562 li
254.108 413.051 li
251.597 413.051 li
251.597 415.562 li
cp
.760784 .760784 .760784 rgb
f
244.136 410.054 mo
244.136 411.88 li
245.962 410.054 li
244.136 410.054 li
cp
.2 .2 .2 rgb
f
245.962 410.054 mo
244.136 411.88 li
245.962 411.88 li
245.962 410.054 li
cp
.101961 .101961 .101961 rgb
f
244.136 410.054 mo
245.962 410.054 li
245.962 411.88 li
244.136 411.88 li
244.136 410.054 li
cp
243.793 412.223 mo
246.305 412.223 li
246.305 409.712 li
243.793 409.712 li
243.793 412.223 li
cp
.760784 .760784 .760784 rgb
f
248.037 410.054 mo
248.037 411.88 li
249.863 410.054 li
248.037 410.054 li
cp
.2 .2 .2 rgb
f
249.863 410.054 mo
248.037 411.88 li
249.863 411.88 li
249.863 410.054 li
cp
.101961 .101961 .101961 rgb
f
248.037 410.054 mo
249.863 410.054 li
249.863 411.88 li
248.037 411.88 li
248.037 410.054 li
cp
247.695 412.223 mo
250.206 412.223 li
250.206 409.712 li
247.695 409.712 li
247.695 412.223 li
cp
.760784 .760784 .760784 rgb
f
253.766 411.88 mo
253.766 410.054 li
251.939 411.88 li
253.766 411.88 li
cp
.101961 .101961 .101961 rgb
f
251.939 411.88 mo
253.766 410.054 li
251.939 410.054 li
251.939 411.88 li
cp
.2 .2 .2 rgb
f
253.766 411.88 mo
251.939 411.88 li
251.939 410.054 li
253.766 410.054 li
253.766 411.88 li
cp
251.597 409.712 mo
251.597 412.223 li
254.108 412.223 li
254.108 409.712 li
251.597 409.712 li
cp
.760784 .760784 .760784 rgb
f
257.818 435.183 mo
255.805 435.183 li
255.805 437.843 li
257.818 437.843 li
257.818 435.183 li
cp
f
258.826 434.488 mo
256.813 434.488 li
256.813 435.183 li
258.826 435.183 li
258.826 434.488 li
cp
.854902 .854902 .854902 rgb
f
259.832 435.183 mo
257.818 435.183 li
257.818 437.843 li
259.832 437.843 li
259.832 435.183 li
cp
.572549 .572549 .572549 rgb
f
248.951 407.662 mo
246.937 407.662 li
246.937 408.718 li
248.951 408.718 li
248.951 407.662 li
cp
.760784 .760784 .760784 rgb
f
249.957 406.971 mo
247.943 406.971 li
247.943 407.662 li
249.957 407.662 li
249.957 406.971 li
cp
.854902 .854902 .854902 rgb
f
250.965 407.662 mo
248.951 407.662 li
248.951 408.718 li
250.965 408.718 li
250.965 407.662 li
cp
.572549 .572549 .572549 rgb
f
291.816 450 mo
304.755 450 li
304.755 448.677 li
291.816 448.677 li
291.816 450 li
cp
.580392 .580392 .580392 rgb
f
304.755 416.465 mo
291.816 416.465 li
291.816 418.251 li
304.755 418.251 li
304.755 416.465 li
cp
.772549 .772549 .772549 rgb
f
295.784 422.221 mo
304.755 422.221 li
304.755 420.896 li
294.462 420.896 li
295.784 422.221 li
cp
.227451 .447059 .576471 rgb
f
294.462 420.896 mo
291.816 420.896 li
291.816 422.221 li
295.784 422.221 li
294.462 420.896 li
cp
.172549 .337255 .431373 rgb
f
298.431 424.866 mo
304.755 424.866 li
304.755 423.543 li
297.107 423.543 li
298.431 424.866 li
cp
.227451 .447059 .576471 rgb
f
297.107 423.543 mo
291.816 423.543 li
291.816 424.866 li
298.431 424.866 li
297.107 423.543 li
cp
.172549 .337255 .431373 rgb
f
299.753 426.189 mo
291.816 426.189 li
291.816 427.511 li
301.076 427.511 li
299.753 426.189 li
cp
f
301.076 427.511 mo
304.755 427.511 li
304.755 426.189 li
299.753 426.189 li
301.076 427.511 li
cp
.227451 .447059 .576471 rgb
f
302.399 428.834 mo
291.816 428.834 li
291.816 430.157 li
303.722 430.157 li
302.399 428.834 li
cp
.172549 .337255 .431373 rgb
f
303.722 430.157 mo
304.755 430.157 li
304.755 428.834 li
302.399 428.834 li
303.722 430.157 li
cp
.227451 .447059 .576471 rgb
f
291.816 432.803 mo
304.755 432.803 li
304.755 431.479 li
291.816 431.479 li
291.816 432.803 li
cp
.172549 .337255 .431373 rgb
f
291.816 435.448 mo
304.755 435.448 li
304.755 434.125 li
291.816 434.125 li
291.816 435.448 li
cp
f
291.816 438.093 mo
304.755 438.093 li
304.755 436.771 li
291.816 436.771 li
291.816 438.093 li
cp
f
291.816 440.74 mo
304.755 440.74 li
304.755 439.417 li
291.816 439.417 li
291.816 440.74 li
cp
f
291.816 443.386 mo
304.755 443.386 li
304.755 442.064 li
291.816 442.064 li
291.816 443.386 li
cp
f
291.816 446.031 mo
304.755 446.031 li
304.755 444.709 li
291.816 444.709 li
291.816 446.031 li
cp
f
291.816 448.677 mo
304.755 448.677 li
304.755 447.354 li
291.816 447.354 li
291.816 448.677 li
cp
f
295.784 422.221 mo
291.816 422.221 li
291.816 423.543 li
297.107 423.543 li
295.784 422.221 li
cp
.0627451 .152941 .207843 rgb
f
297.107 423.543 mo
304.755 423.543 li
304.755 422.221 li
295.784 422.221 li
297.107 423.543 li
cp
.0823529 .203922 .278431 rgb
f
291.816 418.251 mo
291.816 419.574 li
293.14 419.574 li
291.816 418.251 li
cp
.172549 .337255 .431373 rgb
f
304.755 419.574 mo
304.755 418.251 li
291.816 418.251 li
293.14 419.574 li
304.755 419.574 li
cp
.227451 .447059 .576471 rgb
f
293.14 419.574 mo
291.816 419.574 li
291.816 420.896 li
294.462 420.896 li
293.14 419.574 li
cp
.0627451 .152941 .207843 rgb
f
294.462 420.896 mo
304.755 420.896 li
304.755 419.574 li
293.14 419.574 li
294.462 420.896 li
cp
.0823529 .203922 .278431 rgb
f
298.431 424.866 mo
291.816 424.866 li
291.816 426.189 li
299.753 426.189 li
298.431 424.866 li
cp
.0627451 .152941 .207843 rgb
f
299.753 426.189 mo
304.755 426.189 li
304.755 424.866 li
298.431 424.866 li
299.753 426.189 li
cp
.0823529 .203922 .278431 rgb
f
302.399 428.834 mo
304.755 428.834 li
304.755 427.511 li
301.076 427.511 li
302.399 428.834 li
cp
f
301.076 427.511 mo
291.816 427.511 li
291.816 428.834 li
302.399 428.834 li
301.076 427.511 li
cp
.0627451 .152941 .207843 rgb
f
303.722 430.157 mo
291.816 430.157 li
291.816 431.479 li
304.755 431.479 li
304.755 431.189 li
303.722 430.157 li
cp
f
304.755 431.189 mo
304.755 430.157 li
303.722 430.157 li
304.755 431.189 li
cp
.0823529 .203922 .278431 rgb
f
291.816 434.125 mo
304.755 434.125 li
304.755 432.803 li
291.816 432.803 li
291.816 434.125 li
cp
.0627451 .152941 .207843 rgb
f
291.816 436.771 mo
304.755 436.771 li
304.755 435.448 li
291.816 435.448 li
291.816 436.771 li
cp
f
291.816 439.417 mo
304.755 439.417 li
304.755 438.093 li
291.816 438.093 li
291.816 439.417 li
cp
f
291.816 442.064 mo
304.755 442.064 li
304.755 440.74 li
291.816 440.74 li
291.816 442.064 li
cp
f
291.816 444.709 mo
304.755 444.709 li
304.755 443.386 li
291.816 443.386 li
291.816 444.709 li
cp
f
291.816 447.354 mo
304.755 447.354 li
304.755 446.031 li
291.816 446.031 li
291.816 447.354 li
cp
f
291.816 450 mo
284.185 450 li
284.185 419.574 li
291.816 419.574 li
291.816 450 li
cp
.772549 .772549 .772549 rgb
f
291.816 422.221 mo
284.897 422.221 li
284.897 420.896 li
291.816 420.896 li
291.816 422.221 li
cp
.227451 .447059 .576471 rgb
f
291.816 424.866 mo
284.897 424.866 li
284.897 423.543 li
291.816 423.543 li
291.816 424.866 li
cp
f
291.816 427.511 mo
284.897 427.511 li
284.897 426.189 li
291.816 426.189 li
291.816 427.511 li
cp
f
291.816 430.157 mo
284.897 430.157 li
284.897 428.834 li
291.816 428.834 li
291.816 430.157 li
cp
f
291.816 432.803 mo
284.897 432.803 li
284.897 431.479 li
291.816 431.479 li
291.816 432.803 li
cp
f
291.816 435.448 mo
284.897 435.448 li
284.897 434.125 li
291.816 434.125 li
291.816 435.448 li
cp
f
291.816 438.093 mo
284.897 438.093 li
284.897 436.771 li
291.816 436.771 li
291.816 438.093 li
cp
f
291.816 440.74 mo
284.897 440.74 li
284.897 439.417 li
291.816 439.417 li
291.816 440.74 li
cp
f
291.816 443.386 mo
284.897 443.386 li
284.897 442.064 li
291.816 442.064 li
291.816 443.386 li
cp
f
291.816 446.031 mo
284.897 446.031 li
284.897 444.709 li
291.816 444.709 li
291.816 446.031 li
cp
f
291.816 448.677 mo
284.897 448.677 li
284.897 447.354 li
291.816 447.354 li
291.816 448.677 li
cp
f
291.816 423.543 mo
284.897 423.543 li
284.897 422.221 li
291.816 422.221 li
291.816 423.543 li
cp
.0823529 .203922 .278431 rgb
f
291.816 426.189 mo
284.897 426.189 li
284.897 424.866 li
291.816 424.866 li
291.816 426.189 li
cp
f
291.816 428.834 mo
284.897 428.834 li
284.897 427.511 li
291.816 427.511 li
291.816 428.834 li
cp
f
291.816 431.479 mo
284.897 431.479 li
284.897 430.157 li
291.816 430.157 li
291.816 431.479 li
cp
f
291.816 434.125 mo
284.897 434.125 li
284.897 432.803 li
291.816 432.803 li
291.816 434.125 li
cp
f
291.816 436.771 mo
284.897 436.771 li
284.897 435.448 li
291.816 435.448 li
291.816 436.771 li
cp
f
291.816 439.417 mo
284.897 439.417 li
284.897 438.093 li
291.816 438.093 li
291.816 439.417 li
cp
f
291.816 442.064 mo
284.897 442.064 li
284.897 440.74 li
291.816 440.74 li
291.816 442.064 li
cp
f
291.816 444.709 mo
284.897 444.709 li
284.897 443.386 li
291.816 443.386 li
291.816 444.709 li
cp
f
291.816 447.354 mo
284.897 447.354 li
284.897 446.031 li
291.816 446.031 li
291.816 447.354 li
cp
f
321.073 450 mo
314.155 450 li
314.155 432.803 li
321.073 432.803 li
321.073 450 li
cp
.772549 .772549 .772549 rgb
f
321.073 435.448 mo
314.155 435.448 li
314.155 434.125 li
321.073 434.125 li
321.073 435.448 li
cp
.227451 .447059 .576471 rgb
f
321.073 438.093 mo
314.155 438.093 li
314.155 436.771 li
321.073 436.771 li
321.073 438.093 li
cp
f
321.073 440.74 mo
314.155 440.74 li
314.155 439.417 li
321.073 439.417 li
321.073 440.74 li
cp
f
321.073 443.386 mo
314.155 443.386 li
314.155 442.064 li
321.073 442.064 li
321.073 443.386 li
cp
f
321.073 446.031 mo
314.155 446.031 li
314.155 444.709 li
321.073 444.709 li
321.073 446.031 li
cp
f
321.073 448.677 mo
314.155 448.677 li
314.155 447.354 li
321.073 447.354 li
321.073 448.677 li
cp
f
321.073 436.771 mo
314.155 436.771 li
314.155 435.448 li
321.073 435.448 li
321.073 436.771 li
cp
.0823529 .203922 .278431 rgb
f
321.073 439.417 mo
314.155 439.417 li
314.155 438.093 li
321.073 438.093 li
321.073 439.417 li
cp
f
321.073 442.064 mo
314.155 442.064 li
314.155 440.74 li
321.073 440.74 li
321.073 442.064 li
cp
f
321.073 444.709 mo
314.155 444.709 li
314.155 443.386 li
321.073 443.386 li
321.073 444.709 li
cp
f
321.073 447.354 mo
314.155 447.354 li
314.155 446.031 li
321.073 446.031 li
321.073 447.354 li
cp
f
314.155 450 mo
304.755 450 li
304.755 427.511 li
314.155 427.511 li
314.155 450 li
cp
.772549 .772549 .772549 rgb
f
314.155 430.157 mo
304.755 430.157 li
304.755 428.834 li
314.155 428.834 li
314.155 430.157 li
cp
.227451 .447059 .576471 rgb
f
314.155 432.803 mo
304.755 432.803 li
304.755 431.479 li
314.155 431.479 li
314.155 432.803 li
cp
f
314.155 435.448 mo
304.755 435.448 li
304.755 434.125 li
314.155 434.125 li
314.155 435.448 li
cp
f
314.155 438.093 mo
304.755 438.093 li
304.755 436.771 li
314.155 436.771 li
314.155 438.093 li
cp
f
314.155 440.74 mo
304.755 440.74 li
304.755 439.417 li
314.155 439.417 li
314.155 440.74 li
cp
f
314.155 443.386 mo
304.755 443.386 li
304.755 442.064 li
314.155 442.064 li
314.155 443.386 li
cp
f
314.155 446.031 mo
304.755 446.031 li
304.755 444.709 li
314.155 444.709 li
314.155 446.031 li
cp
f
314.155 448.677 mo
304.755 448.677 li
304.755 447.354 li
314.155 447.354 li
314.155 448.677 li
cp
f
314.155 431.479 mo
304.755 431.479 li
304.755 430.157 li
314.155 430.157 li
314.155 431.479 li
cp
.0823529 .203922 .278431 rgb
f
314.155 434.125 mo
304.755 434.125 li
304.755 432.803 li
314.155 432.803 li
314.155 434.125 li
cp
f
314.155 436.771 mo
304.755 436.771 li
304.755 435.448 li
314.155 435.448 li
314.155 436.771 li
cp
f
314.155 439.417 mo
304.755 439.417 li
304.755 438.093 li
314.155 438.093 li
314.155 439.417 li
cp
f
314.155 442.064 mo
304.755 442.064 li
304.755 440.74 li
314.155 440.74 li
314.155 442.064 li
cp
f
314.155 444.709 mo
304.755 444.709 li
304.755 443.386 li
314.155 443.386 li
314.155 444.709 li
cp
f
314.155 447.354 mo
304.755 447.354 li
304.755 446.031 li
314.155 446.031 li
314.155 447.354 li
cp
f
283.421 418.251 mo
291.816 418.251 li
291.816 420.896 li
283.421 420.896 li
283.421 418.251 li
cp
.909804 .909804 .909804 rgb
f
314.154 431.479 mo
322.285 431.479 li
322.285 434.125 li
314.154 434.125 li
314.154 431.479 li
cp
f
304.755 426.189 mo
315.451 426.189 li
315.451 428.834 li
304.755 428.834 li
304.755 426.189 li
cp
f
290.648 415.607 mo
305.939 415.607 li
305.939 418.251 li
290.648 418.251 li
290.648 415.607 li
cp
f
305.467 448.677 mo
304.755 448.677 li
304.755 428.834 li
305.467 428.834 li
305.467 448.677 li
cp
f
284.897 448.677 mo
284.185 448.677 li
284.185 420.896 li
284.897 420.896 li
284.897 448.677 li
cp
f
314.868 448.677 mo
314.155 448.677 li
314.155 434.125 li
314.868 434.125 li
314.868 448.677 li
cp
f
292.528 418.251 mo
291.816 418.251 li
292.528 418.963 li
292.528 418.251 li
cp
f
291.816 418.251 mo
291.816 448.677 li
292.528 448.677 li
292.528 418.963 li
291.816 418.251 li
cp
.682353 .682353 .682353 rgb
f
303.462 413.599 mo
298.294 413.599 li
298.294 415.607 li
303.462 415.607 li
303.462 413.599 li
cp
.470588 .360784 .278431 rgb
f
293.126 413.599 mo
293.126 415.607 li
298.294 415.607 li
298.294 413.599 li
293.126 413.599 li
cp
.627451 .482353 .372549 rgb
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 17.0.0
%%For: (ivan) ()
%%Title: (1411.i047.054.S.m004.c11.skyscrapers offices.eps)
%%CreationDate: 11/27/2014 2:30 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6BjVgidQ[TA5/6!&#A:?)!)DtjO9C1Z+`RPaZ;3fG(NAjZ0/Jg`ir@](P.Ds)jD*I\3>cYkk<<rL(TP'RPY+qj[JKUaNS_0L
%Dfni6HN1,^m)$&D=U!-/$FXmQnXnRFT=4G46bQ/Jp&ZTo/3@iV[!X6SiZV^D$SiLq#[JcZma]=J7X)3ukg^ThiF]:L)[odTS)::&
%_Md[cr2!SAhe9KGrtIBFe_1n^P]lu"m8gj(h&CI9UI%ea39VE'iR^GY!X7pLa2=[C%R:8Yd0T"A\lnRXqbK+(-(t0#$Qo*^-`u?@
%:`Zrih,!cIdF(dOW'4neX2uGK)=%I<YQ0/(PT.m4\33GD$`Xp=*8N,!'oRe%5!t'0.KCZ^s2Rb3PPgmj8O32dfk18fMG=(Z^R]s\
%n.M>+]e\VeOobXmOq3%c;?;,rJ0><5P,nm!)kDGi3bn-rF=b2jH%B1%%_\U_7W8D@@PA^*AD+D-(i7MI/:4(U%(gGadIs>ele#\!
%R?/?_`o!o<5:_GcNG?-]8-cX](`g!_$NoVoB,nt=%P.M,rj^c$]^E3td$k'ViadFCo]hDoZsK`aDHHXiUW2nTVBl_QK9O:\/@X4P
%Zf,%97$dW&bAjFXrSCr%BW!,frC6OcpP)amg%B`+T*q4Lqn-'J!$0[H553]#17edJh=f5%$ft%qdj#]38)E))/);5Q:0QJ=jTrjh
%E9u))T+"nGA\Xp;Lm!8W[M0tYhcTe8XYP"6B[l7'2V?=&jpO!ZXQ#-?7_R?SDtZ5.1kt@(2dd,;@=#;--g>!g^[T!hMK(jt$O;\u
%p->;$AW$N_ccbBfdEu9I%"EX[k`,I$h.H,:s"'E"^#MT@9qsW3%:FSLL#(dmn1XMC$[e6U%L:N&k^\/LAW##=s5"HDd*=qPOSfi(
%q7jfH2VJ,mObY@ohF&e`d&l`nNHVLd'MG7UXV]hp#Q6d-pY+/8F\q"GOLcsE^YphGkVAu?@Cam>l1C[5\.C<':n1Gar@&O_F`[ui
%\'_;gV=rtWNQNVV*gHuf43,$XCY4aV0d;,1XPKg0kjEVXC(A8$e&#Osf2`oS'M/8"#'hmpA7gQa(8_AqO0bm7ZeB<+:'T8JBra_f
%-iP`T11YH/;2t<2`Mif.P"eQm&s"`@Xa1AF?cKH:\'2ZQePY]Jgro5\3bUCJbXFG&buPY3h87"<2/9)[l?2qSS1>SL<r3;;-+?`C
%V:Rq`"Tg=WbKEhN#2;cLGjsi%KQ8<Glp$TH$S1^bmp8t"_KsLWQWl>U4BDdFVu18:YjcS/h1\'G6RN=Ha5^#!4Ot,Z/.De`ZV9bn
%eZKE$?!bAs4P0[I/H<fj1&B2L%Y%`f/aN,D_Lhqeg-*gkrEX9$do**'f#d/)UKk:^8W#eC7)>^fDU(JKqWKb+CXR6ieX/Hnq4=?!
%h_2/>V4FAZ]74!IZDTXX<R9&.<bRf>j51hnq"O?Jd,RtP8nb-3W6'H(cV&;c9e3oAY:6g?'1_*!1#ug">%;mI,Z7RQ74Q'Z##0$Y
%TJ;+95=]3O_+U8QOJ#?ec>e!ZfH)l`NF<t$GY+\.AMpXF3uG@Jd[At-+YUn0..U&*Xn60^cC*Ohm^TT-)ccp`eL4Z^VmFLF\:%]&
%V`W#?iA@H`l@"-U?cpG0oYuMej%5E8jB/IpH.M9KXLl,G2p3E<FuYi?ONa:cc04g>K.>qU3SL3b?LiL&M:dofAiZa3DlNsO<i/sV
%6+PAoXNjbT)/RS\Q2@2OEo&pDS#::.,aE-TWXp8\?hR[@GqqlJk44_H**Yf%>]07U\K&f.4I;Q#Eq<ORT$,B"\VjXKm9Qo#/m!+s
%81qC<>`W]=U[`Q'I;iAlp\q]=O6?(n9E)$\.crh5m;\F&]Safs'$9W[LMIIAjG91YUO'K@GDdQLc'8Rmig1Vg4K4?r_cF1WO_o`W
%*B3_]c!b+(:A(gM'[#SNY/B%okAfn^9AHeqdtTtn6iHnYch1R-<NbC6DmN9-S`[!C(F8u?c-BNMa8EWAB5]IUG?H94%R9EBZNb%0
%^FlW+3=`,!a+J!3ei9U.o3%M_r6d@4*:3fs*4Mu$c!GTRWcmtNh5&,g[Em"Q^o`+`]l)js%9+NQ1uVQF/bm(2T+3OO\QU`JNs$U.
%cIImRk%Mba00R>-la==!9"l=KV;G@6K64+od^\7.#!LQk0$)kCR1B`Z\B-ITb&L#Pk[I=JB$CG=#h7/T*5fT"?']'`=PD'+P&.60
%hJBYECTOm$fU(3EG&,%Rk.O7-a`VrBIY$U#jqj7EXt*9mc7Z@2eNmtmg1cN:(t\fP`UPE)_&%B9E"UE9R03;[0fWmOT"L66:Au!n
%HB-$aXi:4&chs"<fc9lMSasl[2D`(L=kYmim.K'OK1=n93?E4crXg5:a-b*G-LL`ENBH1j[7`*Tb9<`FD4#H)@Ma*uLd%cg>N7j;
%9bb7Af$mpjC;]A*<kdc,qPW\;^)ROJ%&P3"ks_`?i4SWn7P]0oF6>E)?>Qq.fQY"ahCI1cA@(^;Y/OT`o2Dm"0Y+CGMt+i5f#90"
%YO]p1R<Man7V(X%QB`iSRU8lFHP[CW3-%0sT\skg6InGt\Yl%X&Xdo?SSPd(rSoLjL16PE*KeNn3M_o"!SZ[M[G,Q*%iT<a?&Unl
%dj@I8X*sk**_'GJI?PkA]\8TS_g]4$CU!9+]VtP-jH@ukK";q_g9*oBP9Yjs3pUFMV.\rBcYIMLUAT=<@H+2erLD_Hr\I>L/IGgi
%O%V[DFe4eaD?"dL,MTai/g8PWRX(6]@mjqc-00?bpO@-nafNaqB$LKYbuVHIn&.tJVY<YO]f\#Hmh1tiXJH-id5=[>3K:E$$r=Fr
%T\%:q<kR'r[3LH65Y[F&06mYs[`p4M=cI7,\rCHb;u_r7f@X^uF0nUU]ekM+@kuU+h!pVn\u]LCg](6fk@b2j4/;'`B3^[c]W<H&
%Hef[B::4+AGK/g9X3`1+.XYCD)Dq6g6B7A^lRhgIcTLTX75$O)W-2C9>Q_8']4u9o/nV0/:SQ'6DNe]uAj3\,Noh]dAmfXd_ilLV
%lZ<acf3FqnLNPaTU<LB!GVtPVjLI]sIMV$c4Mu;&MfLt.olW6PP&%n%rNdn46KIrFPkeIHq,rs^ZY*-MfBFhYY,,dnf?\5X(<)l;
%7CaoIX`g8\U?%b;1[bt=B2Qa3oX]K8k:3(&a^q4`QtVgHQ<3tS]Nci9js+m=mbG<5"7]T2ELA\o<qdDrG)j`Crf3a\]Oc:%f<=L`
%K63]5nbFamQbObg_-:O6IdJ>./XZFClfQf>%-cQNc2H?RokRb65j%%ZolFp#.9pXB,Fs1h\Q?D1=.9G1f?UF&VdOB0e`L3*6=(*c
%&N]d-&,!-#F3Dr7s/-n<cDT(/VboFG7QJ%f5)n^RaIG_HXa_;W]ls)Gd<0^0msk<OT$)DCh^\C]%`fr=h9U45%[F`%rbp0IoJ0bs
%^M9+E>bd3QVHMm.^Fa!KBD7*RDr-bj/]>qEK(J:pk1>;lSa/TpV,aX8^!UY=ZTk.bfjMQl*L1\?.TH,i>XZD7Ff^2^_`t7)r-&m)
%_uHmV*t$Wer;K-&I$qChkW%0AXKTk$rTj.<`I*:oo9n3XqdHp]5crZ&pP,m\m>c7855iY!Jt0/[et'U1+7RPQ/*<7*I`7q9D2NU\
%-+uR(4he8(,:@^q=J8CB)p-K^XCk./)najA6e5@RD6P[s%<t=P:,huSCo+cg92"\dH0,p/4>&0\,L.pH%Fma[FP:GfnuVNaV\dIU
%p`SRJIW>@ahu$3`R<\^X*UZgq5Q@9=s.)CSSNm/QT=45mIP#%.r:c`ZFT244[lEmQoA;(kr0N0^lj9n+Xl^$`k0JEflbUZ-fp%sj
%o:<^6C];P%[XCESeSL9;I"(+u\:JGd\2X/tbe+>)EMqT24D7&dGEDPcENT"I[Hi17h<t4t]lEGjals'</D&PAXuVq`$=$b`QQs+8
%XE:f#KnQ@na$!*eb])k\=-hGf[F.(eV-."4ju[+[\O2\+LWm6LAojGXr`.ME2VEJICq`V%/X0L'))N8f<CgL9X3fMM8T4:j<j1<r
%XUZ9Be_ZtQc$ZZWh`n`3.r'+kAiAB4D`N#":t\KGX.gSNWrBKX)3;);f;CV<;=]mZC!&$!CfFLNFfB"Pb";;*8]/(hC%fGnUBV+]
%@/cJ-$uR$;f6+P+QGDh!eWRi;MKsDsc'Cq`RC:;G[Tie*+YLN+"-prTj(5sp1>d>eGVeM%0Ct0iq8UU*j+V0s2;WRL[onlRQZO$u
%n%[(*?=l/!D4d$4?_o.1o*qMk#1<Z*Ef_V1o,XWpgHiDIX(Hf*l+4PA4MP]A(-OsT9+L*N:!COaW0tD:U>6aT<EkmGL0&@d\S`M^
%aFC.2p(rrUdscbf`-cS&]hWje36ju4Y0,aKSShlY^YmH9_K`oPETS(Xq$g$tLDIq2pq6P,rc!>`derg8b;.PpcI'IB[GLdnroosq
%\U*KiHD^LBq(j"gjgY;-r]9p&:7bdu3GaXVo`pJ&:8>EV;sB_j;9n\dc[+0bTUj4$GIH7fj,:F[cm@$6>s;j!0BN7!i[h6F1,*Jg
%o,F<K>b+0KB4t?i6aL(ap2g[*D<*c=,R[r0_Ie.?Re'=UT'Q/P>4/[7ZY]M!)O"g)rdK-P:g3qOiV)A\6]rhp]>WoO^5k#+a10h`
%=>8XQR-=Tq^5k#GF""U(q\XV40]0p<nWe:3O"m\QI(kXrhoE5Nq\Um/**%&#G+&.OF.T#ckbR@6=rUJr070f`#I5#RW?!56?V6Ms
%3Hdrr9U&fZ`CH,(G!os!SQNiNQe*3YLQ1[ej4h)kXlYD,NUiFd[VkPAe/HlC2KQ;)!*8Nle^!iJ]2nd6)OKVfV=(k"$\%U6>ckks
%YGg3j?5F%cF*q>(eB>1;ok*!o1^C]hT(1aX/up:DSDa=N,bek:Ip(4tY,(DDE.1m:DcqnYG:!4O>tLBlq/_[6K7;Flcf'+f4Dr%L
%F#>l[F6,frT%M;k#<B7F=7dfBq*o(iV"/gPpr_-W.rsPu:K(m*\<gCVNj<![^J`g!3<j&Di9TYm:`)n7bHBRZ"P05]oK^5B>4[1/
%/%L_3j-7jXhSu/ME^/M,k1SNPS""&3o5&;FRPW:P/gm.3&Ur!2\Tp(l'9;T$*Y5l+q-8qa#j1C,m%nb`L2EO-c*2tjVfVHODP#.u
%Aif*^YB2BuF08%p[qoE4K^N]\=$IR%o/NS7cfXeXaZQ3-qYApS]T1tIHl40l47TZF:NE6ho6VddfW4"5`[>#THR4"$?"@p!SAEEV
%O>4N6Eu*P3ZOJX5nd5#Tj*%hR[TZ4p?GBZZNP;UWg'\p]^:3_#;Q&V/bN*\mC&Z8bjdb_KLc`5mBsc+nmn1m"CVBN+[B`qBrJ1<R
%a3@sUB<I38br;FOc*q!Gn)`[1]&],rC=a`+aoC&?=ncPh:@J\4K4_OB32fjK"e/]cbA,WnVn(YdD5Ua3?TrD9`N:p"/usC\ma=[d
%FL0R>NiJKh("@7b;dtJcQ[#gK7]DZu\L,STC;<R43a=l`jLE1+d>!.o\YG&)?CJ^A3?2c+^TGd@f7Qe#nrgngEf3#29"q4H9>@eW
%gbVr.ms?@U\I3fuFWSrTj.LZ;oLgA31%-_+#Yg1]>5N?AQ(k]ks7Ufq`e>>07':Q,1lmLU1"$$7R-5Z`_t0O7k(9<8[;+i6U\X0?
%q.BC$i9d0$K6!9#HOLr*<p6h?.o.+iT'L0/n7F_U50GFN[DBSi2RH\`]kT&R'#'5rb&ocfRf<uBln9c4VL>%*S6]SCWe8md[+!+h
%]o;dH3/^OW^,XD-)s3(=$o_n_f>S,pN\eF.k4)^J[IK]eNE:*)H2b(b=Uf\+O&s(Wj7->hE@!3r)W'F/on&=,(lqt+Di;rFRH9"a
%e[q/](-\)Y]:AX2^R1ru"a)in27O8_r!>n)cT)b_'j^T'etnf/i-)q/s$QaJaRkehT6WPQ.!Y!E?+W%?ESariD)ZH/hsJ$^n^78p
%N7jdj]@Zj9g#'8YF#itr?&(KgQ?2+[o1LEZq_56k>rFhUYLbYJ(PoM4I_,Q8CVBi\IHDpDB&+QiG`V@:3/!4c\XE0uG+Pn8cNEH*
%Sk/==NPTdRE1OFbIac/['d!dDWlKCriC`H33e\R.i4QmEo'UC0V(^MkClc39r@@,%Y*4t__h(mumUl0'DJ#5PB(knAAfI(_3/"1h
%m$6MH6+&djk4t1W%,*gZ7C($ac!n&<Kq:)mlWj4eQMK+PI-]et7YMq0/%+-H`tM^s%-O?+EdkstpDgI99f9H=8!%VTG&6JXX':o4
%6fOKZTVIjemN-'#f=``5pdX;>e]!%6j$,3o5:dHqIk(st#OJJU+W/AnDXX2Ms#4OA$Ql(:<L@]sTM7)5rnNkN>+L,S+U_G,?1neK
%]S$1G?'QT1n;h$l]2@o1XCC,"^([gp5nq6<r!7r%[NU2Ng9qq]^@oJ8UW=ms.ks3HaN2!^m,+DNYHNKT;m<C@Mo*M1<h]Ktr,J><
%*`1I^LA^s)lX8Ms1$^"4f'/a6=)BlcUIN\C]jon=hf<PaLbK;_hQ5(E*6@f2Z"4/H>181dq]J*C%J\3jF<559]Do/Hec5-ZJ+dXH
%h[NR)aa(.rX+4)b]I',<'_t$n!Aihe4S[bnm^8I_rstU&JS$X4PqMfGiss#=jm!*[jn@((!AJS(s/J(h!0F**rg`BMTWn'9s!otA
%LaC51h**lDJ[p39E2Pc[qR\d*Y"i8.TJ68\e8.k1AuPaqQ1(a5<gS7"C&/,m-js=,cksIWI?LA;E:KcmBP\LUb<-5NpM+?#W>@M`
%RY[]QdO9RY,L0T4D]e'[lPA6Ha>GdEN:*MQ5'%(=nSm"Dr'n.L'<Sp7lWa0HIk+[T$X*=E2:7[tQ%`X_%0]7chbsIjoB'HWd@L;[
%IBM1$*]F%drT/GCVTH'uWa-]*meKoB_1&055,ZBq5"a!KJNc^g")YCB@N<EegR%4V[CdRG411F4\n*7LMjEgb;qj8(J0qJ=pDI\3
%?&ZJ4S_C$A7q\#8bY"W;%lSaIo@e9@)aPlPBf&>lK@\0:9fcUK8YMQ/-FfO=p*KP/DeC;bJ5pJ6lHs=)Wca-(IR.Q)T<?D_HFd7B
%bN;W8%a"BRUYTV5%t"768@L8OpnZ_-Y."'DrGd04NineUqeYZ8de]T(RH)'9?J=tuNboTnL(?[aj*m\"m@K9;-]PuLY<VH5g,PZ;
%8YNXj*K6#*eNpman%LD6Kk"*RBk:'E%64Vk$P-cCl_%]3p11U=*O%JX6!p[!(q0Fu0T9gGT:!`t(CPrbHG<GoCL@L#TTF3sdB3@^
%]rnq-EDW4knB>uX_gZN7QE.Gu.(Cep'M@C_YHV@SNZ&#M#[*[YOg(@m=VoNahKT0_m`Eku.,,[6g=9%&`hpS]<[LJ[KmpGe(dR8,
%`bfiRo(Gr=qlZPS/2eR<WFbUE:G&ZfgCE#[PspClDH=B!=,.%7BVWT9%3!.(i9s.oYjq1\YZ5V$WlM5bCF%JEf90'bdI3)cIHXAP
%q7I(Bq[Mc!1$T5&f7[HeL8WKg(-]HGe6CrCqTC8I,cHR/%3mQAFC@.R,=VjD@AV<5%DI')o3G%'kNDo)/pZcf=)VW;]WmnG1tka+
%,H)3QBaf1-6iL_Ejca7+]iqhgC8mK<,n=(ta/Ht!O(:oW)?Y01e#;q`isAE;,OWIXrZ*HfGYV]0dBp3($<W"Zlq3Wpm8g\n(kF[Y
%70?Mrg)[R.0KH1CFtVEUd44.n2J8kWm;]`i#4;rM$MkJ99%Y=fMrA?r4-K]!LZUl`pl+=b\B55g:hfj`BMVK1CUa-oFkGio^G'e*
%TJf,`W2>t01>mo!r&=6p9K6-XWr*%`F(tJ[<qZH0%/T<NK(<;'6FG[ChP_*B<d=,>2q%^IVR<Eh2+m,oh^STp_DI6IHYOm^nUZSb
%*e<-^2n02Oh8BYP$P#\o@Qi,XH_;MdS^tuAVr^_hE),)8]`Z`kh9B;bIXS6IA=HG]Zj;rqrZEe:%PK>snd8014(<B%"`^ga`gOfQ
%Ph4&-e`sr;(Y^Y&o9C<gqU95I'HJ=qF6]/-:,3%4)Si@\6IuUch[ANHGbm]\Gqo+IiQ!eh2#Ai9eFY@dP_njg:K(nlRi$?UN(7+8
%'`-NF#3-Q/::`E>E&(&V=`KsD2WsAd-%!m;gK`m^K%8h"CXf?Wc^bcOZp#Op9l:K!*OTp"'rgl;0^L#"iLSR1<`FB>rgiBH$4lF@
%hOk$9%sMPbaX0"Ie)'#t.UsTZnM<g+jtKAS;EWh<dm@O0h6o(snTQDP(He8:dUB98Y'iOT4XGesh;PoQ%#%.^%,sf;UQmN@m:njU
%GGGEB5)6RrdQ&gE.L;0`\SdcL;kGMb114E>ES"l5S5U1SIaf:8.9(D:da>>*i8Ih/@e_.YWlHY'SQ;[Ikk1j=l%=1sFdp'YjTaqU
%``-7[rZ5,G_t+(/2$;XloG'hG4i6TT<Z&"r6"]X^F`95qC6G>K>48=)`\jIP;6r>6f%X-9?W*geB_K%#\is/43'NXLd\TEK#gLoZ
%>cPkbMZn@g%Jm<]D4FR.IW0`b(+Va+4.KbIX<9&Wh'q(32Ub_jcfm\D=CG>\h$)NS/CZ4t>-0^f1.AE'MAc7Wb4kqj0C$qJB;LIp
%#%Y_H'g7s98f&2b,L:V[koWn>V.a!m@DP$4(!GQ\$E#n0War;?43usV'#Q.5n+H#,I/1K"3$eVDe-@\Gj)/^;)1>L.N?uu;Aoc=-
%kaM%IeS\IV=e/K-C;s*9i$`>KZWA/5]Y(rTAA@3FKteCH%X&5g'6rKAZf5)QpXd*[%'9X%*KC3#^_.!Z>cZC<c\/g*,a5?Q^7Q@#
%WKOsBWD)ujim/n>S<t3TQ3JqAaPjqBnt`bEe;o@oaJ/L-OgaGoGKSRKb`\&=TO""#8Tf2i/[k6n@5sYj['Rug3]\qIAYk,oXZhE_
%h=F*oPoILg1)MoO/^I5:H+j8%#HhMOH'279cWcrZ1!t<YX.T'FG9G,G*Gsi=fPXK%Y7t/G^9*U5DNJp4d4(<'VJRQPXY7-UbkA\A
%]#2IU5[<=rgLT#32jsBI9r<cQ]BN)BJ[X$=AJI:+4s05pnM82rl[q.<7b*7(;5KQ62><s<m([H**F,8H=QsPUQ0?HF?V+\;_f066
%jj*0$.oYcmjI3*kR!j_>phKP?YOuh/^"4)X)q&W3?1_*%L%1E4UI)@m:NkXAha^J]Sd_WAQLJq"A7s^4e(OM@?^QdFjl"#%Nf<qW
%I^L]d<7FnQe\<%V`pHV2L:^tUJ8(%.Eb;HA=aN+0ml6VKRIDF_h6R/EfSs1X6E/g'DA;fegSk@_KWiuL,t=eZ#Ok!4h;hAacGNJN
%HajpcTZ,]F5Np6aQNnH]dFcm`k0?`_Q_D6<riX+Tn+#h:O,Idl+5U;*^0>pGhUu2k=<BZiS?AB(D`ldgZ*\IoZW/ReD[!>:D?Vt#
%emCXeoYPsf;YfYHMtOor(2e%N0;@40kM<MH@JO^7ABDEj^A>BbIsl155?o9oG9-b/qJ,-35a6RQg,OBSWj9A$2%DNK%j0?E`T#^;
%$*Ho!4V3A0mFs/MLF8kff2!@BLZP@1VcObQ&<BR&*sFUDgL]j)gPrE(]5N7tgpEXnPM0o.EAN"6lJl6J_p.21CfXeYjjX([g%M?:
%Q!pr(=C/R%hHkG)DZUC:YO*u5]Amr'e(\i:^#"4IdbHf&D4ZJ(Cop4AgaUkAb.%&Oa*6DfMP/D8c-Ic0Hgp@H\+3:BkJkM^o^u8L
%@/4CnWPlD`I1.t&f7h2t<m?-%Y^,LSXfdq,]6>#L?7pY/>i33kH@)tQ^AmEAZ^[kn[9E6^rG!p%2(PR2[;A(*L4e'Z0.X0NcfuJ:
%gQ1eU%i50`QRW5a^9Imt>@2f%l2j\aqW?7QWE[!h=a^!Rog.7+lX;:P*t4WVBi*Qh(XH,uWNoQR2LGTi(Z'"^DdBEXdb9(FKgE.S
%4BtupC2C8p]h["1pQaM!RlbCEhek$b5'rcp]^mkfq'b%bI9p0*;uaAe*8g\4ofhZtL*f%jmb_QmnhGA.]]uf*HF.[803CsYoM*#.
%fq3/r-pOZ5h:]NIpgLsO!qqDq>RN1d1tM2h4!+Eg`CJZul*%M(>L/N(RnHsm&oGp@B*U!_S[J7VdFOIZIXL]?<V6"Dg1pTPbKkPm
%AW9"5mY3B.T[^t;=bTYO$MM?SI9*B,EQl2&;*O!q?#C&mHbkKqCTV\\rjl3L5'['DX'32`CEkffr@6[9rU+fBGB78tgcT7u>Q=D2
%jTK6T]_@1O8V_a#l6!Hpm):n&hRh5(G5:IYUWqBAi5'07F8KKpZ[(G_5()uK%/9'N72R%mlT?if<pi300&N]o:O5P'FYX,f$&n`"
%=,W-s<50_RH5&ctp!pt-T;BG<U[_mTN6XjT+U6u_i.b'N!&J;4PJ(/+oq?j3`;-_4\86$^[I/&s=SoD4>m;7Y^U1MuMa*]kV0=O5
%>VR(Pq)gh]Nd3jof&3]W<d@S(H=h61=^16rIbA%@4ti5'[DNO#]j%,\P+(St&rcSF`qI9?rk6S*@/k%YYu9@Xp'UELI?-IZK<70j
%e9.-aSNG3.S+eg:::Gu:C@1\C.K&,:290.oC&<mer6H`pb=fl12(\9#j7t%KPR_'M(W"ceMTZs(pLdHRGu7Q/anr:KP@r(DS1!0O
%8b3heD;X)`YAT^*&'j10-XYNL8#g:MY$,mnX6bT\_=I"5mX'ibdl0pi[J\rUs8L$i;8'<`m_7qN%Su!<!ZfT'V1S]t;X^HgI:kS<
%=P@\bh?C/[G;b&lb%^-%n!0AdT*A-LhJ(s^\)+cE.QfaG4TBNeDQfZpI)l0`Qh%D*qR6%mG&=1E]2REJr7I%D[[5UUG>mf/UJV2@
%c`FO6Z\<jDHgQ['J6`&.rVKUM/[2Z+f54a4j/n#jhqkAua7q/@k_2lY!YoMk9GE;s/?\CLS)D%s2uO24h#:D:q!r5WrG,[7ZG-$S
%ZNs"6]E*LY\[,^o(a#"Q`eU/^.kf+o)BbUD6#G^Y11YX(5'Xj9G^$J5L<lnZX_4DildkZ]c5->Q^0s16l_W[oZhFu?q"=%e@+BCY
%fd@_DK$iMNePu,8_TA[:r!L4,`I!G<.P;PN7>\JP2O&R$&&5iEP9O`"IS(h8a@]l0S>K4CFeJ"mM.^JoEa#$0:98VD$WM`,,VA+-
%=gd[7*$eXdNOOhp0QFFcA>N#Ob$*L\TJ($(a2^aKfk>R=9"fZ^s7f^5]ug'd5-Km)>^M/c+mIDcG@(\/T1c2*)3$g`o_;a70T;,j
%1sV(.U;*A$C&*gN6s"(cP*AoFRMZJm+%ACrM6,:h)&D(`jHi]2r`/hsAfH,61<ebug\>`_K%m-gA[9)G+#j_[?V,<aB8@TpX_*:/
%IcUcc>+PA\l85j++I!L2*I;kTCeYiGnWCi6oHgU-*[UDI%@KDe8bXs)8U9M.C<E>.PDQPiJ5);MI8.b:'t@q$:Gj'IlgL"V+\S#o
%YCr)7Gd@-4`lNo]D/dp;HqlKkHbll[`LFdaP-joM?[>Cj^NB85H$=W6DW;<!J>RtNO1<\neaoTBrT2#qQ0fObMelP&)TO@jL]E`Z
%5s/(0>CV"kouUh3o?mD8mHiSuA8O[gL-OD8:3UY.ZM9``4"OUb1EKlQo#^I9a%8t7[r_!k[HM?#R!!KKc/"(uo5qYFU&=ia[gh,g
%NMAsW^K]Q#5PR?#B#/>2]jp@bM`eCLH"j[Ies='epWUB9q"*?486"L=[q\Qk%lT"cB,RP3p;ZVo\T*,bW=$1\!;1.JX1h0#ZbN5?
%Phk<>!qKEY!6=Ko?8DoB-5=,a5]""*i5P\&,uu`95X?siJ,#Gm,tI+7"/qhc??0R/+rli%]$)(Z,h?.Rr:s#t0N#GAGaaZ1le?&d
%f_"Ub#*3_'="./$0(Ilq[`GtMr`+E]&_mPEHcI)/ej&$KG]io4Lkj.(ZR9oeF;7PN\Fi&nSeoR3?c/o/3L4ooc:`qce9r7LBibd;
%]<@iZfu#X@CfJq1/*BI7oMH1TQh0.W7QWU*aE%HV;<bo-<?&R3-YKn-0[F(-Z0dSjr)t"%l2Q#Ka,@"T93lH^,DTF6Rl[#dV1\L<
%,)Dk=ZYTH!GFeEY2rZZb4hT[&r]9YJC^rEHc>INkrcM]SC4(+K9]/h])I-fZ@,pUm+s\Xb9i"NK'p^e+hDfQthGA]`2K,_I4)Klb
%eMAe@%Q:cI[f.aK/`HEd:\SdFDfs*:H9/Oq:6aD_d]E`rUTddE[de*NIF#Iu^@O+^lM1>Fd]8]>DcfUarp]W^Rs&lANYS.FO8#_J
%^Y!ujghdH.C,%j\p0UN'1t".gf*?rWfA=Z.[uWPeWqCW0$VLIYX_,5VK9Yiu2kFo3isj1<H9Jp7NPif_V0M\/ZM_V6pT<'t-/%#'
%de_nJB2?#*hcoZeFhNJ3BW9jBj_B9lqrlmr;q=unII6fNGQ$p0`B,TJM[(h9%HFYIgl\e3f]m^m>^eT@s!>([8\;O<odD7=B<nBd
%h_]M.dN-%Ini`IV1YGe*PikhP<"h0L+^=:j2d=1#^pbDO5=/2Ooki/SR:A/Ul$[[V(3;3i?2Mb+o/88-@Ri@`1,!V8rSFLFr4QB3
%`q&*[Qh>C4'/'Y*>keu\q8ZN]oBFM1EE_edGZ7?p%$KGT[h&G&`g8cH[&]ed4kOEapME`Qd,hM<cm5,7?Up`sN]uA"#h;/MZ2SV#
%o7C5a:8RW7%h<L5L<bU!fG\k;Fo:/b993o!s8L)<r,`7KS?MuCI/BXfTWdNMd;[@dC2A=T4[+IRAX3(_k.RnNU@hU0>DQX;.sr9^
%nNk=dhHXE7r;'06VpkLPiP0Y>/A8X0G>d-Z>hir_k4Y!7iPq9k+5d,G=^W:7..;Pbgh.5?4tcuOHL66_IWThtf"q(-brbC;:$AmB
%G'%N!r+t?K!Y9R@(Z=8kamCmgN;1`Lk,j87K%5KbFapp/GX#m$oo>#5s(LHaqO:]aOef.q0V@,+7[7hV'Q3]$`F\FTGAgSF+.oX2
%3olIIpN9hjD)PI!G@/%6=Dt1G?%2hG51MWpSA,=dX.O\[s#R@5S,;0fg?Ph<A@:t'hAP3p>BtM"g=f`qIB^O^qKD,=hu<8D1V/(&
%Q2<&%c%I\)*5^G#i\Us[*XD/*Cqe\Po@PaYo\%:C`^^<6^[8p0YCAoJA#d[$64^hB<s%pT-c@tY@A5prJqr+<T!"@5'jh-cks0^3
%H)'.WpsRo5rHZQkqt>2+h+'Oib)lDN0\b@Leb\fojo`6&]<_*WI<D<G_t(0PCCBH\j`o!3oQhta<.A%g`a9d'I;"T-(gS&0*S`f2
%=Q&fJ;X\`%53k&]A7QCns7J$FIAk`W*FpX\*X46.-1P,Pl`_)Cq`LH4.Q:]Dfclu3NO6DqDf0KZ5+QM.Y+P&F^%Kb/.E)hC8p$3D
%rNGO*%X4r-CZQ/.%f#.TJ$,ufD4I[trP9*'as:Z/S9t#+G_%I6S`Xd)'*%3"et06UF;>sP:S+lbk1b[ApN!WGn=!QK[`/7RCujoQ
%of(.50iJ!!GW%/jpZp#g.keZ/Tu\8RE>\Vah;(aHh8jm=XlQ]V&K;`m&%*RjgO=+qq#!R&GJh<]noT(\Ien=L/2&#^Dlqj-Fo+$u
%jSNj7S_Zg8UsZjO':,u2%m5AG[26XCH++rO4+'kB*Y';7[$i!l'mGD)^-&s>IH1/"i9'3"\_.o9$+l1**BgsR*Y,m<hJ>B!eMIp7
%%>u&i[XFWu?JDsGI;N,IIs,"Eo&t6!if5uhG&D)64q+:Eea8']qHK89rl)Oh]5hEK1J9"5M^h5]O,;Zh$hkipYkf,eV'fVC]Cpse
%g%aU6osI<gRs7hgkQlXf+/"Y$L.`V?8$BV.P/$qm'lt6N6,Q@cWd`fJ%`q0)cg=>KX6+VWHF\9]kc_UpnDM8DN5PP+;QnSTaIn+@
%Ii`1c=Fd'e3a$a5kec&"GiqQ!.B?U$3]:+S5jmB2,FHc3h3-k^hL5X*ou5Xb]c[%2or%b,U@;'A"aWID9i'WL\,#&S&TTEdI.lM:
%l6'2`5&I[EoijQ-80<Wlm)_Y?J';0<rlT8&D'7SjpF9K3]k;2hg\icpSrYE3/`k#Wa4AsM*8dYDKB*Q>G.#/XC#!50H`YYEY;.R\
%m=)*o!:"AOX0&K_SEA*tmEa](A3)XRgKW));_nLNp2n'de*5CpkKY*hm_8rU6mA@W(Z<';ML<2WbrL?plJ&G[h7JTlLS'pZ/,/62
%bfAnUJ9ngu;$2egJ%NGGhS+aIFApp[p&noIq:k&TXnW92?ksgn5K(]A1=sWOol/m?^%X(1H24+UF(Hq_F[`:sU\9<?*+mQ(&)Wpo
%Q(fYD&UTVR]Y3fNq9>f8\hdT.XPE&*X7u'kl:9_m4M9_rqJiX2]?YCF3prW5'nX'T&$N!/+UIF;X3GWo?om<(rUL%9+eLK1b@/"&
%hsC+<K(4K\mI_,Hp4MmDIC^:$4>Z+__6S_1?peiQ#ZB5[PRa#1@;J^,G;U:VUKb.rT1>_k\bIN['a)@p@"%;u2S?AB4a?Spe!hb5
%]_Q[@oOIhqQ@f(G^@o_J>^l["m8*Q5fb@q9g33/7f)"[0f+=(!Y8/^&l!"UereE:3L7A.iIbT@Q\`E%fp#3T.J!Q]kF2@]kDY,CH
%.LlLGI0^@E`a-#iGAqWp@JRhPr`iYGs4%GtICm5tC!urugM>QOe0q/sP&<n%VpqURe!sq:cJlb7nBWjSMuYa2Zl'q7HYY03n)*uS
%XEI!5lLiliMGq4'\'\Nj&"gN3n?*./1YP\&In>chT9%%I?TsHFfa3\N4F(,u/ff7c0^sTsr!pbX7%+XPhnnTl?79rW:PR<DBdu>/
%*PO"tEuUS)2\=Si*^_$`^C;g`eQDc-[C!E>_q3k@lG!%0rG)QThg)8>F0_D:neTfX^,7HECG5Qu,F/#T`ne&?o)7-lg=k!Pk8U72
%BntrbdpfH<ZW>(;=hQHm-k6-`+NE-6Q$/caA^=XXhQremZoYns'@r&\a49J0hH-$&51o^XH[@:2[C/964+.RPBDF\fr_)a,pZ'lT
%fi5E[b#H*'Dm\6QWWi.pN>M?W[DM@WX$rVaS(lT!+;T4,I2B!]eq^BhpX.*;pXWV>-IDV%FAb.N&+9b\Sl[!uKFE/-ZEH,i-^7g&
%5@jBJGie:#q,?VX9k8->&PrF8%I.KgE*mIRY1K#`471;%7MoMnYPu,D^$pCo@Ulb=@B#$n5heR8UlT2o*7`q-52>^oS(+B$Y[HI)
%SaUZYc'/_nhgXOPZtn4brL&qQlBe\IV=*@_HeVmC4umFWr)J2hUM6\7$KXdM=*Jh[mKY92?6;OM)V\um#R6XlNFs$]+D10$4^e$m
%n+-c72a?Cb[H,@uMd%hMA!h\&9/)\BLKh/V:I3Os48iCRl`H5Wifgi&PD6Y3AUF9mc_\P.g5+;Ms#j9#r:KT)AU`0$Y/>o#+*ZH+
%0n2Qj2^nUFCX;'eFa!=pYIo9/D\>(n0Jogo.sitMG3d\pH*;u0[>0B8k63s'StkXYoq\jf]dYk9\qfI`V59I5^aJHoX2TPJ"BRRX
%+*c2XoPLAOi7qDW[!M)6=0r_Q:E.2@TfQj$7]254q>thKfGLlOI#!E*:)i$+Ykg9thJ0O8`r@*H'3;p*ROD-jm#UG%W43tG=Em!i
%MW(2F6r$\Y]f.S9gE>59()li]q[9SsU@b88l5!RZ7';&6DlE`T;F)+f<#G:qU0=>=i[<K]Km#>9qp)?"WV65V<\:jQ@lUW^Z3p&B
%bP[''V(?%Mq4Iu5;!VFd<N%c+N4W`hb3WSlbmWh?c*]j<5NP$p0dtf,iTP.=pe@gZ:Q?#_AkB%MQD:NDJ=WGNr'$/Nm=iR(floE+
%*lW%$;'eB^'C!+PkIr&cWplb7mF=r:]hY=2SXeJ[R<a7MSA+5,298h,'!p;np608q>*C>l%8@YKas+0EP$;;G9decE?LhhCo7D<P
%0LPArTpMf-2V%,HcWf3S?*8<:WA`r\=%AP@pVpTu/'3(qa8&2s[!B"0Xn.mqGO!QK<jO)ZQEeaVqh+Dn31]GCGI5]Yl1me.jo-"8
%&#L6@+cH[fH(LpF';Kj04&p;*o'6gp@3iZVs3hpWW<L1Z1(7"0;GDcaG!e[^\G,_3lcYeg3K8fBSe.;pH;i&,?U9pj:#7pp]K7h/
%$5CnJ]_.clX\Dh*D;Lr;/p,KgpEj0^\2L4u4dRUT,8p&`=5<!%3'?Y7@5c^"RE<"VL68&$?B!Rfq<kYZ3Y*n)hPOY)FIl4'1O#a$
%K>kY`WXH?qiLDYU3\UZ^[uDj*`+KJ`lB&"(#-;gp**3O\')LD+D5O7Pe6DZ,4p;klL:$OmT2%1Ncl(tnmPS537f:@;8o1"-[6$Zq
%gTBlg0BOKu.";/q`Oa#j[*FTV+R\AD4#Ch"aUUY$mQ3hg*p0^6f&>.Vj7%0G3UTpPm<kToqH9'OqC7qX;*q,b#qZi^QBk75E#QtY
%h^0lDT6h-mWN.g&P?meu)<2)O\(N]:fF*%UT^SiK0IurINLbO9LA`oe$ap]`*8cO$nJPLjro63N]QD!(=/^4diXP$8h*1d`V[SE,
%;YgYk-i(As"N=`k/'V0bO4[NLpuc_TrPL*^lC[[ET%m]*nZ8r3HbN]TmPB#KYL!=;lk3\R7USZ9Yhm1!ct/RY-UCJ>RFM[Zj2UG$
%4B<Hsm#sb:BR+U=J,!'c^VWp.@a!o+))?]G-9Ft-N5?.k;02jujGet)p-k]@@MOjT2Z(9#YF1WO0I>IIlPN$=^ci0+%.)UVfZ/sQ
%W4'sb*TT;jmBNi$3DSf6e.5kegFZUC(D\"&k]q'a.dL2&d?!9X@MOP^-1!U33$r/b%*:D19g+RBC,_)'QW;[t>]u[+`Q#h&fFL49
%67X1-,kZh*HdEhM`TnBX4k<,j?XUD36C,KM/Ca:a+9.0*$hk"shBor%3AKhRbB%P"*@BAEq:&ljTuG8$ZpUc=s1uH'`G02/IaN;3
%lB,#(@ja!^fI;Q@CJ1a\0\7uS+J3&@/;58#->P1);<6sm@./QCP9^^f-NjasAFPL2:behd/@Po@m,OfQdkmr-'P>^B[9Lkd1n(B,
%"`CEjU_m,]A1>`u$&YnKKc1C;/.A4Q<+;<=<0kB0)R)"^%Lef)(^G&Ze"dg].:amOU^;p@Y8`niGVH`MSOR"Ub#F\DF;ek?2RibT
%A?[d]&6j2qJ2%<\Q)65dN6GEP8rQj78MHr<L_A&;8SWgD7@Gk^/4!!E.SX=uP;#=o.CEQS.0ZtW+\cAY9W9%I9YuTC-37jb;eZRp
%R=m$S9W9&u9IYe*$>Bj:?qROu@hPZ?0aU\*RS$MG_$"*#K9`#'E[QeI[WX]o)aPl`nIGuDs+SB%^+-Zgd>chDJYh%RLk@AR@F5Q)
%KiJ["]3m,1U+Sh?#YCm$I1fue6qCdlLrk5$!8S+M<KPk-!-,4D$YTZTOoYp[$Dm@WqpQ%kK/g;:9p2$HVA(CD]pa2F:F"Mdn+s31
%ep5TN4Ic#;k=*,2iY<u(,5s_s08q"l+FYRF!9+jT)SH/[1%7?4!>9LJ$fY8^n5Pn\[0@bcJ.Tltq8Y*ta)^tTL(NhE%M/L\)$KO9
%%TPC`9uBkF^Ymcsp,Pia=\2$g8@)[YdGpi-X$jJYY]"(;@24"fLc[cYO[C,i^DF0%:InLlD8L\<f]Q7RU=f,OCP\Nl\p9DWZC9Na
%`0jd'XE)&OO`[U*>ZEY\$4t`%OqacpP;6JMg]FN0OP*[UIt[<@M&Ehis+hbc+,_:/G!+TA$1-Z#$qVd'4u_`C7ZuJ^*UmrjA"TT:
%i6a[NJ^gsC4Pb"@Dn3_%=`2H##me@VP%I"!A+B)s4J+!b0Wee7$7/YKO:roH:.<<","PD"J0%BGSqgJ8K<5acFDDH"6/qHCk4$M_
%(@r6AZ;CT;T@D6j,P2&>OstLh)O[%I3W"m_q>jCh>b;rejBs_22!D9AAfg8,Sk"Yf\g[<)2)GMI`)W=<T<)HN7R287YpgX;6<NqW
%RtAfk7Tp`T:oe_?MP(:a0`q1l[K*ig)[9Qh'Y87S9O5EW)I/b#*=f4t5u1K9'dTGFY_STm/)5pdrbcLo&J2*b+ubAV#'0dh(0bZq
%,ua#Z2)7&f11TeRAq>\C`CY6JL-giLrqE;JH#+=&g]l)YE(BX3!l@r4"UXBO=9DMFZ9@*D-AO3Y-WAX#ZNhS`3"32e'(eR<;aCJr
%YXSJ/Q5%8+#btgO6,[>e$E1XVZgYoG&um?.B!J>[+X'BA8<A%8i.b[G$#;VbQ1V0D-S_(U`#deL%7CmMZ-V-N]Q-2H"<i^1$c21k
%Dh.ZogGVl)77#j]4ih\)PR8$7&qnF'6.(SBhAg"o+J=d<L(qMi;F(@>(gqG;7rLa#+b?O+'G+<3$5/HG&6P%J8%utSZR?dYk5\C+
%KF#ZGmM9*[e$K?Td<5SnTRa8X<02V=#"T%_D$U3/$J7C*$=Re.ga$@-O!&oGo`bP81JQJn6<IGA83f5R0:74$Gn-Eo.=rlg<7-\q
%#gY=7P&cb3B]MI2a*+uF'*)uAN%]9]c%'>'@MOR49TJ.`@oAW0OR1<<ps:Z`/5`i![cX.+C'^ukE=c/:QlQl.#Zs&5A17r/64H9t
%jabt7BL8Y.'^.@T_^^?kL$:E+gZbsP)@05hf:W]m;CQ0+bb0N03b7!%LaKEc;%SFb;2J_H6C,K1RYaau+1?L()sMW!5#SEk$_5bY
%!WRli(0R6GIbAH<b$bJXfMP%VdH-Doe9i&Dnd7^FJ949n4%2[DD9NQtrN/=8-m5TD'dOoS_.VL63eLM@+^WY8;@'<r"UW7X#U*/W
%c[QKn;"S8mM&B1sX%NU&88#.Y(6$q,7KLoLmHPB7K_.i-$8Y6nY`qCgLMa<@Ro$/H`&*aY/;9KKIaR`R8>fnn@\,lL@[bG=QGS+(
%$7+es>(U/QWE"WMMcs[kBaQq7kn2$f%=s#EEWFk'XCV@^pK]_GSrrq(?OIttZ%D%AJ0-%C,(qqnp(18%=9OPgT5;3W!p2g3?\ec,
%BHk<T-4(E1/K0NiQ=/UQ9GS6>1Lbj>2+Wo>d^'bn(,:!a8_4=(GPT-X=>r*.P6=)`fJFA?4d.E'IK7Ilr!E?mK<QW2r\.m/lNdpO
%^"?(J_5TgdBFEM1mU/SLo[l-L,R,h)dn@'QCrQMX03NK1Ue(cP=%+0eL$Y4X,n(ATg0qTnahQf56UX-QL)(5,;Gl/1'uJ,3N;DK\
%3bI20$:6OOoE53RrZZYGKs4rG7KeB7Or3X%_Lec[&.l-%_@d$*"GL+p&@R$sNhd4%9P5=GiH\#=hA!hYW@oA:lnJd\P!W8)m/[8T
%<gGCCSqqs%_,&@4jN1+!CBr`UEC6(2;E.F_>@H1ckUN5Q9^1C@gNSh$U!*^_k[kHuOZf+oi(rJ;e/CUAAe10h5I9MKcZc*l;'"BY
%#j]]@WIA,#RS."Ck09JZ=sjpjkqD<i@u>JD7mOSBlim7;FeZG+GA,iLB;Teq&O62f:,I?9L\ArFs3?WtIU+=iJPM!_c!F\_:*d]R
%-5$9"kV+H43Rf5b,+A?c,A"$b*I9jqWgOn!kp'cZ"W]XM+C^;r3:N9f_F.ebTm<sh+DmL%0_H4kP7aa)KQBPsRN;D,\kY*Bkmks2
%e;fEtM<LJ`q"`mqfX>8_'WAg=L4i<lAA\`76:)VoaXIsJ:t`9>&eh")8Sq%9@F[$N!<c2);"X/I/35kM!^0`V6KlE;3DV<5Zs8<H
%'a&Q/Zk^Hi@K\u'_6_h:oV@T^6aaBJkSi?V0aGS2+K_Q8n#$g52S:*@&j-LMV"M5"dt$h8':;g5?(2Z7dCYbk`AEQ<Hd3CgR)WV!
%'/ZFMGd%>e'dGrYFnB*O"g1mA4SXZ6PepiV:taE%>!kd<5[YX%[T71#`JJrA+Bd#_Np'OMI6V7P@F9]FWqS-A%T[-4ROT]B,;Ebh
%An%$9or2Q#(oB4ar;s;_)ONG:nRB2V$)AG<g11Q>\n85US&DDp+A>_%c;Y-<Z^7-BI'54TL9V]`hD*hje(e8e@2^:^@HKhe&4m"U
%DU2Y:[Fc..CsT+$?Wnt5m#Tf%WAg"_eupKD85(hH<$-gf\i8"\ij6+'/C!bm.)T7#/gZ3._:2%RR'uW\/i1Z7&X]FK0lI-A,_^@S
%QmS8j,)'a:_Med0bDKFu@9?QV$j+mgdt+;K9i`)8JbcA`_a'\Q(dh?_KXPf.K(gY+QS_:r979lK7T)qOY<J%NY.eFC(m:-oLr,7T
%FC#Z9AVK$;0J&^)>QVd*@]?7Z/1SL>$H'.n5bTk_S&R>hKI'(68RY.h`2a#o,c*`&0J"]$3J!m;5\\CUVHJVW1($s&_93:2L1s<M
%C_K)mT(jKF-SRZ>W6$A&1aFRf.KVCRi(rNW'1:6j(dVW$W<&M/kiNt/U,0>"e'%Gq6:<1^`aErQ?DDjkE_n-=ro[0XF(+I_?Bt5u
%=lK4\[g&D'P>rdKie\)\X>^VMYe<p5L[\2pq]X`/-IH:4.ZGeG]SZQG9"'6#(lZNAk@pAB&:rCm\bg<L#:%.*("IVib%2rA<%;D/
%dc5&2'\S&8ApBMd))s_/9TN@KW>1b'8LITp-F'eM`(XYaU',6,T*uAeM)I';joLVD&P;!C(;nI%\/q!sl=gGtL&".74qZoV.f2+j
%3\?];K11KM<9Q7Y+uU#aZKhuQMMHpYUT$tla_^oga32POE"02UUG=8J6^l5pVX5C7m*qQ?HUI3Ar"@14BAZV1_'eu\aGhBihf9o2
%_>?o0*^o'OA1f[+oDGCqQoQ_c#gG,\S=%NC-Ze8od:_0f)n#f_n!Ma-,/sV$pYaVaR5U=m;jm>i7c$Pm@U$'h'+\OW8_^A@[LXap
%)1Rd>Rn:(i;f$t`.RbZHP=^.6LJZaFP?VdDa(9A6O.Z?6q'.u&krW?!NnSTuhOI5M.mL<OB^"hoo`ir^KG,Q=?`E^P>).p4JI4$.
%W/lfGM(kET`i2puap=sU?Y\VOb"jD6=>I!$Z4ADbU]Nt7L*K#J.X7V<%)U&Kqd7iPUo#]N9/:4pPa+1)CrY?#2kj&#5\gD.UJ!aX
%Uk3e7OX0Kl.VGYWHYS1eHAXt)7ni8*OO%43N0/E?8>S]'UHS/ccK);_I3a8ms"d\7m%L>Zl/[:Q'bsWo,8'?B=i'nE#psiq<PM4S
%'R9U%BHl6)_@gn:VA=C@OU\^&58e6Ih"boO29'+o`j1MddY!nQ>lpA+Rh4ScQkJslk+0d$+\?*7oI"JeHJ8`K1(d`dl#q\jLUR2@
%6=<YF%c'C/<$FtD8lf2ekLin#gd;=1d^&ZZ2@/Zggq_n;^]l^/-\_>XeC@?4is:$Um`H9Y0X)O(@]>LDluj5J?9s]ZC8,3m^<$s/
%o0ZiH%:*\[*]Tl>>QZPL^e[P'P.ZA]3UFbQ#[3h4T,'b+KRU"4VEWNt5Pm'M(kUkTduo<cK/*&Q*3298."K<6<D@nYgj]073kN]a
%N:e)ebX;o*/;7dqb^*]#9]2P'iP?W+F4&ouiZMNl?'aER],";GJhcuK,YDu@9LT7Y8cJ(_5):@5ce!&PoTGjAil2\L2&;>hVVg/'
%'8A!on4qk'n";j02j[53PkJk%!@bkI:L4>O0!'U6B4kcN-"o`64nTFa77"H#`3hLXY,$73:):bjDN[9o`18aJh!^snU_g-UJe5rF
%F#8I__V-?>@kfedlK'<98AD\4"R.9d;E<o,&tQk(0@^F7-jYBT<YYXDFf?Ja)%:sKnf;(I!13%"VcY64$=S(V+9<>gid)9V&0tKG
%Qm%0f3oUbd6W_.?DX_Ts]pH[N,D]e!"qr.N5R)kNQ:!BOm#As!`<?EueIe-l(qNTLET[I6&9h\.#3+L!F7-6Y)-EaJBYEK33so8q
%.K[KP;F(B4)16TjR;ZjL+;6h_0;T4X-Nj`HB0c!<D[.<oS(N.&Z&aCM7.U+aBg2-re.6DA5g'tK(-!kbLS'Tlgg@$4%htlm?Ubm/
%h&c0O(FV)+cdit5I:c[LmL)u!!O4/FD,7;L9TXe1/'h9)bDUW<P&"u`#;l%qhHVSnfBTmY]B+eB@FWnApGD4/j\UYI!`:sV=)*3d
%[?JB?1Sg,X@!g"$S4MH=U]`E)<<Ntq1kl^EBV_fs(tqYOM<XkRFt?nMc_64#q0)<g&d]24&4?pX6\ug*1C0qR6(sS1_B;,G&qZJo
%@eWf9":7uRO=3_qIj@KKW>nq\Z<J/^9n*N7"BLU@*bh*oPTXQDOu*h.UejK)FaW!p.7ad1$l42p95!0Z7>!]]ndT^E,QsU#F1akd
%!X/%?4ETaO5XKEF]=?2kMo(1gTbHt./8^1(#L#>d+a8JI]2X;@)c-Gl\H4BS?[H9!(YaBO&.&dAh2RVV^Dnc707_!.QVZMmG<HI'
%o%;DWT5B%]bC1VlpVDFFTZ_6:8Y5Xc<g5/V,RDR2W(eHmLL$qu;ikZbKkR%`ire0J6bYC1EQ#&epOal)rSp5U_gBTB9:Yg1pY/(l
%3uCAVjKZBg0;^I';r;#oWCp^!OeU;18F'Mq(jO4Ea1'^rgL813f2u![ZR_L>c(^olF3OQE1tegM-`_Ah02P\8g(.b.PX,p,93]3-
%ThsQ;oKG!%P6&a#hc/`)pr:Wi6+0pTgr'6*&GbleitAG,@$oa8>LCA\:l54PrA$9sn/IUE\)SRn8512C/Pgr^W8$\03PB<X)_Ea/
%;^^fC;=F^@(%]ZX2i[t]V#"-MnJe)DBT79j47$EASqY?^QfJBi#.lNQ8o+johIH[TC)JcQ'!,bS>_Ml'!MqW,.H)V.*Ho>o8X+ff
%Oe:E.Ua`,o-&d\^&6A_]+;1>B`&<*mU\4hFKJarUmb%NE:6^>KOTcV%m-:u+0dVd7@[M]10h/-??oebOHEe]#jWoRk0oHEOmcghc
%(hSUJ0X*.2h@ub2&OusS)1-iOEsPJ"YTYiZ[6YoX,`+ND#[@dj()Z1iK#H,IK`n1s&I7'Bp+3n\"K$1km.qj<dZY6*`#KiB=2Tt#
%L,hRA$L.s)84b"c+GN_.Y[E#r*)=oPF^$.7,`+Oo`'n>ZSoPb_K.&ZtZq=8YP/J>V621$i+u"uY<l6TtC8E<Z.7qJ:qs76G3etL)
%LC\hsN&?;'Ua.Z"$Y&Kok=@=eK=r'AC6P*<PU,7="XpZ-SO6eP!u=a9Uc!i?Ua.Z"/Cde&pQ`NN%Mq6iV^j#8-&FV:JDCR9[mOPj
%_i;GF\Q\/pOHRO%Hj@sT826)+iX?T^@>+i[,b)oMms8$1YDb*K$oHO:7KoMd:l1C/^,AS'09/p^?5s[r=pUBs$8e&=Kqn<<EM<&&
%JS6W7iZtJ+O93HqUsP!c8B$7J6`$"INC?a^BU+fMBU+f!=q[Y_L$@p!JFPrT<8rU0d\'T;W['9.WK])?.jYX..j]oc7O^u=qJ%He
%]Nbf/Ge'%qBPit`$-ZL*-&bku8V:&;M4s$.b#4V@AdTA.RR/<,1aNT7+f.d41R:`AUNKM`TQO1BBT\Ob'W/((&k5Nl</Ho9M4o&i
%b#4V@GR>:kSjF`04XGiK8h!DAqYDXL["(c6BE=A8=tQR%L$;7/JFOO-<8oc7@VETBZ4s1>U(Tr=W)SV>;2Lu(;p&"*^5r[=YG=K2
%?:cGtQ;&f$@JX.W@C2CoQ"Vn;(g8qr/;<?3.=6C.G`Io">3r2iB-`oY6n>/J-UE/@Q+3,q$FO'?.CmgJWROh=Z(*9`VjihWVje;e
%/#O"-6%(a.\<_-3>.';f180t3.4%5h3L)9n3X$*j3X(8(:+8hEqJn&n/alA5C3c_M5te+T8RTPY.Uein$6#F\$4JMW;O52lj]'$!
%p6hr1Z;3c=Q;4EB^l7AS_DhQ21cPLN(g8ts/;<?3WIVAr1f^O:TRmA"SPgbb)9]"4E>g<?E#L2[ZueoC$Ib>?$0+]YW5P+&^sLLY
%ALU;[:'I^FUT$j;)&3ul3i+B]l-$&ZEBYjOid=^5B^(be'W*O]!nL8t<2GnD$4JMW;O52lj]')V.hsOR<[of1F@o[Ce!Eu6CPcc*
%;G0[eL6bR`94@[;.Uej:$C*S0'c:+8V(@=7bNVfmP>b6j>V!AaRQjdc%jqK^d6P(bYJa"/M'oL(peg+Wm;C[`*1MH+cLKS/%K>QW
%Ck8'?GWd):*peH?p?9>QP#&f+ljA^(iNC\h89#9l*^0"Nr#G\b3t%bj^-1r^;4LV7NS,[mZ5u.(a[]gha#0rYk<0!d%h;N0$<*\C
%VMlm]N!#dc2i)=p+eTp&@]:HXM>T=N%Nj7GIL%4'r8dH3Sf?<:ImTKL/s4goH<*HU<H6\*EV?JgI0Vi/(L2Nbo9=&$=FNYJ6FK5E
%;cCpO@@>.m!n1,gaZErGL1s>0'tN!#[Lm:3!lHM(c<r)o0hc*B'6-#/l?]CQR_Z."k#!^g`\<CO:Y6:20<XF&A&Ad7=oA&JDl6IB
%^p$F0<_OQ:RQU"j4=@H0CmTn:=Dm\h/3@6p9j&?ZqDA#1Ho6t`Q,Hp0A(-1Lo^M\S5T$TGliAMU!eKHA#Ytq4mVKq@+P`*b-R]Dr
%:1d<"jNK@5f>/:B$(lY!.W@oef3S"X!MSp*H8U!8'Cn;Q0-?e1?A`0H,or>!^qfQ)L>'KlRQhE\i3>f3L:*kFf#NGf+D1S*^=9++
%+lY=2/7-G?%)ODucr*P98JjKCjNV%PMN=nhATXsG'W,&u;,_a\`/C=$r!UEIAaqQ70U,>R&U"R1-@R3t2>Sf/:Xf(![@0u\4?7N5
%GU2J)I9q,:*EI1t+G._Q%fnpD'_%kbag^1TIqWspY6*)D4NBq8KE"/#)9eqZPI1NS`@/0/9O"\IQV+tC]#BaQUrG5?VQ$AWb/krK
%6Jnt&0sa`JXN"2HT<&dX8\]$(N,YJS&QZD:d;`Y7dqUo]Idg0dS^7b(:a<q9PuRN5)-0GpqfP8=2QDtkGcLJ$[A#_H(Cco?l^d>Z
%EE.m10bb@<9u^!CqS^_uO^9C[,)!&I:Cgl/?s8=Z7ZP5skY/E[<ir;qRVY)dqd21%^0M0#l\2jG!lMF?+s/R,1A$FEgPDF_),[gQ
%.?s/HR+<FEdJ,@53g6\0<@b)5-6#b2Ie"&D`SZ"(#OU0q!2AOQXF\DfSQ`I?o,S$BI];3!TuZmUXsIOj3Z+WD2Cb(:i^G>d,aVDD
%25/Sf,&O.R4((A4g,+P)(F$mk9Z?[1IU(7k/MAgn0CjPjC*+:TbnDOl52!jbiLi'::0+JFB1sm'6mbS&/^d!_DNm[pWQ@Ps/N(#:
%/;_F`M,F&)j6biVD.G_'Pe9oY7:DA/q&Vc'C;KqGYM5rMJ3<>cLB2aC.IkRF%2d93'WZ(2MnLM$qZs<;.*N,N#h)_r;?Mn&%8Ha*
%#J)1d*.q(^3aj#/a%T)_M.-q9JcN,5q2hrGK:VMLYRVUj[d1rilt;fTi9bbM`GUE>SJ<L)ZI)1(m_iRY(%k%R)LW;T_U.Wo)H@]E
%HKY)mT)'=WP+k!Gj<e*C7ebB1d\%,.'>`IbNA4#@M@Kj0-o;j*!D;lmZ\"03P[q+?o(kcd,VL3he+N*=K\0MHCh1KKE0m-'::G)m
%SL!PB/_)mgh`,oJUUOC"GaO^")FYQhU*%1h!ahuAZ9(iKa#42<Wi;:&B[e/8g[sjN[m:;Q[Mr!R8ee=,)JIVGoS_WB!eV&sQ0V3_
%QU3R[;?MmsKJ$K.*Kq#HF6H(?T1#qrWIP+G2YMRJfJDa,;oGqP'M#+!=_aU,K@",[_?L[,@54.J+%!5IV1D*16?^V2(E%mB=U`RC
%8#W:gC7nFF:5I$/-U"OlqBV<(2@1C^IIK.C2QJ[].+4b_6B+f:2iUY-RVJgQ7L_[E=`ctbh/ku?@b"'QNLGN0Z=no3\nQg)ePo0N
%1hmSZl([d+l)+&D'Pj!A8C1l\P=;71dnQT9W2<^4TM^><:)9Bs9K/M=U0+hO5bf["Qn0/LS8K7=68d:k"-)T!4AC^m39G3?A@q3a
%E0fC,aYOHoh6j!ErJU<n5qcG&/5CAJeXsNt*r(<#qC<,4BhFsdc1O<npt_Gkbm@jnlpkBDB&S3_dlNs]qXi:CcSL_D9'Zk^DhY\:
%kmecYpk`0F'K8B/+@//@S4H;&]"d(n$'=$$m!Uq$8clm^;URDuX*^=!_=c&th.=4Zp-^2PMAdZ".I?u8(0Sr/G5,Ufd)emWQm9)2
%,cF)/"5Y2AJioIBYDR<IlI"!U>S"DhA4n7rRAI<OjkD27dsHjDla1Yu)JGAc8j2g9@$?$4ZbnmsfZC4"&/R]QX''+*PnEkV0;nht
%l>FXc0lg_]lFcFb@hm"$\9*n/Fq-oI^)^g:WH<j@W-jDd]M9AI:;HbaNP1.GdZ.nL]S^_WeR_+4hNT2oeNcL;%D,eLW>a,`Q,4fF
%eQ%)@p4m#@G1^(u4qBkUapnVmG.hR0>gd'L]!@!\#,>YcY`1ON657G@Lr+B]4?LC3@8%_^';3C+AVCG&Kur!d$IaY[2_f:j7.jsm
%*a1:XTa'4*]*cpX1I*clUdZIpZdLuoI7Qq/)gudTA3BM-[`5g1A^Aqo=`)XR)WMBd0`+PK$HC`[4O!FJ=I95VF>Fd@$c4u!`1fK:
%[s_L\@7[:/-:*84JFJO%6^YrI>`W#,-5)]C;[AS[:1U]an,#-X]9+NLF<Z9ESPkgX%3dI9Fp8W5%Lfb?GFcZ/SO/\H%AGQ0&(ZR7
%jC?LSOh`fE6C7mu,.<X##I[AA_fU\SSOd-jV\CIDNQAc<5oD5c.l4kO;42S7CA,runp&9SYa%0S,&tlc&Jq`j<EOfCXV*!IP=q>r
%k)oq/\HJk1(#gKPE%/uL>ggVHQN49o.8GIAQS`$eV9Bp!8Pi>9`(A>:P4jgEUnqQR!GZA'3!gL.b(ML91j7(h5ce"DPG$3t#7I-D
%YK^Yi).@)J*]qA]H;A8!%hng!_D1XPEg<KGcY(A]\:YPM]L:5lS<0UF,gR\jG$6kN&F0-V:Fdt\MVKJaM'7*'EKBo_$QDr#m0KEj
%p@Jd@85-&q]lHp4r+0T(l5$`4bF5+nR&o\>:=UBE:PF^98AR6jN*Qh1;p=Gg(.4"a+FoP!Nm,#R9eJ'@N00?Z$2t:c*Ju%rG<!P1
%i$8^.N$s0N*r8'M\o*?tGNDt1Qs,'+?E/u7QP+JI)aYJKeN?1%E7bZ4cd+BR,IU6"6)[W07n<`A)MCtMhb:*`ZIQb"?,u/BKOWJ(
%"-)T!ls7JY4(M#uZW@t`UI-_m<$Mi/WY;ZG!FsAf3f+):+00(.$H6VT1si0e3+8X(h4h1A::'P+ej&-8J)!&YA0VPVoV<DGngL](
%9+oNM#Z-@:Ipg:s3e?1f>\*T]nIn[+_r%BMn$ImM`r$u<^d<4NmP9-i-aM5"06SW_Mdcfk_-hRmV1PNm$jekBiFQ29#a(KYFAeaW
%+T=uJ$LoUUO:q-s5h,pGEUCicYdR,]RFpKsM4SncH_I.idl(a;U"Rm-6rfN#'_XV7Rb^OA,.ONOnpU4;("Lbk]=^2QH^\5Z)&k_U
%BKNu,J*)&:TA<0YA,jTA4o,^WR%?^>\FZNu'#a@8Wrm=Yr;'R>F)?]i3X`!#@M882H5OuD$Och$&K#0lX9[7\S('#oS3dTGm`AA2
%U4JoIW_Z5cQkE.9=?<^^'/;6![<3Ys.]$%1J..m.I@h_1H,**jp43I.7tF41Pbp.*M8,/if`i,e:fcWq9G1<.Pr+3Z9[)rOa$^K&
%l`l#"FX@8AX\,&!$mt\^SEoH6lq!W+kp)'NUfC#cR*Oc>/1$;cVPqR'"O*&r8u%QF0TF&!RNQI2h-"Hg0-a--(8,R4&UXI21/+/=
%OZ9dn9I3CP;^m&`>,??TQq8Ri'/N5?`_=P7YuYSq'PMGW$e;b?H#$[5k)ihYi"TjD8K5WRd_IT(Z?i<IR5bA=>f')fQS`^+V<f8(
%Pt"N"#+)\sN@Q`)N@D8_Uf*U@"mS5'[dPQ8:!mh8Q/>J*+T&+4'c:OXJkB:SI70oJ+&OHuBpI*\Ae7Nq781kt&X*:$<[gdq3g[-N
%bU%*JF%HqB<T5:&F"'1>>fuaPQNE:Q,u0$rQaB]0V/.5n.1iPFiZtID.9jbrWU42m'LF:7-jaWNfsVt<q((gCmAHUpqs60@f6$O.
%W5LRJ7o[XT&X<E[<[gaO#*H8k`2(Ts0e!ZLQ/X'fF"'2i>gghNQNWFS,u0%QQa0Q.V9Bp!.1iIYiZr2V8NT@Gb01Ha!jPoX:4bNn
%Z;o,6)EMJ&+f&"mP+]gYC&9Mb60&l3?\#`T8&[.hD8XRH&;aoOa&LL20pT%mUfH,/JXJpC:,.qhF3LFr+)@-R:4WV9Zr;rWR(:3_
%D',`WAkmm]QaB]8--[EN.GI@-Q'kRDaX-9fF%J1.>fucF>&!+5BQ-OIe[Q5Zf9fIj7k0dl;kVF"D>V[aTbeZVT7WO!]2"LGcCgXe
%#qBr>p(<RqI70nsUfC#cQpE"b'JV&k7na9.>,=1bl<MJ,0pf7qbU#QN<f*$5cDBkAE@KX4>REl6PrK'g>gc@ZQa2%XV*M+_MNa^Y
%V/-lfV7)GQ;@'7$U*Q]-AD9;[eO$rVR$r:-lF-/fDdo.fSck=gB)@BVR5q!>+OVa9.EiotG)DZOR3O$^@]`Ou"Ec>.VjL,G3TcJI
%;QI`-;!1`"MR\n=,;'-D[7Zql%5)@mLeF-ri_gn"/&b(Vk>JaG\Pbf89IYWo.T$i.GVX+X=qCq)iV*MSgO<E""5e4j'Ss]4m:.V[
%k*Sco511qJSA7fB@AfJaRQ4tX[Z@gg1T*Kj9A6Ab--TWSP.$G$.PmtfK1joIk)s>:\WlJ+[E?]Bd,Yg_MRfON@kM?i=KOE$$8f8g
%X_M*tTkd?$m3@n=bUHBOagQV)IUs#B^+V\eLHr=^qlsXu3=5QWCNIWr&XBYM7&</E<D$2W5pYh30e(jI9FA^AV)SeH>foerQaD1b
%,se>-M3FUXV<en9.GI?t$:JWo3!gL.dS:C@Z@0Zf5ce"DPG$3tC__#f[Z?hS#cUdt,cL6DgO<D7-VQb@FNY3I&SL.?'b*cLc0uI/
%13(:.0VhUh;OG`R/QC+Gqc5N\_^_K:$#2lN4;!]4DF>a)Uf.S`TLP_n;\:J%<^[9^3gDB*l9s&S'p17e7AMW=;[S_]7\hRK&Z&Nf
%BMnut;h?9N8M\P\>qtWaL7J]K1N]8F0HdGpMNa\Ga-MabUfh1W"X:'HR_fIW@@EQT=uKtj+P&$]8PnT5eu<Wqj4:^cLt!no'%FIf
%JRU6Ghj@&f8?ELP6%_h_.-?[>Nk#j[eOjfoe@DBSC0ZUdCJ611<%:`Xe9J995@=^h%+A!+h=BC]`0NQC8Qj=)'oOhd`M,&_;2Q!J
%c69;gOXSsb,RQmWV(@=71s.KaNAPE=,;H#ma\nKqUMNiU.#V+_$<&F>/;<=FdMs!]11itM0VhUh;OBqKX:`jUQAe@47&a+*'S\'B
%%6J/<*13%_K">ZO7GkLH4!m6>Y$!]X;PoDO'Ss+gBaQYPUe)aWA^?0(JQSre-UF:rfd5dD7ZFr(Lt!no'%FIVE?[#Hfn`:P8?ELP
%6%_g6.,n.eNOT[YeOjfoe@CgC@]n5'0iJE&PtI8D24dLr&)<mta1cHg!n;$NYk\;jh99S0M.>;\<78uFPld(K.8=4TOg%d.,g@;b
%.1g9[iZtID8NYJ4KUHU\&k$K"3!nkTdS;N`1ipm;5bqG;PG#`<lkFM41WN`-`+l,.$0kdD<].%uco%[767S6K$#2TU[N?9%&2n>h
%"a/R4r@0q:'IQ0mY1Z"5;J(rf'Ss+gBaQYPUn&\VA`ee?JQSre-UF:rfdZ'HAraDILt!no'%FIVSK][tk(lZ]8?ELP6%_ha.H46;
%NjodZeOjfoe@CgG@]n5-0iJE&PtI8D24dLr&(rHuI\>H0!-R%WMQR[5a3R9fM.>;\<78uFQ*Ph6<SBHaR7+ne0p=G8bbT%sCR&L,
%JHhIJ;iOG;\],q4+/r7P:4WV9Zr>0pboCdRgIH"DR8]d#-0u=e8MeClb4`)DC$$+CE(O9a\.V0\Qr;[/.[?E#T[&a<q];,%BKW%&
%TP"(p?&UAUE:Gc``&6:><6FnHPld(K.8=4TOgJ'*Uhh,-.1g9[iZtID.6GLRde5D^"Hck6:4bNnZ;\]<C`dXG&?/[h,\V-g4%3Ds
%p(<VmZ!&SOJi]7(<Qp`^5%[D1Uf*&4TZ314qdK&INc+`fH>?$%ls#!kE=@C&Q+1H'Le='qU/E,^.]"T<+Hgo*R$="og07K)Lp]ip
%'%FIVSRO3ck*Sen8?ELP6(L[%.H46;NjodZe1,GN1q9?P+tdHhLeE;$XV<-KSP.Wck"6('1SkX\WC0<Sj2n\,aCa&=(h\s7W7uck
%gdeK93<^UHD#9SlRQ76C[Z@df4!u_G8D#A'P%K`BPjMt_d`a/ei0&8`E="GQ\>8L:[E?]Bd,:(1MRfON@kM?i8?FXg$8f;HSRO3c
%k*Sfp5#s2YS,s-PBr`.R@d"_/CAUPu133fPH*V:ZIBb[ec6<WmZi,].`muo:;:2$Lf5)O+.GI?l$:J'o1kcf8dS:C<Z@0Ze5cdtC
%PG$3tlkFM4gW*P36u%uH$0kd<:(`huIDhsIUfN>9TYVrA'QGSV7pHD>C8Elrl<MJ40ir,eQmm`N8gR)])Gdg/8&ZU,NHef\]'Tb#
%?80:@8Pk7Z[Z@AOR3O0b,-=b3_@.W&Vhdp43FYl/egeX1;!1`"MRfON@kJ'3[7ZqlFY77'LeF-ri_gmsX2ITVi0&8@\<NC+/d5^l
%;Odl4/nM)N.lDFmPX7p;&g]i'-e%d!LOGK@33XMjh=fl<,YnkB1T*J`Nbok:8MeCdb4^ruC$,V2&d^Y=9[_->PHoV<<LPoO)I1]c
%2(i>")OIgZUfNmD"WCXo:,/(lF3LIs+/r7P:4XaYYZ&alboCdRgW+'*R8]cp-#HZB8do!88o5ZL<+\mV3fe`L`/fD2fE/)F6O)n`
%62Hg;0l=qggENFI#qG1O1(V=T+!d!9aSYo^Oi4Vb6A.$!)FP27rfsT!"Ybl-U'f@k$=ORsM:d#g*51Of[J%]WJ;Qj+=J_+U0S:Z&
%qHam#1k*hpK35#`R&3aePFt\3g?E0"Qm`_OruiS;@@^;`":_(J\[MhX_&TqJl^JWO`&+#OQiqOUO'R<OQlQ!`\7M%t`/IoN&n)D0
%M#=!b^0u_P4L]"7Q>U^UdrYq*&i>DRR(RakJKOH1_rN)?WD$kP9P75ks!o#Fk$PO4/-=8fO-*Ys'WBF#gWe-B1[M+N0A.P3+Ong5
%mGpQ_i3JgXK+*jd[+J-kAQ'rs1<<og]9p`K`pR#nO<FH,fnG7t67#3>Ynq5/J7%O->8FuEhM/Frh6b*QqN:ePS@#rZ#Bc+2;-u:;
%\166o1-jV\'0>@fP/U6&8IY9G+sB8-6)Me`%LQW6-Qf4CP>>5)IdA>(,^GNqY;<WK#OfTbgZ]5g(OEZ5"u&_o.&KYKCo<qDTGBU(
%(`?qDMDfHBa)5:k/E8lMBJTTO?Gumrn[0hMU)KsYPleA:S.IiCZ5^#ao9,lUW_!lVf<S\?hdZ"66-QNJnicD[fQH>]b<L2`b?N3D
%"eUhO+mr:X4&YNQe6i^-Y#/R8X12`tihNNSK<f%o7D43UP"*jg;O5,q-EpdBgR7NKa]7fD"#0ejT@48F<Fa,cfonX`Y=5\!(WL.<
%:&D`'&2GW4)\(!u5BJ5;O*u7D#@lnH@i])oKG>>YkW%ptek%R(,(mu,MSA2>3[(r9fL9EW(c\d'&mFJf:fdm-T3Y<N5o4.Ck8N[u
%0j(,ZF9lCg?Jn6c@$p^3$jPrZE<_e`4!lAq8:aVmp+2u&?*MWt1+EfK698Cp0F;q[ciYfi9]HB<N#dPlK68E/d!>WG_6Y[@g7IKn
%i.NNd)gBq3+hm0Yr'iWcnf0ksHU<dAFNFAenP+;bLsP[?KOkg<+Rqo%O/ht6PAKZHfH#9EqC0mLIu_tbfaX7[Wi7ptO>i=LL4-?a
%1$hY+]-AnL6Dk0T'-l&;KTU"SUudatDX%q`^R/Q!Mg`dk%h('No13is`&3D4fS%TXl(,B,-fG.XB$X`XFjViAWh^AV[`ui^%T;k-
%_J2'&Ai7*0OHR.O*#RTj;\J#l1*tBOFu"KB!4=Eq^6/Vs\QZ8GUj;G>"uWg*Xcq\M<M<!d.if%5_]T^6&tHC225u/nA.H.P!_I@"
%TD;K!)mHq*,8>>qfI[hNiL!:rK1=Ol`5FCg#r^6N[!OtWS+hiD)&79;:K@9&L&uG_D9G[lQ8Jjg='CSINOhQm9N4Qr^Mn5QBcmX,
%UZ#`*W@:30BN-A$`0aq>X(hZTAE94@Y[=5'>RRBo7\(e=R;ho1DOPi"Z_bkrb7l<\#h9U+h(]oP<ip`TKdtQEc)>>;=Ok_)`SI?f
%/relYT?pf)>>se;(a_X!;D"Z_///[kl4nsrN7A4LMH,Su2@IKW'7*SD)5M###Xtb)m$`XfHu)-QBVC6SobK"kX1#!\(SS?m'7*(T
%7<#B<:n^uKR71^uS.g2^_Ya7h94]ne<9C2W-i#1%&R=>3A=;M3G=$:#NFLA.W'fitGn"$pq)`:jI.;`B]ekpXGFtTE*G&U:$j&_`
%.Nh#'cT:2GmMmgq<Hb$3gb]a>djVYW$,'MpfcHu&1`/KMI>1U;0LBd6U]M1!B^fQHfJ/@cDJW^mScG\MTYauK=fgbfa<Xk\:U%$k
%!2l[:RetM_J:3JXMqukc3%_Jgju);L-7-341]`aY:=Bkr,%]C(WE(P9$tTUHhja\ED']$Ieimg9SI?I_[!$b)9MV</ktX8W5(`JT
%[,W=#'VFO0Ir,*+4l=Hs!G,f36uGU#rY#;K&#)+7S.kcu_)35J;8HD<0T8a5VBuXQ@G$Xph8J+8AB^gm9ep1lO>DgMGg"a6Rrl3:
%F!eBpB\u@,;:=?6G\2!BP44d5?R>G41NlHK*@bOU.:\-jgomPtfVj5)bT/T^\!Ygh,.G4@4fcf_/TLr_fVp%gF>A#ha?=ZT7u#g2
%U%[a8r=j;8L"rFHT+YZs:EXg_87snFF.AgtddE)e&F!_ggh3"ch4\J/<.^aM)*m;M<6gkr?Y8Do<74Q\&<M5F<6d^VImDma+L7$,
%)%$k_afH^36_T-Z.U^R0m^!N,.QsY,hQ6?//!["&Hn'?db4Fj\!A`=S'A/7S2`!1cZ?@]2ccXtJ141QQVXiX/:M7(;G9U(c*rK6F
%(&>sA-f^;<"C:q5?Re]4N&^XNGgq6b8s><B?$7\Jb.u@[Gj9!k&ehOrW?pG1&)$IZp2JYmLO1TN,=qZl,To$j3a),!T&.l@q5-8u
%8*qJRBT.N;HLt"*^BeZL"`!1OiaN`n8Jk2DetJ/t#]UIk3n'Huidh1>7''>cs1Ed)P3aa*jK%p!bU-&687Fg,h"E8J/sl>2#EZ_a
%!`rr5V9\JSNcgbfE(;=.#S7&DI%o6_eC"sl.I2Wdo-me@QVY<42Oan"94UZH8IYaJ/E<_K-"n5#3#Vq$e0"b9\t*#.Ju1h_F,&Rk
%RT>7!Zkp?rgK9\-AFh/XA`;o.cGqB5m9abC4gjjPm<0S4:S;'JjV-_<j(k;!*dMRrZ!,^d9C>&7>F#faSE@I.jq8ucY)Z!S<I^J3
%ALM>9;^XSdU&;1@V0a0Pa>UdAM:8tl5B7.5+i!8&2IA'knO5=<(uN:p*Tnq;\ZEYEp5<g?ACd-B:L8iKQN@78astWV2"_Qb`jj7T
%DCT8d-=nFTm7bb.7V2C58>aq-0#cXs&iCJmQ%Af.Lf:P(VIFp3q'a8pm;n@+b*oqn%.4=d!Wsak.a5sjoe8P[YhE_g0lo:Qlg^%0
%LSuKU$]26:e"sR@`e\C(O;3=iHA)1,ffM2K^6A1ZaB>jK\&(tmg^@Y30=V]5-rF#R7]*/gb9M`/akTV0phnZf9WrHT'nh`t0-o!2
%9pYosN$p.u,6I6hYZphOhT:VB4%TXF:\cj?<Z&uJH[uUjND"hR&nMeiA=E@\*oV9qoiC[An_J$1nNdQ7>[f,)G=+-fk&`%+:nk&.
%N(d0J8Gd6,h=a?!2;Zhf?oBL7JDP$9Qf;mJM4+gr"lDLk^Fg]nJ`C5J556YPXJa,AJGfc?@i?:[a*d+ko"j`S&R:*nj?3F&El<2@
%mn`OqI/5XYB*=W#Wd9+h<Nmi\\4nG(6'V@(=]fu$q&I/6@a4"rmQ?`epZWN?Xa@UBQI%8WK_-!,rH?NGV4WCaQ;ZSM:.oj/@-,i+
%.CEnM^18]`riT[gA,[_/dou=`0qX[lMEa]cPs6?DPL+#K4Wf%5kPYPTMP:%hP<5jYJ)@D-fNGYB$Y$tGc;rL1Xf9]@'8AXZ--A97
%p+P"uH9\M6oX_>(q^2.Q;[iJ8dppal1B&N=R.>(8"RO645*gFW\qF6d5U]dmc)LtE2le!OC8e1&q<omNPC!-iT0^eg%;G#[D"_SN
%lP0&\`B`miFeD4rAT+rC`'#+_D8KhlHoo5Z*]u./#KeNt2]C?Rl@.9):i1@&0"2ZllG]X6%'<C[D0a?6>YQM`S\dQH)X..,%aaOa
%hInb#S7:YjqjG+Ia5h'668/q7<*4&oZ3Ab6Wi)LnlCq9r0q!I7o1PjXm%/7+i&X,.Vm+K@#'rM9"8'112k%s^F.Y-)PM*FcP2_RK
%nA&ES.''T/BOi'\qc1s.[FI^XggW*3Vn=RT\u%^4i;133R=IK-(o[D;#*A/.hInV-=YF:a/=6hm<FMLHgJ\*)EM0DMH@q>S+Dt7C
%"4^3aX`B?1PaA=qE-9EHb-(K6$RPSAd58faf7M`((V\@7p6;lfS'U0#hD@rrH1hB(OgNOD'8@a#6/Jnp)QLWVg?'I:)97tEXhMMR
%8u#WM868FQ1[?4+T@\]7dhfdHJ26pWY.M*7ECr0$4!%e6'e1cNhL]iJaLdb!6oNb!qu$1AcRLS!$.S;&qW2i<qmsB8eI*+Hg3qdd
%af*%:X$mKIQ+k^t`fTcENB3Al!Qfra7kTuE/.kE"e8_c#agP$TXe(VjZ`Efqn%Y::R6t:J1SmW+%/W&OZ:oNq;VnTfT'B:lH(Dgt
%Z@ALm3V@i)#O$;An"%d-pT-<Olt&<i:g-f[)qPPOPH\#AiI&I?M[G84dY(BI!pX[R;c#&geLGc;kbL\:D.Rc0=O(][a47=kfOlN5
%]q<l,)UXnbG=#qu_er.[97Oru1_7</Y`Dga5f.&B$`L[;:I2D<7B?>4C?<.*-ekOU#`@C9(tZSRqN?%kXA8(eQ+jHaNDhi1b^1)0
%\YP0CIr/uFV.-Zg<`D?$>gsuqmB7En[$,l2J$P?j<K2>4ZD6a`Vajj$g\KIeStbRWk0f+"X43VrhB%gMCS?0`&ZK4ZOiHdn+"uMT
%;#sP9/g=.#W&mp0TN^X?;>nUI>$&[cCY]diM;%WBI=9f'9ZE"(X43VrhB%g#A.X1Yi#;mtBLN(M9L_2]oa"M)W0YkmlF%K;B1I.Q
%Eed2;Xf"P"\tX\u@6F4P)LPnkgEY/Bb[2?(aBDb4&fAj3ZZ/6.%mVt[\9lasqO.+%e$5Qb?dGEn?.*`:dN>YXH'q1?kWO8CX"]bi
%"u4Ef^K:n_=L[=OOAF(Q)qBZ6].a1SRBVa5+ePL"cgI0t@hcQ<c!8R^;@<,./5&c/F]qq%Tkp^f'#q&T;OFpJL1?"AD(LU2LM80;
%`'a+'-&Oq4q<MN3O5!R>LMAc4<L@RF%sl$nIbg)MM3uFhM`(I$k6!7,,RDS#;,UgNqVf=e*Fe<"N_LSTG'rtnk&4JLI5q]/A;k9Z
%asmg2DgC""R>f/k2q4"b4]K%eXMRY8raoFm/]q5=mPOa:erZ53k<EE<fAskPmUa]`U52%Ve5:\l24)rRV6or@%TDZ'ng\O-:Bkl8
%I'+#IE=#P5_k*b[PcY"rD(=p8mUKL^I>>;cpAU,Y(;>Ze@7gDr.+N,p%=B(5cN/)EFh[oRr3I^H.FP)D=MB5go8_F21!SB:UV8?0
%KH+?o-1B-mqs;^j[3]c6IWQ_99uD!'!2:+;CAKhPr#0$8[^;#?='H_UmUJr><mW\jG()MRlBFMX=<&emmq^WPcnm?+%3XJ\XI?k_
%qut-&Q_kIE9.d]5:@/1Dg5\t5VBP(l&j>MODg7;5OElkfNop[j=X@AN>9;f]VZ&VP;CCbZ@36@N2;s,>AmHK-K8R]$K_%Wk76Ths
%c.WQYAnCW>2K;kE?28i;UGZ)B*p^8fYgYjAg\;%on859m.fO#KPcX%D<3=^X)QfCdom1Fp9Z8<6iiJEiFI3ius#8;Xdig"go=7s?
%`?g?"7Vg4TQYa"YWh@m76\]S_*3B:A\CJ`/$-(A,SY4BQqsEPM;O1@8-uQE?3%HQJ[SG$n,h`/tgUUU?XgAg(P8C9QN/#.@q#&jO
%8eAt"bNs3c9CfF-)"LK`H-BB6ad?lCT)W^]gB/OXh>Xq0/TasX5t4>(DfUbah9*0]9BqF-MA_^k4^C-%V0[!A@7gJ`PgAj=r-@Zg
%!Diu5R3>kt()I#@c;(?NM7.u]%m3K2L@a12K<!Gmdr)iVbc,*@OE@;.Y%LOVT8e#?QVAlLb_uC#h8N)HWq'MbS'+jE0SJcipX9o/
%Bs:8RAb(&-5$_d:T/NoI96F\k;gDNPX0bjgC-(0Jl)%4,06=PI+/R,5ATk6I9qARq-,M]-PW>d<Y%/G?i-lYLo6o3bYq^BIf/^"Z
%]1%/:l1hh8dH6h;*+b9`;cfB3g)T]X&oEYcbY]^t13Jk=Vq!hl7&u$c;'rh/Fd7f]bq[NidH6h;*+b9`;cfB3g=5Rb'5d#igefE/
%13Jk]Vq!j"7&u%&;.[9fGEnS/s5@2<8`7q$DK9c:bb&#"QT\r,&*QHD(LT0bq"K'C/dor>c-u[4N%F.QKZ_E=2`"cP5fk/d]GuP1
%Q1I.W-@q*o7g\[*Qln7Dht(^uaJr+)+>o#iKW81:mq5,V^`8O<`6*KOC#(cY^hV@<&pi_/!-h4f8EcUC!Q</E,,sBY)8L":-PCac
%F9']dY=RT2'*:j#ml1UOqinmoUR/,*E?,Ya0"Nk:na(hop1T1`G<*5jr:)2SG!q^@Ps(/q$@eL6>H+qJEE^l&kaq:aBsd8_O=FT/
%34^d@3*EoXEHGR_EOpDBj645Hj+Qrsa3f=oa!p%;T;2;#O-@SA:.KJ^Inq"JGtf6@nWhoec0OFN*_Z@sqrEL#l2J\qdJIrR<hf<i
%<%E8L5U[*'Ld@d_-(pacQNLn@IQKeCNTZ*`UF%La+8?9GW;.//$.>K,W$Q0l"9*jX'9F?M-QnXCG/U%NP8hjZoWA2<oWj!4)Ve28
%NH0?\35%!gApRrP-k5[%6)-AO#f:%WQe&!-?^e=0`%PgZY=n30VD$1s>N2!VR+J0WC"&F2X=`s8g<Am2^9m,tF4Rep-&q&0BjfB_
%Ps&n]]Jgc$rVkQj7:tg""t@q=@f\%Wjm>&CQ_55iMSSteQetIf;*41\DZ-X1h\WOnFr!R8Dm-t6oh@Wioe-3D\);1O-5YWeL]5h^
%nFumENGk@Ls5mV^gHN_K[m#iNl?2n!%dEE6f)(#@>5=nE4BX_Dp9$(5#JZ_f^W:VqGC<%Ipsh5$]0t5jmG8A&2:MRhNO;WqpOcgI
%p:j=2?-M_"iE,XLDc9aSZ$TRIc'87_"SOTWkI4FV>!-E<.pC,qPp,TYIVaa&`4^hEs$rJN>.;PdPcpA5ncu_VJ7m&&?DD[@`,S"o
%pYL!hR&A':0@2<S%5KUH_LK1ac<5)-7lgc3I7:)^B.P`$H'LTk.%bG]*,:_?A<(pcW.mJfb"W9KNLF@:VD193pm\G@gr3,m5d&QO
%F.r;e&C6Hd)^2KlrVAt.Z0(penu!)CqR[o;Z%p>l;(("^en=:dLN;%fHZs.iY'EO[3[<5geAsREjg1&5Pi`0"LR50aLE?K;8aJ9h
%=o@f=M3;.t?fa.[X/ZsgF[L^?+2_9&kN!g5*[fi?&$[[s8f\WuW(KV)d2S"HN]6`Y&(GXZ`KIur)@eF%B640&)O0%]$lUFHo:(A@
%/>(4h0b!0"hgHE@4]cIPj&f3@2C=gWqQP%N:_tu@0lR!/FXE@=U$F8u:[n)&rl`VSg?.pt5,`k9bHe"Pb`(ADPXu;FMa\P12/k*N
%DiTTC\+1I)`bru(+,;@bq4j>JYtu?`c=JTI'Ooa?[]RLclfsE@n#A[Eia[jj]<-#UT*C78I2mj>g'%h80DiZ6(60!ucoO)ekEPV1
%o=e11UB<.hUE@LPXF2j=-YC:p7it[=ib1!l<o.TQeO8HFaagmQ<c,eP,N=t:&NI<]jY'+R89-(kjG#OOnX&Hr2$sC0Qa4X/rL1-X
%#$SQ"'UcU&8<aFNgmA=)_9&7@nY<TVP1PYa=JI"CEdL?JR(KmB1Lg7\QuWbDZkmC+Dmd%KR"s5G8HZ*KoU*);G7b`>![fqiceToq
%GCi;%>9EJ'T9'7Sgkqp2G0++O)R0WQZ(W2*`l&K9![i3cQEQ4,Q,%dsd,aTQ!X1kKA=-<D[$I:BmSc,1.J9k>=O0+,foEu#g\;^N
%0C:-t+/aX0Ue&mONiSYFCL@X4la@V6Q<'B2'*!#G4AX)EPY]"Joj-`N/A"BXA-9C@>&ajlEUDdW$u1Z8W%NcMGn72m4m,[J_@b9g
%$SdK'KJ+f-5nh[s,GK`(&W&3[/h/D<Nb<kkS:Qs"&P4-b&ZYtM0I%RBN3j.R#Xm1:iY")1%#.<($mnVeLpR`!LfT$YN"M'u7Tp'a
%"<q/LE=&'N"rncpX9_+F+]qTM$$$"J9^rLl'RiR[Oc!6UBVQC&#[X<\kX/a9;cHq/-?N,bKZHSF)$1<t+\!'G!c?`XqngrRY=Ti<
%'GZtmA^DoX+H/s]l.VGK-lqW^mJFO3A1R1X.VlJ6@#4W:pG*VPr]EC1:ID;`(c:^W6_RcVglQm9<TqAmN)BV3_@f9$HUaZ48:B8W
%fnbp/H1B's!R`!qdL*>Nau=@sAK]O41j,g/#upd7LQWK"?QRNlb0F#Wj&4U@/XSION9s#&-5H>\L6/"GY\r&ipmWSVT5:=.B9,E/
%P-^W@5Kh_,/HBjP<f]si`?e'oMl@-^OHP0)eoiLsk7$ZUG1J++[4)u_`#khICL4'NgNp$c['UDHaAluo-0XYTcgt,)EE]i^38_*>
%n9!0$X^=]q5O-fnj1qeh.N<,VZ(,[Rl2X3=oVf.6:ftHQrqfaejUCb22JuhAREs/8XTOY7KAmNVcNrg-1:EcQhGVK6!C3XtMG*G&
%,=l,%]U)E\a9[rQn&KFrX:DHtE%7uoIq8b&HDKNHA/dI'RHM%mVKDl:APcW`pDH9RYBO5VO-L?Mns7MNZ[lAX<a:7N)8R@9>M^mS
%(r<p5U1&,G!jFh,.]opJ,P^ARl93VQ\bXfYG*q(>pF/*0jC=&J4rIW"r%]VMej#$bOG_pNPtK891?;kb[66fSgGE0fL3[kUP9>a4
%)14Wr-`_BA<\'U*H"\E;QQV/iXYH6f)P,Fc>-2?'6X1V5"B!rfV/aS"//&'MM-6\AiCCIRU^BM(/!R[l+15^G:=)P.j=-mPe$2LV
%`N@^]5L#gked5N^1_`0`AYnB!6uf8m&%<CHb>ci'9ds"(L3HU%JgbND;QsA\-!78V)Qbj/gUGFQU'=KMC9>$b?_,aS>-4p/I\Ym8
%6uf7bVh[>p8$8N8=rqDIjCoori`7QuUO!P,BMZui9dLc@=p^q5dAm0(l_<Pf0IH*(S^2$^`UBEL9d-N!2&cj2.Q"]=*+0[)YKL)o
%gf[m62A4e%?+Qh>YthaIq,",oCkYHD!3$9%>_5._I6LpDC'62i/u"E>#?eC)o:5d[No3@5Lctqc:/Q!;Rc$UoJeufYq@JHB7E$Qd
%JerA/0<cYuO:pOeOXe]\07jeK8.!\!5f>*$/jU/`#Y4A.>!sG6&Z;S;"ASA0*5RPH&UapQS>,!U1r0PZ"Y\5#oH=ccMMb'R">@V(
%]SI?NLHrd,.P="#]Eh$s,$IAV!YM?/\-,Oq+rnFWBG#Xu7%C"2&i@G*mgrhB>pk2Z;cI"RQbi!B3Rb8@5K"eQ+-3O#oCTgpAeIo+
%Be\g?;-8FPoM'D(0lQIHL0P%TQIQ.B!c\GnXY:EqrmdO<Z4e7M<;Zu'B!A33(O#BFXD)k>.<!Vhns!W.C)eT*T*Cf,0ckd9`?g?"
%T2(c-7r"[KeT5*@PeX>5"fY*B/jWRb%joMda$+AlFM=oFb%*`;"!!N<ekW93<Yu2$4DUCLMICUd]-Y@!>R!hD.RV0$Gaf<3_`8$9
%lBsS4hd&)Y7MS6u$/T7qH_-rdc#M6R/MD;#!ZKW22O.:p5;RgIY5iaZ5X*mYY=>oe(kC+n-n`@5$m=WTa&R1ENg$`u"@tCbV%n12
%o+1"=[J]r$L#UUi)aHN&PZHG5"oNOJo&$#DOVaZa90$Z/7XQgHbW0fQ$%3^KLTbdL2[C["jc=<_PDsD!VXJN^bPp_k^?oK(F?Rpr
%R-RgDrXWAp[@L[C'jfWT7#Z"4_jVoZ3K8XLbPmSFm.!E7WDD"Mk.1FEHYSOl_$R!qG$DZ:!BRbJWa*i/&uiN5)hD!^6c4>T/&E6H
%7@dbV<B4[iR9?9&huqM9q_EH5'=EF;KGfg3*6b'Q0K?oEZ-DV$"]*VSL;u"7hOH5q0K?oHER`opWhN7mX;6bd>,,K0JiWTWZT";0
%>/?G"a)Q1E)FSiuQZBsQGo*Q\P=oE2qIosbBG:kME6cM!lsB0LS`%q&68=*^_;GI:oY>,.o+cD"Gob>q^&%j7K,$Lq;6*2m.tRM4
%[)%+D"kj6n3Rn\MWFQJ^N<;L-T46H]dM&PVA=gr6CAW5I_.cG)9VW+:H([B?5%lc0a5T7P2/<U=[:/*?$b.k-3G]XqKP2FY1*JXd
%;gH!@r+$^In]11a95^,6p6AD:&q-<$8F;Gs'(g23mo^TnEeJ3CjT)2n0.S>NTC(+8q?+dI`m!DDJJ?/']LHa[UE:nq2.?o1%AP=@
%V)<!s)fQJF.^9:s9oWU!nOh;"2YqtL>Ee*_ej,+#<*l=XY0db"f,?H#[0BP,U@K51;2p%_W7I=rW&9[2(R<UNNG81(`3d['6<XI'
%]Vr=CD+(-@32/9:%VQ<Ia@52JC?$31_""K\F#[qX`@WRC;&ddD#EEDUR=eWE.;D_*NS7Lcooqq*6Wq;TAl39%?:D.a%=drb:r@Gb
%"]@0;^Iq@W^VuVfVa\.#D$1J>q6*$&g+bbLFnZ!Fo"CkcT,-OGK0c7ZFBqS<IQVM3<hVmG9EPRF-iE(Wo?Rm+o,6*Votd.op-Qbs
%b^+Ueqon9QU@Vl^X+,^eUL<k96=h(a"3\%-Y-NChJ8P"F"j5?sK19-Xs$!]N8^l^-WO&mGS:#)a3p%7+A$&dCcmTb!SRG15AMVDJ
%EXb0,.H_/(CM6&F8\q(I)m(;H@LBc^Z7/o"dAPuWEj`]Ud2T23e.Y+#.T3Z`q.AA^!%:']0PL*N=iE5Z0hM!H]r-Xp7c2QXl&LQc
%U\@p11mW'#]"4ctf&##dU0O`g+MmqK@`n"cAoA9,Vi7eW#c2/E!XW2e_f'-qCV]jrW8GVk1,aVD24Y!22DAqrs#AH#OE]Cab8"-;
%>;53I;UL(V^7Lf>PXA9VnHpPe^7IiQ[ET4G)lTt91rs1D@"#uhf]NQ@Y+W=dHqNZ!#osbI+Gt[=XcQT[1]?Df-4mO`>_5G'lB!sE
%=Z:P3-YVs!2=S.f$5JmMMVJ#[(>T$E-4mO`>_5EQFi^>1PSMpLWh?o+]HguJOu4^A5nl9P79[2)\sPb0;K3!]/ZQ^O7ZbXl!4mjt
%[.fi[k'eq26u`O-\@jP/d4O9c!^TJu-"sZa%U6O>37*1ni<8OrXUjkk$:7U::XGg#j'i'?.2<V[d=HcGUaHC3F$CDHpQNpq)(&F5
%"]B>]:S`^0e&?E)TVYjhT[fbt9IX?kRh*qqSY5B2;d?@F32<td;;C"E[-55C0nH!oiY"(O</6S#]e8`e:=.kLP1$UV>qV"-&B4$b
%6&TU](D@'X.P=#^7<LljIM\7#`u]kS,7U)<.oQV_"^F_DBW8KENE2Yg]Im(f!`N8XFa8ZD;>e=Wo/n0Y:Zj"mSqkh9Q_NM$X9:^)
%UcV"b#u^:HPNQf[30[3bQ8FDhassp>0V(^an)[m0k-rOJB')31[H46i0't_B`p;Vmk\Me6p0h<Xn:9%3B1j-'=t6n^6clgT(rrq"
%DBFpRS[Jj's.^iTdkO^*VYQ#33,igWNet@N/p[EjO_EZF$(f,:*W0q%O!K3]%nQE5O*^_r13`Bj55^'oVo3qM%Ld464B5mPHR/)p
%_#0U-XPXE;iXuY^D*I%'lGeq[/K]jd[]:2?mk&.Yk.*Q\j/"aXeH8lFn3]!`jNm-Xc.NiHdu<j`WpO$&C.?=YLGC&d1BL)_KAmLX
%AgA<_hR@k\ZIuBakS>ts>@rO*?&eI<V8m@ce:Xogi.knIae.1;R^4MnV\u>hQ^=fn1J63ML<8*LJRgJ`/jWo8W\NR_bD.:2mBVH6
%0r*eEa3Lelj!dFli,"pdPi-1d7$9d<#;p-qr'iJ7j?rp2fpYe/mNFP?C)H;k$;7T^,2Et(Y2pmjNHWi9pD?b&1)H8pQ0j4t`RP&l
%9(51mK&k8D6-\'t^XJ"UZ0p-\;=a*_FWl`0Z5=:BTJ.VD)"PE&6]oW:eO$a4;&VM<)k(`*o0gD7SW2*`')]t48Fks:J7N$b:,>L0
%TXY/@7X:-<i%nmFa^S(OK"W&d`fTpH+,XmCWtr:eN078Dg[8gh4N:rS2GR=Gn3]!`jNm-Xc.NiHd>[XBV\jVj7`i7IT-4jRMkT,C
%'P8U06f,;".'hO/>3N_NH!5PYb(g++jhj"Cma:=O/lW[&pN;BGUBWrc(,\oiqG%^H40B"I^Uss\)i.'t*9/>9-Id%@$-BVP\#l6`
%CpU29q<u(d50>7es/15GZRk:PF+3F:T?@P<D6,N.oh#O^`W&,M<$d$#%nQE5Dk9.]LUn):Gh-_(cXtr=Hl?s=b>kOO"At\dO$mL!
%qj%a]2VV4>h)9[<N/Ob,66?6:HJhC%IV;1YI>msMH;J[+`G_>3RbQPYZ+]/MQF8c&Cp/(58/?j;&enq')aiJkHml;RY$1$Bd4I!g
%gpYU1&0PNT`5F>kftR5e!Nqdd6,h^1p<MotH'tcPD0]9WlV2nl]qDS4Kb::s,]?L;Kl",s#PU/%C)pO"8%Y:0(t%(IO#Tq9m4@Rg
%:K@<F,O4CI=6s40s$90pdpi]B$Y^u%6<ZPkVlk>[`?e'oqiJgW+WlMV%,#G5O7$pue2fLj+F6,4D4N!)\gr6!)0Kug/,$-Srue,"
%)'O<g))[L-VA5Gj1*cUZj9(O(+e.lYdG=OdjQmUW8^i00NR98NEddJmAk!g<qg,oUh#/Cug;1s#-.i6-R_[R33_#]n<0'H(TPOtg
%BNNO%&)*$iRX&D<Yk#Aoj1W=?FZHXJ!D&+V:gAT#?7]ZXdspK7iaGBqfCDE;E@MK2%ndlhn]*XQ4KnAP.9]j-VCP<qY;.YGc]t>E
%CtYhK_@g[]9-ooYDInOA]T"Wsjc=70S$rmVYT=n#S4>.-5O'fs<d+)m-<4oW>7\\!kaM,G>7Zd+0:V`ie0U.BFGFEXgV6_WBgAaS
%VW&4VnIH^imQ]aj<dEGn\V?Yd*sm9tXAtf!9<a_rjk6il,7KcO;Um,*oic'`R0NW?1A&Tuf5as12Cu+\)R+o=Dj?_p]'eA;s!UCJ
%bu;23o'RUaNlM"5fH/iR@t^`UYJYXW,T&?f54;hPZBd+]cP=JFjJ=pd&M?aehOQ'uX=C9JqEIT[VhOh(4qI!#o-Y3VI)g8Z:CCY-
%)4/rg,<3q[5E$p!jnRoI7_WtW;`S/>\bS.bifBkGEsh3QlUS%WbNM'Aa]ANlh$"'0BNE^;DuTca;YrFkD0N,WLiGKd@iX)j1/gZ7
%#*!2,dJ6$HK1:\@IoJ,Ao_b%NE.?*:(Mp%DD@@G+K%$+bYfsM]i070D_$^<UC+s>N$SKP3HGR7-G3f>NC8`)(7_R`Kg,aD/Gn\\A
%pOWi3e;Zbh?8+%a(coJbjiF,/CoF%F$lX8?F30J%0,W0e=uS+e:o4GL7_P'Fo*tMjk/Fr$7BKdii&/i=[snQZH0Z/6Y*m%eK<#P>
%XC$NR%]7Ei0Rf<47fbF!^&kuQ1L)0V9]*q-9o'[QY<Xbmbgsim_`)UT&n6UO/'uHsUG[):m#;uiKU?3@$?U;B=X2OWhT3N!^e?Yi
%5V&1KA_BEGqCAsradl>0]l1plk\L1T-N6!QN]FN7Fui_'^2GQph+s0[VaXNV+,8euBO]>%j=gFE&bk1(V((T7j[6qIp\?pHJRar8
%T+mc]IJsF6)4m#co*3Kq%Bd`^)V8!Tlah[6USb3ma>7`U*p,I1*(q-7o',&;m%ItG6eo">-)?"fl2R\rhD3BW^PfC\H1H.[FNV^,
%W'*FXd&=J_16[sTKk!XK30b*!(m>OQ9tuDTGT?\nQVndWDTT5im>se(a!UBlV@8)H^\aJqK8^=DgmD8\#VNL'J5^r=QTe--7ml.a
%3"Wu+nl?.UdK$cop`AV[Ya%0gDOG<].oT\qbMflIrV=L]g'HP7AR,aNARa#bWNn;O.<QqJr[SG/L[r.MR%iD[fZK`a-iWW6i0m.N
%]C,u#oRhT(%0([lb'Dk/A.f>%kM4I=E?Xsg;!M_M6)4Hh=?4^FE=sW0/!KEak&m3=fS`%S]st^ED]Mm(.1qBb[ZTA25f:1Dn$O"/
%])[Bbs2D3_c5lSjEh?EJ4f0jbpOn2tC/,0U[0c`#GE^^h:,%a#HbkFTlGfJo0=[iZnT*S#P8/>QL)T'X]Y_<\hYb/^Q1_5L<'q,^
%=^GN3C/4`c1-)Hs+2SY\<!/Pr'pkTFRd3EPX>QheZ[8e])VSA"JmKt"s6HRC;Y#0^8F=nFC7#rm7f>,YL.Z/@R6%1tlkV/tB1l=!
%:".3XNEe8],6t+hB%XWq^"d>#7]`#g&VE^fDmf0Xnj97B)PLd(7L0JiXOYI?a9a^KAYj#!/-Kkk.83uS?E'Bl;5tCLPaX6:CGTp\
%H)5,C7]Mlcd=Nk[0s"T1[ga)83?Ok)Gu0lD3hChjA=-4>6d24NgP:[>[-+j@3n(lu;9EU9F`,D!%>l<di4Yh8VfM-YX/_JP<<[pV
%s8=o3479\6h;?-D8:N8k*e7]fa:'!#I@Nj=//pLQ@5dHd##bHhJsU&qkW]q4Ea"2`(S_g<c-uNFqm&1<pQW_lr\V8#]Q]>K3CZr4
%0<1_H$jM^j]5]$=<Z!3)GDB&P?TZ(gNtY;n)V=O>jqsC\%M;mq/Y3t\/>KJ\DFq8FF"I#C/brYCqN9_Nlg>/PFDd&!#&k1,dpU9B
%a7f2d=]St5m$BdjBUHqUE>YRPCsfY.CRgG%lR<'"f&H&hN2CYXLN=8e)!^hkW,'A$?*B9l)LY-Yg/(P%Rc[F?4,jqaBu8AO7g55u
%mQe&.Ra)`nDL#$9`O2_EJ?EN:.RC5:gHSF"`qd/nUb$!ngo[AgopFj6HN?V/7UZV[D^'In_WWKh42_#2]fb2#(6Z/no<t_ME)G(f
%=G$S=2R9fqHuUrH$G'eu<k9/V<:?AA&Jj='2R;M,TQaUE@"5+Xa*=5Em,`1D?WU50=k-\XK)aS;ZKK7^3U_oD*t@!60[uR!9CR*\
%abNA<2((G#9@t>$ehQ#n-@7p<E1))Z<=NJ=CLIPKdS0X&GY:B`<kkV,-'#U)+4D,7HP2WbVfe&Chkm`a"KD$u[!(<7@hsB\p>K]K
%3?/oF)LWU[]<4"-hc!\prRnf.gW#J?SsA)l'lk%:1)TTkd91TUUUCE,pt'M1eM'ChQ/?6!ZdWY3e$e6KFB\Lihpk<[H(mG]W<P+n
%/Zg]S[&"Aqj;Td!raG=+fKa%c`?j`Tb)Q\4e(W4m,PhU\+OddY&p.<^:,e<bq6%Y.23:sVBn]]`Qkr50UK,J"&;TIQ)^)D[\-/qb
%/`*"lIN64@]X_KIMiHaX=i\2WC[$:q*V7;?a2YgYnYtuXCbiK%lU]s_J;JU/O)=Jb>_4C'=\"X9^-5ofO2o2[X+9fIC]lp2(lCaE
%9kf<TE&O)[DR7,Nq;C(lfs25UYbJMAXAV"n``o:$&&);>&jW[q[)/nBl5S;aR4g"c*bU>Do`0RYV%mU,]%NRfY@AI@oZ"tg/6=mp
%'6-M]UB"1KU[f>:/]`phOBl^II8!tX[(-YQ+E]&2?DFrq)2I`:\IL2u>YcNY`Io/hZb4/fe8u[tm_nYt"lK=lC5<g]7_Ra8(9XoM
%mWs9!,1KFJ#*!rFjMYPa?80-TfOlki:da%U2!P89][k^ml&sN8hut'7W#L@Y]jREeo/TpeHscWm$T?L22[58u('VfA.1F),.?YRQ
%`]RI3UXu3D%YD\Wi*#[(B+2[s9U^aB[p,h]qfde^/_$*ogG(XYg*fDR!:7h[]!\m-F$SPs*]str5-tcpdVZ,"_G]@kI$pI6g/L"<
%:Gn.JUs`hGAA>oXiB=8"`pI2!2b9R%F-_>RiD<90PL,Vfn[P1C*p<.-_I\Oe"f_![VqA2W4;BjsgS3jr1r]&c_trUS5Ur=fP%EH&
%YZ*Tba,t<IN,+h2c_pX+a&G&a._Y!UI?k8Bb_7)+3lk?g7u54X2*fHl>1+``4'4Qr03M9N[os>#qWtUoIm5Rj3@Sht,XL1NZIMa4
%Mmqjt62STsD4D^bDq67$CR<1o%u^lTIup=C*9glZaJGBP9$hmnlj)gr3E3Za//#=<OR0)EOGc&MPFseX+3ljY8b(GePd>eoZ3>E$
%A$;p[OH&qHG>drALIE]l8F>jf.<T$"?-)2'g=bBLb#5'1Iig92CJl7)?WYt=H_(QC>tD`08\8m"Fk*2,Y35\(iP$Z3)9D,9qtglO
%A3X?pF&S9GSb_TGf2pAYgMH,gp@J[DlU(H[!+lkY/t`"RC"_f%:4=:39h*b]H8e!p/uZOf_S<2=pM$UTE.(XT\k6=?U@WfMHCp>p
%*;FZQrI$_=o'\33^?P01\`77e.J)lo1\U^7e.2Ue=5'sGC:GC@'l"NOmpB0+HVU*V_`3rrLr\^$BM@eJ*$:@i1rM/D^HbSLVrW8t
%++iVZ4t[?Nam244V9G2OFBm*%S.+*SH\VCXIPET"o@]FNZ/E9#j]o8'!(o26ctOEr/J>YV2,JWg*Uh%$XDs&W`4Po%"I'uurk!R+
%EIm[Jl?Mi\C;Z5XU!Z&aFUcqN2d+1J$<$iD.L9=#J'c_l8Uha"OYRj9I2cD4T-:$c1cLWsABEU7d(DBa^/hTrm-1_$KCK&u*:m=5
%RrA9?H`"bH6Z_X`?ZUFiH*X@k;d\=<^?peu/NVV3XhMR-ZPCJCN.!3UPTLlK6)1m-qUYV.DZ6pi;oADgMCq2=+2o&)7p&9*gR+`m
%%LeSm]b*f^h;7^iiY]<QjASj+mmYI.dlC#7%"GSYNr.RWm/,?k5#AZrn7iY]nn"TLr!:dI+XV=a-i.[MUcY]9&d.f^)R[Dc%t!*X
%C6X#&,T7-?8MnQuY[i^tkmJD@#';=5%C2&G-o9f?CG\SWdV'OFCqG1@BM`29ES:RWd2MNc3m;aP-)L";,H.PXR5c1EVet0pTZkcS
%f`fM,bn_p.AnX)GJMKU!h$]GbRSR1]bg8KA![S%qp'"%skV4\dAnVs#JMKU9[P(HhW.@3d>TW@N22_32nq[[<gC\V/;,kcZ6gg'k
%^>L%M-msT823"nKC**Wu<(N:IoBVH-_>TRE>sDk:&Fq7XHham`aa&\5,;'UhX"gCk(\SC3FjZWom=+`lHSbJ>3CfDE]WO<f.jKC"
%K"9c\3lShY+uIu8PTF3)G@L.lA$!8>e%Oa@:Y5>u/oe32)/@=RC?402L@t2YLDJC;I;ZE-P>%*6^7?qQ(Dc(D&6tdni*T7ooRhWV
%1\'RFn]aJLgRL@HC=jtd5*/u7QSsX&iA0Wk#st0iZPeT?i4AhVANEoG9:tHN5rYp@-?-+We8"WX-@7rLO`%D_l=pPtC(PJEYiuBY
%2u-":]%X+bQRJo!paXPU;rTJ%6_2AE=k(_`kSXacM5d@C5(0*[.+-SqN_.dbo4g\HO$8%MEH=!qp24d8@cHMc$[O`^D5S]W\]0Q,
%]Sf?q0o30bJSrQ-#)?7^^4(%rW<%.j!Np;+jF`n5\=,JBV]!3J;nAr+q^t.K2c(0;iX*/`35.U?KqYD+Y,3oLl&IDiE_c,<m,`PV
%cVFB&al%X-paug9Ai"7oNPXn"k1.[G5>1QA,O$!JC*rSQ5qa2An&o4c]P)'3*IILZg!Y(#X+fO.\%,bah&2NIU3ke,>tqN'^ihU0
%YHjUt='-Z)]mRSl7MJoW9\$p\NhQ.D^7L[RKDV^++Z6X<R[b!NmH"J=8k6'3ku=O$2,U;]bgg7#Epp%X-TsWCqgeC,0:rl<qmcJj
%20Hm;"^;)N3IL@c>E<)CL>c2i>\Zl!cCX5+0)a3i:'%>>SZB.!HCuis;<pO.`S9LT=+g@WWI&BhFMBI+\kqo\'tJWPU@R0A2`,9r
%F8;-ch&E2&\Z3>lnk/cW+psSpkp/o7)cn]foZKMu2Q'??/iLK?9c+k98(`l`G0VtikLWSS[P@WcBZOQ4T0<8[NIp+fgR[n9<4N=\
%C%$+dBAUd?3&;E^1hCI-%>rI%$:F'hbNY2dL1@^>Pl6qiU?4I#RCorC3gJ%cf.h2"-2siaBQ4p8O*9)cC>EbIb.];>4\^5AbN=.V
%]DOt[@Jp=PXM$(\:KdQR/nNADANr(M3YjrW[TNl`QGo'XgnQlZCq$d*Qh.IJSH0`YRd9"Y!1Ll+_3Y2egY>bdBtX_M^)^jo_S:Rp
%Ouo2^Jm;#!ISn?n>_8iA=*lT"8,mh4ZK9?ec@*.0BfYR%9+Q$1#^ol5^HA"NnW7C/Kq\.:09&=;A=J!jO+!\LE&A:'1a(BjjY^dr
%hu1?FZ$40tYJuLTK=5;&m:Q++n/0;sICuCWh:?Aa4,YY&*U?25-hoM@eQhMLeo;c(UeRp]$[ZiTf#=LmhenBa[BLSbBhbR*YOg7<
%$R!j>c)`tO;[XNtO]L3rMPTl><8VTTA<i=k%d!t%"\__J9*$;A'UPKC=s)M[%3t>P[k:D_+L/B'$F<(O'T/-`lu)7%&kK*E:T9BG
%e1-q0q7Fe]2_EnA!W'Knr,$SHV\XG1,-<thkZeK<dAfp&HHnm9G3a\pD)[-+YBDVrFpB.j2',9=>HJURc6KSb$R!ik\-/qbo[pYL
%_*c\?*p6SN,h4Rm7:?K@--BB-\1T)2bM-4?^ji/OIjo_NL3a?.s2.>T6rFn]ErQm+F-$3@57\U+nesBje7Er<a0#q3jt@<Z?/:Jc
%,FmcYD?O>ST1atl@'/&=j_^6\2(X*RkcsASR"i;M!n1E"Q-6f5k<6i'+'m.c(mhDf"ajY3NiZd;H!2Zd2.]n%P<,qG_ou^nlZ_::
%%OX)PLqA-V-g7Cml1hj>'UN2Zm^;$eVbX:C?>J;UG6XqS"D`"X[AAH!(7j"_4rp$b3I\Qf$EJlo;KDBU.2C2[/SW/\d7UVYpKB9m
%l[oX`!PR&Jc/&XW^foN.m4#GL2lCeM:Bup7k^E"'XMqm()NQI%$uH$Y<dg$=MG(/hs&)#$l_:R;>,dE%4'DZZGX&q=eNUW'FMr#G
%a2+Y>28>9q@:@n_LH>t*>Z10ir@>,sXE:DnYT8)b0cErF*0)aGf^h;NlSY,l&e;s%Q>9,d(elICR2CVe8+$C`@d4fiEGaQY]?G.b
%0[@_)=9ZoI#1ImTeiS6$qlQW\29afuS-0f*E^38gYqJ&hS/taG`48?As$peGrg$n,V+0510%I"@8j]N".7gA+fe64:Bf)YU\_6'h
%.SZ$T1h7Os=lE>?_B&A*0'DBZolsaA7qmVT%UPKGX'8%4N]+0NK@IoA*rM:c8;"KeEW("/PO+L0O#O2b6ITq_e["4Hb$$^hfa*"0
%[%*@CeuDaTNUApbJ'VA1HH9lIpT`db.cDgl-ne@GHJ67Lb/>#r0CKI6Jl7Y5>1p5[R^_[*/@.Q^$>(U'%`>lB6OE<VPg\8ahE\Nn
%>I;MQj,`4qnp)YB1r1mfVc]#GPROme?pUD#?..*\Hmg,!+Nf2e+1>\"0.1t<:+l!`F7u9FTM[C&_0ejIgqDX&3l0mEgDE&\7_rI9
%fC=uT=E&j,[=W1#$Zk`271:(<K+jdHVREfI4AdJn\tSqUh9;Nh0K?n]%H6IB%a`<La[?AP*#E95E,+-Ik^epZ;5^n3ce4^PUL8%m
%jfhnV&J]G?aj&.ZOr6(`"tQ(\\7&Sh-Wj4rR!\%n)D2j`$3hk;j0^11cZiGZBHHXrhYJnPft9&;+$r0*A+bF$l3*I'TC1S402O>^
%_7U7no0-#K-^]t#+2%8RTO;_jq#mD9pM1LdJpT]6dJ%#b-lB$nT)9Hqhlg&0$LU8#9JV5i_;GGpE!hNlf.-%gV`_'M%WHuN_$Pid
%*27Y8ME8QW.l`>NUL8%mgTg4$'AV;Z(lY>cGhtL<;/6jS<\SGLSC.cm=A^HU++#S$C5ERU':^,])SK?Se-a4c0eD2?1l1^07lh=G
%]aOQ"@lRC[%e`.JXFig60%f1h%ecRX?k8L>3Z'^=JpmO4"T(Z*Jiup?lX8)<$hj@HK0?.nfE:6>%L.p(@#lBXfRoTD4[9MC.'HJe
%m"'5^#;ZU3TH)P!TMZNlnH0#C:iiiGb$c;!)Kim1rEt5*UGfq0.#2q!B[d34r4p,ie/[h+E``R!7U<7=%ijq%c+tGLLNP:ae-13s
%^qh)A*:/5s=9jIJ?*M?[*:,u9_&b"[FYILY"oJ"G$20A4"FHd]f"n"V([UYo#CB9gYQr<Z*=Nj/_&bg[YQm#jH_;A0_4XXAm-t/_
%HVedf#KgHq$lX9)^AVGkIA8^:*eGB_5qPqUm-t/_HO+Yr#>/tV";5gm5$]s5*lF>$fK;[;q2mh6*7hs!;&ATh!sO%GVI31JLNP:a
%e-5aC!sa0LF0I$V_`AVkl@M0JTO:RF'^Q.fYRUks\mUR@&F>5k_4En%lR8r6)si,SYU=#ip4RHg#D5KOYf@7gm"q0_4eWkH_4XXA
%m+W$jlp8n4Skop_@*kh[p@s2j4],.^-^;M0(c:N04as&3:Xg*F$0AB$#*$3%Nuoe&'/]r?692-"6)-'bis,qb6qtLh:_)f!d&7?G
%m0=-pT]TWX.#2q!B[d34r'8)iW%$@4b$c;!)Kik;5>\R3C'sZfE``R!7U<7=%i"AeRY!\r*7hs!;&ATR%ijq%c,#tS3NRj:U-@5i
%#7C/M8AUloMX)CHTF(=a/3h,NVYjcmCmaq1lG/u,UK9][>,/M'nHiFPF4ZQRR"f<+L[@h[06&E/V<WC>s2XY93OS^p/H<!DV,@Z+
%N5s*]Osb?G!ISdf;Ah=&gWr^5)Q.VemP&HmH#XM7*fmnX0csVDq9h$j41(Lc`QF+Po$[*RX&OO"%0he)6ajGk/Ttit]G@P#>/XY3
%LApGn\6W:HLNkq\0X"DXhR!dO39Y:Kf.iS8^;kNFfeUnH=SS1=jd#N.[IqVU?5>]M(-<VfGZI>0.l+W+\%6-WofFa#OAMZH)-X3>
%2+iH`D\YrPP<*,*#aD=?]V!1i\=.V;NYQ&_e/=9Q%Oa&Mq46R^YL1nEIlZA#Gq$HYd0o(qO4.O9q'c"&C-_StFUZe$pN^(;?acc?
%=h9T)B%&FU-Zu;TX]%74]r_K'r]'7;f+)IZ8sPo^)NV4W(gV2Y\t+&Nma7fr>35_O2^mE4g-VRiDV$K4U&Xf[r3@_6VnB83pb:k4
%AKsP=BU%7L[JTKrHAZid$!4)bhojj#dp.4Re70RZ51]_bs)C1$]GUQKGJVTI.(?nXF];-\GcNoJ&+C:'k@9;C]q*-^-rXn/;24U`
%bF7(a3bngdSMeRaG?O+;+DQb4NbeH#(s6U!oUsYeT_NokGXD=*+097iDqd;6\t[Km#h4LW:[7^Q-'\9tS^DDX?eLXtQ$"V+P-<&3
%6oif+s23a7=c:mU2?)HiE:$s!dfn@TFWc_?<(A%Y#j(bZ62TuXHlHO]%fk_,W.VMc`.I_Q;s\Dloj)Wp4-?r"9m>'=m?<phFi#rD
%_sB5&BnAs;^5gCGEV5Vc-r]Hm8>SG#pV$mehr<t6k"p8rC8[QhXp;T#$'"Ah!p/.XXAEMTK"!pGT:WbL'A4tnG*d(Zb&S]j^$DY@
%K!4VmVqOkQKt`\=T'D&_4/pMYEg!7417c(#]]W5\#6D$o!Q4\'ale,4ZCi+@h"5!$`Rf=A;ba0Y6f1JMni!]2*+E'<RSnZa5>JRm
%Qa3W<(rKH&?G`;K]b5hii<lFA1B"u1'6R'LZPoCgl2e;Qj"bT<&:?3MemW)a".Er97VRB"#BPYlc!`4TDjN./LIn=.=X`/B-Y"+=
%W%j>J8+B*/!)E(W?0tTuYG7C'e*ET%G;cajejK0>:XlhU]*UVAPiH?NO?WRZjU[uWbY+N?XXf(iG6<e5-3(V'di?McL_hJR&4l)c
%2TOe<N,GTs.o&Ih6P)krC@f(a7i:538ok6ZPonaCKM.QD"V>n5L56q#La$a5APm3Ne1]'T$.gS*3F.c=lun6V9qsF#C)UDAUsD4m
%&U3`U^0BDKdWDja?'qEG?hN>1N'nW77>pK0URpO2p^e_Z%;rb,%Ond/MgG]F.)+M&H%k)S#tfKU_ouJWS5)u=GahK"1-08F=1]o8
%dp_N=a")Md4$Q&'k&a;LR#b'A'0f*D@m2)F[!cl0";3O5U$rRpWku\VBYl/5V(dNkbu,;U!D?F[)@K7V`M+&Yd&:*I69igp'r%RZ
%-B)D2$8ZAF/61XNYZ-=UZ-\/$/4s=TNLH[nr'O\g_TZkn$%l?E_W<Yt92uhL;AEf`65)hn."rNqC6kmh%p5jKe6$D$-l/X5K1=*`
%(&EKIWXq$>1gq)V;OBbFAuQ.;J>F_hNJ/^<@SmIgB[eS5i?,:'KrM?(KMa9m@0V^[V(2BFQDuVr(7Hq774HHR;6s5UJ&"qsVT(q9
%7^4@q))Q)oWmD9`</%8bTa@JrPemhI2+psE#:rk`C+M2M'T5kV6)/%k$NGXQ.SPhU-B)D2$8ZAF/61XNYZ-=UZ-\/$/4s=TNLH[n
%oE-[F+_k1o_LbmS_UK4+93(`l/6-+E/2^kCX\*"'$(@\?3M2_W](fYTO2pU=4\uLO`1TsHm-+`bp7UPU&!Xpl0kf&@Hi.9'IA8^:
%*[l_b@aM%_p@JFlHVedf#>/Eq(c5u[4oIX^*m>>b!E*$tnesC%So>25@-1i-PeoI9B[d65qLO8^W&`K4V6E]')R[C&5F>j9W(jK$
%8n"8-1hqY+rP65je/[h+;HP:NNS7c95B*h32$\K$'\8+,UGgcR%ijq%c+tGLKlpkOW"&Im!sa0LF0GmA@@\5lC4eZu0YtJ#RpZbk
%_E'Dbe-:9rJV-+a3S4G1YYGTF[DAG`i*[(1%e`.:X:p4UD6To[37rkPK0<$<lboGn)sm*I$20A4"FCDP==7j?\mS;uE3P*?#CE,"
%lU2j])siofDM2YSrAi?gJiupO_h17MDIeeM37rkPK0<$P_h17MDIhXR0YtJ#RpZbka7*K`W#OFM#7gI#k$S^aa7*K`W#OFM#7C04
%VI0pra7(L\;*2&gcG:RG*:/7I(`j)(FX)82^qh)A*:/7I(`j)(FX-eWK*h72g&ubq4GF)n7bu-,5B*h32$\K$4GF)n7bu-,5B*h3
%2$\K$4GF)n7bu-,5B*h32$\K$4GF)n7bu-,5B*h32$\K$4GF)n7bu/"rEt5*UGfq0.$*?'TM[YR`t'0V6-[4e.$*?'TM[YR`t'0V
%6-[4e.$*?'TM[YR`t'0V6-[4e.$*?'TM[YRDa0Ushl'8RLEMZ:5qPquZH!IqlljHd*[hKW5p4"U5!kre:$j/>H<8W\,%6F;!26bh
%Du'_c2q#/3c-bZbHq^mHKS33MDScf#^$?o-3A9HL'7XmthFG8)NQU^c_4X[&=bq<V?(U'P#ijk#/HYn2X79E/6clN.\(NE1A/)(t
%noHBe]j@E`-#jqY4EF_]aU8/]l=@rOYL@!'2-H^7Xb+Z7Q?DhO5aa[1DJP3_k\=Eh3F3+N[P56<A;h.DQkOVpYL1loJiV\&Id:KL
%2lE!Y-SC1Z@LYAn`7tr(+8kmqP`*+10[KsFSj3-sbF.KL0GoRTQZ%73_'lor8sm=]WJRSt1s1f$ffU?;?[p6PMt5=ma][oCY>Mk?
%C*&@4;p&^eBD(CLa(&=]p[j$BPNa\iFX)JS*O0s?Vr2e@eqVKU(hIIL+Nc>)q$?)^cItHZB8uK\?.Si3'rRen^2<'*"@\l8&]b3X
%T@=l'TnrDiI95ItXm#26:deiB>t<j64hI\OB0\ItWJLLq>TV=LedDOjC)sQZ'Ge@UR::Z(YO@oIh2//&DS!G$CmVuNY-XZN[mZRG
%!9H8BbinB&4O!dt*CcH#B1=B*&\L%df^9M^h_g2#'3.-MF>lA80Kt*c,Qnr3GWH^A$!tYT+).(+^+L)OHmICrB:2#qGuV(rdj+5p
%?f0D:DmmA/oNg8F3:kaX9:*a&jgrQ-llp62GjE_M9Di/KK7o?+bJSL_ZCi+4h"=K*`Rf=A;ba0Y6f6!Mq>-m/O4Zb@qt*^_OtrHQ
%)=>Bc>).#:YB8jU@q?ZDnn/fWHB$@W9T@uuq=I&\^:pY<lJZleP,!9X$-J8tpWe)`Y.[Zd\aC[6+Ae)\jWjW[bEKMhI35A$5E6Ud
%p?`^/L8?F,:Eo+M0]b<jBre5N[cZ9?nek<K#OO,+p.m+n5P>/qD?pu*)Dp9r2B3[@J3\]crlb5Thitn1P$q_g[p5M-JR+-tKsf-L
%,X9IaQrf\Oo3<2I(rnBR]MJ@amaNf0G04K;4!k)8qh3pQ`G6u/;:e"2@l]TaT_;5*Q+--ZNk1/JEE)Spd5#Y0oF)Y?%.8[_7p"go
%aGF*:AF[e$(>nm*"iE&@ZO^!&),@=UO3aS!7oa$s4O.@t*`>0m1I%E+ou3FcAiP!0g%#_Hj`A+]Ml"_@a2[,NI,dK:PA1LE-&12G
%Hi=.X>eOOhLS-5*Yb=`"#*!rF.K(rI_0o:75RhjGd&7acnc@47(S((YC2Za1%<Z1-W#&^F1B]@uqVNIA?Eg,X\hRmJ$g'==?&Rih
%$_7Y+29_=NJkdo[=f+'&\^U^t9./=fAd3lW^#8Nb[qTi6ED.6mF;@TLTl(8WFb4Rum.U7"2X?#2[8+6p'E/4)DAjf*l\%a3\XO1I
%-rYaaUL(/b$Oai-=:hF)D@@HVK$@GW?un7OfMFrk(c:L]S$NsJk&*YmTn^-5B[dDjG;4Egh2GZ-%<EhWTMpKL(qJdH7]rH/$jM];
%_<*:"#^9cETSC$4B[dBT_:9T:/1Gl`60HHINt7T;FjHQg,r]a%lL8be;mhd69^?["18Ott?@Gmu889RRTp2MgK1:7rYUsoEK>)F\
%YseS>=jOp4Lh/\.k4cn(,(CK6`;QcXZMl;_=lG="S"CF-P]$[5)E!@^2kp8`d?Ai/6h$),7L.tdqcX$^qZ;C>Df>8)$l[.12u8uH
%n[U`THm<%GkdQOXa#otPI5ch(?&_s,[lth%;]%@P<L37RJ]UX^DI8<g78XFq20g"tZfmdS%$%G]O.i(\(cf=jLQ:pD9iYBWkY]]U
%h=GkQ^"69?VI<4EpL1g)Fc?^@@1<0k%4#DP<6<1Kk63Ma![_JRjlfm@:P19F2qNYT]Y^W>Qhc3i^k%g7$%\tFF<,t2eu0[tVg`>.
%9=<pSUrQ=2=Qa]OplJ9L*_PKE;cir/f0&k5ol(lTbRJQdY'E@%/as4F;)$WL8t#+3;HWr]:=KVgH+:N5^@a>j#5:g"a"SQi;tDe*
%;(ELTpjF64lY@1Ca'82GPZ8C_4I-4+NM/J&:uCHq?[2j&?B]RA<6cF422mSUc`=ZPT_r?9TM]1>9p/9jhM0qko3(bPi7f!FTl(8W
%on"@K$L@*`QdVp]_1iln`h60^QqtBO(GD/:H9FaM/D*cdh&&!6"_1.CVU5e>O)5mq0A')gh&&!6"S8),(cEb/dd=OtY'u$Z2&J18
%"]L9s-EiaK`mcDCYG$]]&kLBMjlAS+?7t;%OCg/t:rD'*2!Q/jF-c1RgZG'2U=KWDGRLj!2iSH&F[?js]<NJT6erS9l33Z`(r>?P
%7^/S@\hRmJ$T;WPK$E,1?pbBGA'h.jCsHJmS%BQSL)T?sTM['BB44*9)[c^YC+s>N$W_I+HHk9)?:,0C-'4d$CX-DMR_'HJL)T3o
%TM[675KCZIlEI0TlXXJr1@-Vs'2!Nb#UJVCocGs3CoZO<lOcq!0&Nim?(bGB0PL+U!VLC&Mem\%lWA&RPj<.lY<rEV-E+RH5B#$K
%_1R0$r]9spgU_M@KMp'O6)-X^0E8Up]57Fg2*Arcl8TfHSC.<4I%Sch>P<U5X77qn=$p%ahFQP$Bj?gm;_b.ZjCF`LNMbnW;/)#e
%)MS.bjKVY[@j3PX?e70WCFB&P(SSEhKRPTprh"PoB@!Q^QMoUZ.h*;Ufc?`$lE\J%m&stoj8?LAP<^Y9;t@@'MetF31/#a5>,ETD
%m+KRok%P[p;Ur4!C!JLNAQ"/@O',rJes,L%lZ#eb`h615B=fDCT=5g\o@f50(jT,0=YsEu*rE!tGoRjAEf#P<OV6:+BVo@_0B^51
%b3^oHVYN3Q:STA^bTB^tZn*`>"SlcpO:f5nWF#B6T_qKe:qkgI-PZ4uCPC3cdl%SukLf:"2/94eHYP-0\SkWm]KTdeW]B88grJii
%F8ed\>R5`rF:CffDWo38;.B;]SkXWi`.H`RgXjs`2UkP^#)t[["WQ1$?n?*K]O4*p)@RPWJn*PPQNWYKmC#Z>5RhjGd&7aSK<D^9
%?>sXt#?e:)L:T*Qe-dn*1\H@An+She_1iln`h60^R(pHJ],(nOX7"4?2UkP^#)ueP5N,?q^-'P>.b76BlF\AOUs^[KH\k5.@(jJa
%_B2kk-rYaaUK3ImS-@j^/-qK=M*[n3&2m:8j:<M,-rYaaUJ;@Yc@YNj('Me0@*khcKT3;\r.,$&1,Tn*l3(PU/-p`56(gm\#)sNe
%S";0VQ]1K-EXhgj<rO>0n+MJjrD<XB53+Zer?')"og@Rt@&C1.ZFLPp"#>mg6)2@p1;`rHoWbndKMVk26V*'MO]'.AmNpc]J,&Z$
%.QaP/gZ%KJ$^@]g'82sdV6:uUSttN-8;Pu>,a<G#f>+g2r?u6r!tNHKpY^c2'm2*rhnFcW->Odkrcj11^j#'EY`]nZoQ=gR=FM7e
%<#S!3i\[04Y*O?gPUMkUoL&VF2uJFpl^cH[):"T@<4u6$FaYdo<9+M^]Eft8k2hb=YN+X(J22*rY:qJlqs-4c@];B^Ab9Fsq14&^
%UJ<L#ck'5*QpSV1\*0G6:o4GL7\*q%U<u*$ZYs3k3`?;MTM,e!NB4o$6=8<4=n%uA^U*j@DuZK*Up814Ge%fXkO:Ts6E&nkO[?nR
%p%t_I3r-3;H#oB9DOT%I.efITGsf-YW=GH,0oqk(@htZ69IP$gK:Bq)PQl%T+P+jH1eNC&_-;9:/V\3qLl]SSq'EuDfGB%jk;!Gc
%gUB1c*om0n<-_,HhD!9ib.8Lsb$`T[5FKQZ[u`])O]5['`E7Q68)bT=?5fY#JCH?r+m.l)V=rR4mO<.j7M3)lFjDR8/jXC:1_:Kn
%Y=0ki/(o8inSj?UrT7D<p2.E2faP:12UnfMBhqp-`[\Qtp@Rqn+'WiuqdCDu1e*ACO(k3A!1$IH3J]tr2RUYf-Cca2=>1I1p=0O/
%e5/(.NI&G>Ojdts\E+7oG;%TF6erS9l36e9@E[j<pIA:JJ;1S!f;OnV-Oc!^-)]G"_X(2o6CA`#)YJ\\aoeNk$g'6D6L]R92:RUO
%UL%n2C"9Y=_)]K+_7(gh6erS9qX#O4><%@mlj\cRN+*pN$lV"@6agqLKK$+X:o4GL7\(YQS-@j\/-qK>_4XXQ#TIEmjpnKE5UJsG
%NES?JE0;Ga+?`&JRM[mH"C^7?#]F*:TM,e!NB0@-3"*SB=:clZK0c:4E!h5`nBn<;VaZgT>_LH_b;JaX_VbQ\.Z:Eg9[]ZE6'AcE
%cW_p3VpTG9LG#BBE,!pH8To<j-!c9=q9s#'/$"NIg;'J"?k\cL%kC$o=m'u<I+o>>5@@/nE1:96JPcinEh8Sub:i266JH$JB4Ss-
%fAT;")!c?_1:GEGm),!Vj@H`=;VmLqoe$/`9O6^DE*=",%ti<2HdT8Gn$(tD7%*>?&*P=shWMlD!G1C_+@2n@O,Yia>l&eL7kY+3
%RDGOn.sRS^(qa7(`%a_7#aDFk$lX8?9A]5JEIrI_hKdhg.04!p0PJrBG#nIF(<qI"m/3FIh`-V36Q8^/n;rKJ>TQEZ>k-`CTm'1?
%I/H;jrKurOXS/I#!CCK/2pELaEH7&e=B=q"W:9&_N2aIAERPdAe^.<6";:V[P8Vh)51ZjM<N20"N+0Rdc.UdZ/!-V/VE(QSo6?78
%>HIX>^Z?A&pn$UojlaZBpDRUt3>l$Kej-CiR"kOn29NBi`O]-o"\OhNRk%>7Lo<IK#o\H[T%MLfA:3fpl/q:MCh,NSS9O+:K33ZR
%F\m@CgAE;Z4HF=hMjMV6kj4MbCT*qE$l\ejb@;UQl36cK4FX/^:da%U2!P7^@9H>ZjASK+0A')gh&&!6"h-UBjn7284%&Xd%5l@p
%5_<;o=mbQWRq.;X97L*ITn^*4B[d@NF]a9'D3?R0o4p$-fMJFLK1<VH`aAnh&<V>@_3I7o"hD98blEmNS)rQ8X9Xuh_4XXQ#kMXo
%\,m$>ASNo4e-X")=V.aOJj>_B$lX8?c+[<kY/#?KRCNo#d&Fjo=UqUME^6$1$lZO*ADSjC=("=e6qn(.rJ,G2.0:RR%@Ci18qnbl
%ld4>-C\5=Y%*g<$W`/o`@<@\ZKQ=JB9$m1<>kQQ7(u.7'I8]I2qp]b;f>+l?@*nMa"9pe&VA'ld!%_bqgDDkVea_9ir$i4%K!#;R
%R_JQ5"U8$<A'q=rd<6^PYNJ>&8Y[%[T9+]Tq*>\Y!@2,(Y>HY`da0bn?>^NgD+9p3$lX8?>Fn`]]\o4u3j)d#-rYaaUK2=O`;ER%
%`3U&&6(i%9K:%-$]N*>5kf]DN>OEFTIq/:5c<\e)##c=#7%tsN%%LLcimEhfn!LW[GkGJ$3O!d&)A4*gO9Ukbj\7^p7j;o!CoLpd
%+;L4cMLX9T2Y#:3+btmjlVu5ek;QDYm-:`>'`\#C;9P?A^b$&#V6TeR0=E_gBZ9$%8RARsoSCPSHjk1g[@3`%rU8iaUJ`*N89L"/
%PIL$iUTTXpf(3;!3:>0Ol3WnKh5944B<G*VXE0dYA?b+,X\h/?e#6LVJ>e+%R(S-c\h,Q[4E_AHW=:6L!%V`jf$kG*lc*D*3ZK0m
%EIRle4!"1u+\j01?.DKsrK[[JV'%H4HU?l*[FILW'=<`;+4HW1kGD>jeF@tBTO,SqB+kIP@9FOHl[+#Q2,HKo/d1q,.qn4ZB*N:]
%)FX*KK;W*=\4/J5X-E?QgYA"B?n6)J[PVU\DX%A,<&e3J>#ks(\CF3nnZc4LYo]94g=uFl<*4aSZk80U/`,;X<R@TDj's'1=+:[R
%\CCq#W8V4HM-6\NZ)se%^BRnV.s**cYDY5l_"Fr@lg._"LuQGd2iV!6EjN\$nd%2Mb#nA4S*Qqm6euR+XrDc5DfQ('G\&^o@I>mp
%q",T8%!+3'b4J3e%MrRAcAnjcIl>d/+7#&cNoT0P!f\=f:k%&H,PaE39\Y\ge/!2n#]DLkVfgO+123!+Cg[!blqulM1<ER6V&oMF
%,5ZALWdIhpK//^Ul-O!*qf0NR*)l!61*tQJlpZp`;_O]]W9dCDK\,J?a3RVZ[5u]9fqYY$<E^n.5*:99KLr%A"tXhlhkYgqRSYY\
%Og'`(=k3,8Vq7bm2Rc!o-kfXLL<;@$VK$7oB=3g,Wf0s>Te_P58p`Y8?"SjIA!M><bTgtNFXDMp]g='E;HB'=au%NrSOoGR67+*Z
%<gecd7+,h@=eF52.]@AgQ&3XG;LC$FcKP6*gJ9hp=3a`OraY*M!6Pj*0L(]opUPf,U!;o>*[q;Xn(/s,"=PXlhT\f`7nJ8tZk/<)
%Pk-\L->fh"JcX8n2^_GIcb,[QZ!'"%&8CMm$'J4&hp,`aXosB$OA`PXi/NA5@VspB@5e\QM&!]FJN"(qM7*#&K\\V4#:jqC"Pu+_
%-e?l5&U*3mSQIWC-LgJVpJ8-VY-3(UoI@/MqtVrG9D'%'MdAjGF[$s^I&[,)Fj[P:^@(1;n<`Dp?5J$Jkj<hf%=bAVicWYTaPQ@V
%bYNC6Wk8-fo93I<m-['`r++]ZqR_eE5M<NerpKC%:Ne@j_ttSJqrD7TR!OLq*8o':k,EbIM6m^78+'D_K"#<>UkAH&$6d+c,;2Gn
%$$(D@R,U20.D>m0-U_q\ReTW;i]C6Shgpn'U9Fb\^=*1Xpl:,'nJrbJ+Grh=`-9'1hnb3F51/Q&bm.*JJfNYSVYCX%MXLPe"]8NV
%2ok[L0O@g-Us*!ZX#.4;AJhU$'9Zt0N)^eNQa2S%Pmo1S(=jsPm7UU%lcOsX>q9]Uf(Pq6j)np$b-6T18n5KB+7Hf-pWIN#9\G:r
%n@j>k3kp+59LU6u,L8PQrT^dF'pkR2H$8WPS(GY@>_rsK96oj,?5pZFCM[PPhYN_n`p`aB':CmorRG]D2dME$9\rp%o@itF=(<FQ
%(PI81gA"rLF*D0[XSm;#(W'+)s%2\T;RZS*q/W$T.f]<B`r;J'ni)E%NOGC_s(]:G?"RfGD.i7NR4nS(ZZOU'Zh@bNQbQ0FD7&]S
%rAX?0Dc4d%B`$3.C6,kE/,o3N!;ZJ^At)Y&JnC.\EA*OKc6[u/3*Hgpjs.ui#o`j1?chH3B7@ejFCL[R![qES9$kch`Di=<Y+LQ*
%o4<:*.\nV6YMdl[BGW-N5nlQO/&pgt]s58)Za^-TDqn,Ag,CFUKf:D6!r9i&:0E%2V_B(@pVS)]Jm)>d<i@Sc+33FdjTO5FG)n0J
%A'9S(.UGKpS3"6hI!2+-CtQoQHTB^G5<7=X:S7B2r*We?Y:4DT''+@FXOl^"om%IBXX(EuZqFNWQYhe[rd.aZ>!k^8,b=7[b'WN\
%/J1S#.%CMsY/ugd:>jTOj;TL"5nlQ8c4=F\(2&V8.%fnndl<oUlbp%R&M7XflY<@SSZcgS_W7a*&=&@-eMl'!p5T$o0,s2'ckOdb
%>Zs7Z90'XBjUTIB<I=Z[h#ELT1o*n03#Ombjl;H^OH5Z_$pG+;*m6:SNktiadJ>TJ1(O3OrP^n^>U09RDe2;-@@bOGm-Be8om`4;
%jrL#XXoZYhO34=af=GZ]!M9O#f=L95XkB5*S=2"[1!3!qIGsXS]qd-Z6a3\`[o`oEZqX"tX"9N:f_t3NN/oYEdC+8ujs\e6+)@&d
%E/M]$W*8$hAt2!G(r("X+b'f'7bGU:/B8sS/`[FA93^"s`rAnpA^=_FnUs/Flh-C3R@>K&aQD?:9@1rsr6M8S^=uPol<.'?:?1m0
%I7o9S&:]:-""*`o-ELs%$)2[El&m(If_,bXH2meb*::]JJsM9ect\7k5!-KE-EXpL`uLWc5b^\e$!OGnH700>==_nI<ET\PdA",R
%NE5HRQXaZ,db7Vf>hnop&@>DAJlXBDRi^AV8f)EH[g`Cq(<%S5[BcKm;[6GU"gu>&&MPCt@0mhu^M>*RF\31BF+=pO3j4A2Z?EZ/
%5SU[;!%kL!>\q'IdMc=+T[eY!Oqql)[+HlI/_di:XVQk\Zs`3q`Epr*g"$=?[)c?@$arf6lkPf:fX_'b(5ru3AF$bXGX\B=>8Ns_
%K"7%F1Nnp*VeDlBlN/n8f+*mT@4#Xe#A2514q<seQ7g!Sg0/t>,!0_0&dD)\/3tK`1PHC!*(%Gs'87`GKOCPdJqZPt(ic:S"BgNh
%'LFKl#QY#T'pbL)JorspZL)fa@Dn#>&i;p/:'``#L/*AW&Oe"e1=rtKQJK-RXWNq<ooR1o?*>ls<nc8R'-b&+QP'Kt.P*k1"NuH0
%ll&4+L_GIgBS9c]&;"1T#T.QUYQS*b//(@SCBsqC-P_r?&V=RP+gUEW.:L/O_@e[lYY>B\_hLp=L_3'%a>2AU^-0=sH=K1UVt5G#
%k@qS;$P::Z\O29k)]'G@W3jRQ"_b;OT;2Y^-8"qD7a'pG5cY&%,qW4YBsB0F>./AN)D/6mdXmUF(4/EF2+B2`Ws(kE(>1]#2@e,J
%g!0b7[:$,4eSLePa<_`RS%8TZd^90Fg8hg<HDI[C)n;e3s*<N*MG#Yo`^s^Bclu]7`<:dYMG)<2_,s8:[SC!+M&+&VBXM6LU]jsM
%/V$6IiY"(OA?;R1>:2"QTV^W\Zs#.aBT]FW@KMB%`?f3*@'6<UN1Ha_7\hF`6)/Pd!8ET/aZD`kT?\t<=kJ$2;K:^sU]ju#MiCe;
%>%?k]kd6e`Z<";SembgrZu#%kkd6e`Z<";SembgrZu#%kBXM6LXOV-X[FcuZXg.O?FBZpk8IMt%(E9PkZu#%kkd6ehZ;ri+Q6N5?
%Uho?[BU,_@@*2\*]<Q2VN<="WA)'+LQQV/i#CmRM!%oT0ZrC:^<XZo>>&XJi!_B[H/jZNA@jN]d!,2HZ=qm<rd3<'H/N<`E!<ath
%Q_;l\YsO?g!#H;>Zm[OmWs*PjXl]U/eM&19@0mjKCBqp.cZK_:JktPEgGm7!ecglhecDF4[Z69*=&`@5lN4Fs0NQVRXcjNI7AFEu
%(SK<1Z'#l=S[@$")D0^T!0%a3.quiN8W19VdMc=+T[eY!6AoY#(E9PkZu#%0Zs#.bdV?cs;WJOOP\j]V7d8V-6=+ah3sR`2lN$/r
%6>,Ts6uhMmclu]7`<:dYMG)<2_,s8:[SC!+M&+&VBXM6LU]jsM/V$6IiY"(OA?;R1>:2"QTV^W\Zs#.aBT]FW@KMB%`?f3*@'6<U
%N1Ha_7\hF`6)/Ph!:-m'ZZUd3HoeIH<rt)K*^a@Or_Oe3a2Q%G:0(lg4_BseW2'PX-RJJBb0">Q@o`nJ8kQ=.;IY-SXDHr\AsCA-
%8I7:M9'd!7X"j,cZUuoK.$95D@cIi]PmtCHX:e3kPa[/e&33)=AFo4DUN:;CqdU+UE@-0ef&X<Q:;rX1_GJmR4I!puEA<$(PtERN
%.`"AA$._gC!5XQ@$F<>Y:f;mfP7g-bU9qdr&fE)H_7E2E?t6%]$F<>Y:ahHKj'i)+MUDj<8ha+?C?A5W%0J!#.a7*]Rs[=6Q!';8
%_5HmW]RJ7tGE8H%20gU4FlQrk#:HQ,miJf-0MkZ!Fd!I86"OX!mP1aF"!o6q2^u!R<)tpG*]$E!TVM_V-7/A<PLZ%EO'*bG.$Vfa
%EO#%db0&l&@o`m_8kR@@8Vl/pEjBubR*iH$q0dXdV]W"^=4!?4SsLbKUU>"LU:;q(dXlnr`<:dYMG)<22'Z\7B&TfpOD%KrJl\q?
%.;Ld[B.\X%MrG@+=tiq,C0&V`!'s8s-"s]TWKJ%`S1Z.MBMi#d<i_W=CK4;GWJ2!6$;8_o>s#joLg0$B-hqdi&]<,Q\c>U_3WQP.
%eo@tbMFqZ#?%>r``_'F=Fjaa&BXDUA!jl,b<mlT%P88L6ULdXGT[=rn,q[b1BsC`=>%?k"Zs#.aBT]FW@cJ2_Q>KoX<X\%^>0Y\k
%MO^E'ZE4M]-s\pMnd,&ADX.9MBH:K0/9.,KX\05EXTLhHC`O<*#[/]16)t0!,q[b1B`TJ_'UPKCK!CISCn7p5&hSu6ctJQHOqql)
%ZiG]DMG)<2_-!C"[Z67P,[(nKT[eY)P#aA^P%khrU9Fc[d^92<_e/Vm3PYr)#7-A6T:0Y7?%OJB*<98RlaW<Icr+ii=tLRABu/@l
%$R!ik\-/oLN0UbXl_F]GBMi#d7Z34jZs`3q"VA%?>_5ua`X4<'F^.T_dA",RXVT-G[$n7`<5XM+KdCDsXrUnsK\/<##sOn]KPg!k
%?%=>@*<98RlaYSl7AVlM/jQH@@jN_Z3bbj#1g7>1!Eq&l.quiN8W19VdB]k^ctJQHOqql)[+HlYXg*!L=tLRA[)gg<Z13]@bI0#g
%Ws*PjX_-oF78D6$g"$=?Pcc#L5/qm*S-,:SFb'EFNa69N5npd<!%kL!>YH8RWON)5(6"Nc@-aTlOD%KrJlW9!8m8HAdK2tH-n[f\
%7E.r'Y]\@q#[/]16)t0!Kbi?&/gcZn;-\]R$g(&bc.GUf@76!i&i<4I%M4E9\p4OZi6us?r;bR(H4NnnirGkY>GmC==&`@5lTOI=
%R^'/!ZZXi.Y@t:ZlTOI=R^'/!ZZXi.Y@t:ZlTJph@'$H[Cn7ud.k7[+ocA3YbudOF[S@VXY@t:ZlTOI=R^o_)20P90VeDlBlTJpH
%XrUnr9]NQC#<5$0!-o*D3-e_p+GsA.J/1-F/g_.:<*Y#U$cYeBDue;f8@0ct6)t0!,qV(VB`TJ_'UPK?,%DoN2umXn">(@TT[eY!
%6Alf`(DB?H-n[fd"`kuljo?[W0Hrqo#o]XU#FHT;fY%BWi6utj2Kt_*"B!r8!49huEO#%k8o&6KJ6!&t8m8HAdUKCnZu#%0Zs#.a
%dXnTb(4/KFAQotDd3<'H/_E*uYuan.A*X3'=tiujOfdYQit[Q>D-_Zm$g(&bc.GUFS>).OXUEK(ff^h5NJF2I\[CND\FZ"G.9eiV
%f37eG2Xs;jq&q%gZ(*ou@c%+4%A#(`*/?HZ6#d4*pfDHj@:-_!RFkXoJ=rau'!thfA"M(^-#f4fVaV`UU::?.f)410nq^C`HGk)J
%D+GesU::?.<d8H8m-e_8lr3CW!/VK1-"s]p[Y50)XcI=f]G<c,7<&W;XdDn*p\2'[eoCB/$R!ik\-.dlEq<i_gjOn8&Op^1"Ia1`
%C2jP`Xna[VDt@C`/;(EW!f7]3-"s^',<^"L[63S[nb33KBMi#d<i^@9XL0CqO8cin&hSu6ctKg=dBNF@g#:uH.]S&(hW3jEH^]DE
%>?sqRKBo%JM/ri3a!hZ1;G$QuO$3,K1EQ25:m'["-Bm0>?9XWQ8uEpY<GThuSW.%pb+Vu6AGWt-;r2Jlr@@hlgI[3i#U$Op4?o-O
%%9FZ0;9u4_0W:Y$BY,M3_4$5aWJPrHM^J;ma@Q`FiK7<UY"c)srWI('hXdmBmU[\Mq.2=s/an8T5)4s[A);j-/P+fa\*L=BBISS!
%+SLM`iY"pr`o&Z'Z^s\cP?ESRY]=5*;sLj$ZK#d^fe'W)&Ecm`c`R_gjFc_Fr,HWCjr2XU/FM)>[9X3NSL7\TM!>n_hACfW!d\#_
%V!"a/TX;m'c?$7oe2sh0J\j7)AcK&MhTD-sH(V39r)#@194Rm2U&4S-5ph[7^ugS%mt<XD*I*;]##eLS_qor[7ld>2KPc'<*LQR,
%NDg)MSOG2m(^;XWL(;u'Y=p*Kh#*E`0_d0-SCr5Y4Z-+/eP%3K-$ml3=Q87sk:[1SG)LciUhjEJ^+D_?HT$B8paFneH19TcO263]
%l/8b8+6,2Z*OtQr=+BNkc+3BM1:?54EHs(9eie^A*e>Z(%HXIO/VGA*Co%=6rth0mm.[!p:)LAos.^*.;qdd42.=h#JE@Hf4Ju%b
%6'c<tATtk-Ch?lJTF$#X)&RM60JISmg?PJ^G+:."XsQbE0N$8]Ft5/Wj#ja-@\a_[_f1S'8IKtp_09eO$+4EPc(Srl)Wl/j><T,V
%9)!?W?C#.Tqj\.9)9;;ag-[q#kcCZF=f\7]VBkHZpX+S29W<V&R8VZ8]rjCgJ5k@U;(Cp,0Dd',mMBBOft)6YI3/g1<%N;4O@Tsk
%,kr]MIAnUh\pDp5HP1_T_;&S)A'0"mS^IpbY9Ks?oF'37i0JG^q#m7M2Z`7pRO8m%h6XNtpTjh,`Q\%Lk0]LJ62S;(Bmm?$g`KrD
%BD9&7cMO,n/A=7KICGqRRN!Z6*hO6oeeo=sUeNs6`as;S\^(s4WIn*#HQ'hUkWi?$2P=)"AO'=ok)))rF3jO@4J$6VYU*C'5haAI
%lRppD!2PoprM@A%^12QA\YbhbOV0nt'-Q>!+DGtgcShbOVP0dhOR<+ZW<>enj*]F'XdWWaMa4iWA=X@/nPdJRC*Dsj/V$6I>ZcTR
%eT!e=**Q'l8IHZgb0ce#(Nu=(f)I1'Rf>U=hR*RnE.<iD\OeG>H>mY7bfTT781l2ZO18+Qqp)N_ELtII@9dTm[Q"J!:P3MFrUb2r
%<ELc@S)V3<*1VSgjo@sHK</+*FH[^mhrKO[]\[/`YYs\hpBV3%Z_?FI+Ff1Fq!I/oZ-=r+bmNsbR.*`W.W)pFLSQ37rJglm+2$=A
%M"J56BfQoP3s'dcbl1L-fU$Y?3Gg!+3U?9S=KD_R[YLY^E>R4V^n%/!h[Jg8(dr]qInAtV2Qg;YF."]/>J,&2E7%mg?DZt9MBa5C
%NTEA`fR&s_>R^>eYcuHeI83`sS_&#\/J;?W]Vt2]#DnU9b24Q21/7V?=nSrl\o8="jO,'Ej2bB+Mto'ST?<a,cEU[!`q=bUlqO\[
%>rb+t3^_S;auRM#fh!n?Uh4nTk(DaMW0kn/ZW)67925[s9H/fp-8e/424(,948NY'3Ic'(e"Z!-q[!fk;533i0.+r_7#.9FOV@7$
%;taZej'q<6bujDi!)IcM@a$/hGB/*2mIYuJL@o%l4U)^44Z.tXK0;@G'SC6_/6CkU2:d48.Q8RP3@srK!+D%#0eBgO5_psrjjlI#
%^W>$G#ZZjGoa(5"/DH5ijg\HRYcl(+@`57cOa=rk0fBakAi1(L,A&sEQD7G;#(?4]PG4eoVU`<K@35.5SotrLZNU+LT<t!3>+3DP
%/mZB,>Q("24'$!#JTuMkhe=0h9g0,oSDH/@fc0OPe7m3l[J&5sqo>*]4/(8+Q,FUpq.f9P)eur-FdMMVe5OdZ?)Fjg'$$DoWMb`&
%\P]o?j_=tC=^6QDo;FnCI7sZkMH5X9Bj<683K$P7En6$GpTpp_7pP<k0ssUD@Zm_'52gW8%C@WlcJfJD9`giR"LPg\V1EfHb?8)%
%[Rkpn%c8Xh_W?1nk"rW%3Ya8c5Vt'(;)0`O@^I/U`WQpes(&XF=3NXjF6@L!>Xl39A3Y1K>=QN8YRIqo;F`j6!tlL<8:+^XnMItm
%STik@Dtl1Pp20:.:FI\d";:V;%DQf$IO)A\1HGZrn8%G2?0/L/nW2-3%HoddDtac;ji_#[Va<KL;!L:,eTEL.+I&K$(c6R%d<tbp
%YA;7VkY/A=Xc6b!oP%/BJ]8*:2(,/1lNpc8^#5>`\.]"fe6pY%(#8@>`60G?%_GeX+ORXG$?JPWA):[:;X*1hgS3.@P_m5L;(%aT
%rtl7a_<'nYSKLb+#(oCI@-VdQ/Tu`fjYhUq+/;4u$lX8?q=N"]@Bs9)lhWRSPQ_A)C+s>n]6!l%MK*#BqZ.0iZT_=68$dZ;:igFk
%>;6N&%p4pA#1VuE$FPK1Q<C@N!iqI,1g9I'*cjZP@Zhp"+>)V0+D*i7W"Xh!ZQT0r"kdNRc$l<^.nE^bK(&jXA=mSc`X`dK"C]7p
%8:EgU`b.Q]I\>'V%eX<^DWe(*)mhu\(rUE/>[F1Qar6a'WPJg1%3Y8:]LIlaZXV?t*^EU4,L0=j@9*QO$QZO%#SG.Z.'HLK#0S;M
%Qp.JMA6tMPW)4eG,rO=<W<"8N.^)^M#+L;b)*QITA6tMPkVjmgZ,sGlf@]6?$#0n.X>MW6;*KSk9pX::o:uSPGu7nC7]dO\Bf2Y5
%WJ2!t/#tA)!gA<JffXonA6+rHW)\JlOrA/.e,V6Wb%oM*Oi`b)CnB,V&hfO%W)\Jl6B,e&C'6:Fb%pX=irIbCE=Np,4jHs3r_\_^
%ZUV,pEuH!%/ITG`=ccnle84jd[=ZYN=g$FAX-&T&=u-'uF$d*:Os93>/`S6%B'WNs'861e+<5n8fiLG`%\QWK8/BF$n,X;8GA5RH
%#8HG+@DjE^DErfn@mJ:VT[</Q$=k[,+`6QN3,":KSB8bZ)Dt$mYnaSfr."s%1,Tn*C'C(YZWqPS<bii*[aGM(6Ejp^,!R2%6CAZ!
%)KgY9@MXV=YTQc>#(oCI+B^E,_@K`[-rCY17\(['QitMA8<?ZF#(oC[4%PI7QqhTF5G1s-XO#AugT2J&e=P\i<bqo.*uI<;),RX]
%#h0/]>;gNP&W@X=9VWn0kV+[>XI,jB#HVKa#/oj5!qh/iMN)$8"!blN")@N3JN?)!Yn:f$?j,.q)R]);JU5.E`@M9Z?pWg/TOpD"
%kdRGuZ5)DE2td_$dDdS0F(5E6RR>raMHLMI_1Fq?)@ROlK$BTaY'C8Q23;KUBn\Pj=><C0GE<T69FM,b3^Hk&$c4u-&1CJ06).JB
%XI'1M*@qJ\W/3g8:(UH"K&dpt817Dh6)3<X6-*)cZesCGE.4;LR<mAPo`Ko:'B%N#=V-%tK'Y:dAj9+j'l:>&Em51uNEi@.Osfmh
%'7ps_'_qcD)4ppaqgh))+KUq6i<LpT4p,Qn",0oEZ=4T&+0Zmb9VXLpTMR!A.jdRQ!tmFS")@N3Kmn50+^6Z2L1<H`iGOV6*&qQW
%W&YoZXdB:N#:p.FWPP6)/(e[+jdIEu=p'ViPua7cJeaI`q#P1Ab/@]7W"Xh!ZQT0r"bAEd(c5t2abj44I_^P#M4,8<l3(P7,Y3AL
%JqPm:(c;*FiIu*e3'iT'!9_.#T/f]+ZYgmNF,h6p0[%9?=H5PA0s_N!d)n4-B!LJ$X@;PT=igt2aN;5H8VfKZP`3(.??Q;L3]U:q
%bJF0\Nd[`YZhY!Ub)u(s*3>dofMa9+0n'-a3ERoUOmS@&nWUu:VD#aR:,ZY+`URtbq)BX[d<;$"'1gIi1<5^(Ej0qW"%pc[OJ%kS
%p<-pioNA5G?u:T$jCDZ/,Xdqo8q[g1#UJWp@(@fnb@`i.`!c\R=uilnQ@n;**)J=&JHVM`/=5G=nk"j<@KqAd^H;.N/Ji'GZ/t!K
%3U8!S=``0d"_^Z(A'8FD=?ap5QS`;4I0!N^B"onJ9V8`68Lc5.Ig7tO==soBjcbktP/b\B00glib@N\950L3t1hJXo!EqLh>aC$(
%ZQ+<`AN$D=5UQf[,rr8YOu$FmR+_*8pt_?oA@Ze!*EbQH.*!a]SmqtaRNq(<G)]n9I3T#^WPP6).p-Z@aAqgjC(2HB<a&p,W7`gs
%_>[Sq:aQC!7\*qn?mF;d^^(!QC+s>N$GqOW@.OCD#aD9E6).2Z=YU<$$WrKeV?VZB^H4-3XV`G9Yoho23U8Ko?omTY$8q"sYnaSf
%r."t(B0a^jTMR/kCmjCR,Hr)s9VWn0kV4Ff.jc_9"4Aqg"(Ls+KfVM%0aki/=HIq8eEdDI[=Vr./-nIJ62$^9D>ZYm:(UH"K&d.^
%BRC$6lj!mrmPIA@@N8muIXn3W(r`Isbb.gSQlTBc$c3EV&1CJ06).JbfeU`.7pr_/&oB/$0IHuR-7SKfdNXp4_4XXQ#V0LQp]1a(
%ASNo4e-_?RZQT0r"b@:D0kf&C_MUpHr."nVASNo4oXgk6fnsdh*W#l_WFHW4g+e4Lbt3-Z^UC1WQ/souqge^agN_t[^XO@K"<7[U
%,`?mf*or:oaOoJ),imiQ;G4#gV5)dhm^*9IQh.*?8C^_:;FrI6'dKFI!>5`sU.#,R2.<b$UaqIUC]ssHj_9Ge,-bUM!^?Z;5Z+aV
%i2@e5.n2kq"!eQp7>h;/C-o.6,SWI.6:!mo8DpEi'IsASn,jd9'Ldo_NkTWH,?h?WJ;8RrQe6#EanOV*5@CG$"qRgQ$,mF:&:I#9
%UE;0h',FeA]&F":"tiimJg]'8+VH:0.e!Pu;Ec=Wd17(/#fV[`;#C;"d:Yj(q>ir@+]pH3MB<raqFhL'r.(Jq:okK>_%2&mq2C,!
%5@E\ZQSbEObO'Q<#BI^&U2h+m9&QYZ,7gmn$,mF::f%iX&icltM_-/ZE<Kf&+G_UF1X$De'a#3G!H8'sJjf`2%A?lY&rIbRTqEf;
%,]H]rJe]N(p]2!7$DKff7h).o0bApY!$S!`=sS(ZXW&7rMW*h_n,p3":A[`!.8TgA61kD-@)\#-pjjVWT+TK7#6Zo;fp3@YFp,bg
%/lT]?-WHHZ.TVL-iWmQ$Hq"76*tZp7(+WF=`=EY+qM^5"59QmJ'J!4;`=EY+qFhL'r.(H+YZNUmMB<t7nei%!IR)7=YBNAbQ@&;O
%4619A7-,=MPe^.=],k-1&rLlUTqEf;,]H]r(0a8>iZ6*@5S..kAsa_S.g@Km%c@C&"cEMD)FC]<,S]]46:"JU8DpEn"=lr.nI?fY
%'L[QVNZ(6h@NYgB!(&qJZq0-=>B`<+(!EG#kQc.\MY<Hca.Du,L8q<Kd#*r^qu@&NB1+TQ!CJ_QZ"9^]Ndts(1.<a=6B)j,Z!s@-
%56*=t1Em\7J>%]oX;D8_&!.?N7RX!n0N8^;'dKFI!>;-Q'[b&6(hs>qMLc?:!!nk9LhQD_LAhr)6\b&DLYfup=lb;rn/o08%8f6l
%7O2qPh=;=EjZ)*$q-;O,1Na+uTI@>VTV,^t]5:oTmOd6YmoB)b7EHa)UP<`K)gr-%]\Ts[StILB#b[i&o?Om_S*f(dHi('47hj9p
%&d]O8KMt'D$2MSYRHt*;Ln`rSJ:`O#Fn<1Gh4$JBMH5I,:m<LD3,/_#+2BA?V45N5lCO[FfW6?KJqe.:r]4##>;qQ8MFp96Z:NoP
%-J\O'X56d4;<&5J/b/q"LE@63'JsVPF=FfK:E*sDp&IP',(ZNe!_GAH$*Hc$'[D4:7@nANQR3%eb7V9I<<4GW,8!_3_SMm!E>20;
%,B>75;ccQ-iE)s/5uB4?iR9Ul9b`jmbAH<__?A#5K=X<"_Sf;N<\:eSXB/25`%bH@V8Q>!%ZJ?`b5Hr\!fWEoYET.&&X?:L24Djs
%6kl'j#r5$@F>T,q;)uIW[.ie*"ZK*fKc2g9Y8(4tUsOMH!2@nRNL'PE$G(c>a&.67bUi/ugbfsSdY26Od6qOrBGGQ&W`[UdmU;Z%
%oGG:V\G:>Y:VVogS%5iJ*SQ52g@t<M5"V/il<9tKBTE6+kdFGs&EYLT4mbEY,Q0H"^\)NdXjq@'(PK[k%6A^n3*!`d1S/0L/F)dT
%M$A*D]VsPY[<C-*oO,uW&*Q%_Q%[\'B=BP8UZiaiL&.<\GL^WFeP<M!6diO"GOZ0h.TX!4,1pXIYI;pH!?\oEJ6;T90p:3Qo9&nr
%GF5)c5m.G9K:(,l7rGr(>Y3>Lq')N"0+r<#jpk50c%P)38D&-u&+#TY]T],Rr`udoGP16lJ&GrX,se$<Cbbaq7aLGeg5@FP`-aD:
%/"ihhM67g]MpJq92HQ=t+K@te"-/t3-[.Ho4VW]mAXqcDaZt'J0D3^N!#\*`H5;IB11ecqY</O5Pps&8%21j<1IpQ`$,T`2"WkPH
%#GH"iXQ8qN\S.^d^+o]!a:^`i2SX!eb#K7ceEbm(>sVdeUWZ=miZB/ZpM%0UV-5.\[ktssrF2rhcs`66cjGlX;7T&HZpEQI(m\ik
%)-5JtN<Ct&o<KGr18*i?!Yik%_+c>E!)&QASd:3GOsnLNCdfZE<m"r5Z,HAd.#O>/P,%f\/%M'EZ<edj'LbYIbY]XejPEL7/gmtr
%-n't='UPRc=NSg@P%c/7TI="7DiQ#M-21GTJN3m(6:#U#aX<d(_HP,G#g8Ko3ft+g60/Fm7'Weff527I+dqF?[^'X8MS-KRgDh`&
%EfXKgJ>(:joVB[o&1k<AiStVghM/".?;Z]TfJ,so3JuXpjJqWC1+JOF:>T?4g%8<1kh%/s^W((sacu@)bu@S-1hh]99iZ8=dYXP%
%<d_oGKG^d-H8`An+Ujik!D#UgY[Zg!6,5H>&u'aDg(Qi!p$-Ye:?VF"^1-+V3_I.AOtu[2#k>c2^N+r3\*fOu:j8lYld!AjUCf>O
%iIqK1.V.AgrL"p,Ij5hG9gnfQ[EefQlmptffq&8,1n1@5/5LUo7RlPEn!GZQN9nI5<]T?<j[:]tkJ"h3MAPV_`B=unH.:tF_cD>N
%KiT7L>9TK&5$8$Md?^+u>NJpeeRFfDG#aHeJ6@/XQ/#R)3F:.njY'pi@th(/;2c<,87@8iJXQ`e?Fjba**V^&$NdH<"'2Cp73/r`
%d9=1jopAeIk%q>K4p@c[OA%,!m$!b^hQDh$.3betZt]hV6:rVnN<s<?o#b\M]UloS&$/6>?;Jp(&jB*:HVU>7F>cp/c"Yg`J0k#n
%#si@t^a@QIP2)L&[jL"61;IN!Xi`o0MSQ+0Cs(M$*k/#pCnAu8m]CauY6iS/24ZIo0*c!GAk>/?H1:>S43=dWHa,M3i\YIg'Xn(H
%m/m%6md29!O*7k^l<n*JnT=.?3_$_s?HQ:BGD>KHdi.rea^pa>4[lLO7u%'OlK]o'L[-Eo4,@(PN=Gt']^--SYYf$@#<Z_6K^Ckm
%Zl-O_C:5$,#okgkOafXHLhKbITOr+>P/,J+hr`T>@rqN.DUFWa`KENXY$])n+/ULW2K3SajhF0D5,?IVIBhtknb>@U;!5a[RQcfD
%(LaLeB]3Wj@*m`-V!6#O5ttHW(Hc^Pjjrf^e<TuLg3hHbXC`B`O1P*VfJsTtWuS#h0":W</EDkjO*Nsma,8J7`9X`NWneQC]a5YX
%_j7*fQG?@[E*"&H68s,sREa%i"jnHDURD`tifgp$=`"Z_C3o*O^#XX#"HJ?BdmG72^&T=L+;uME<"hks_@b6L<Eu=Q):^m/;l;Gh
%K*73l"PlEjPeJ7`THG-uE)[K;976VlD7;Z%W9IaC)kBig^ep5%H3f2N(E`hp7"YW&C-lS?>jMN?JW!e6ojbK(2i?j(A=sZ&#5nNW
%5`9#pSme']=qNY^LM_s\B,NQigUqj\J^VmUMLkue4!^&>+<g@e6pk<0C'^LZURrOPPO2dFbrFYeculAb_GQG'H3f2N6QcLG7"YW&
%C-lTjcS:bt[QR<_l/@"`oM&[P.M>DcJIqYZKReYfOMF^f#VCV?i,l&-NldFJ$V/bBh+C)20:2kJ$DKff7l=_GFm'lU/co^R<n;O(
%8(C(m0Zi".P[s:TTCJj':S@t(V`d\f`n\i<OmapkkO`V-3?E57JTQa@iFMSX:fLR05XBYoXtn.B)aZj5Vi*`i+6PUpgU?X>BJ*NU
%9hEjtD$cAR68co>jn2i'[,+D"jmuVLg=p`G[csB2T<0a6pf9!'?G<pX+2T,6F%]2eLN(l>5lN`@_UY,lrc#.ba5dScT*-4aT=N_=
%2&V;LQD7#<R/lXG2T?Ffm_;rF_*sp+D-Dr/mH)*X/].?X>D/84\ER#kQgAf(LJo:;:ZnA8PG)mMe/u*$K\eQNVcmMtIFAfg.MBlZ
%G=*mns83=G%CUBO_^1'!_q;EY%us;h?([Z#=opqMk_jU1Uee?#Zs#VBWDW''9O&O%$_MY_P:@E<N]bQ`@Sg;M]]]4;:t7FfFHJG+
%(KiZ^"E*MuH(8_EjL6+WeXV<cRC8bl.g]9\PaB,VrF.?n3KBdf2C0d(%nPV,ZRW*mhLGNZ\-?0K]#_+gX/u8;S%[r[N`B$=[iBhH
%Y_;\;[\.([$'uR])XipAG.!!6Bj-L%!K%Xl"Ak1_'it_14F]M!I4[ln@o^]obd2Dt(SBB9YL%Aii3s\SdAh`iRC7WTCC+'GQ'\)o
%hU&@:gCMS5<<9pbi-C=qZYJ]WpR],AY.p:"/i'L#\E_m,gNC]Pfsh@'jliaW-*5G""Vk65\C@UM:Vbe$c-#q^Yg1h&"@Wt:#omN2
%`O3S[cef;c?qXSQ(tLa$04\q#pWh$qSP7+#.JToC$0MsR6)@T`/iBZB)uIn4P]+U25#26L!Yhc7#bW<H.&mm5GPZ'am[@nei?N7m
%C^tS4#/dfLH!Ii#2H#"I;/,.j)V^Qi4OZ8HZqA3#2AI"_q]1=86_e<o4q*C`SJVD8<`R=3ZYF0-pRf2UY/-F,Ie^%F=+-V&/n=h=
%03=)F3$/C<h"4B&RKU9"]R%:<_HB*QFlhmJe&XIY)05&OYi-D6RfZ*`lH,:u<I173+opq06m953r7t322:Q_RdAfF>Sm\>fDVq>E
%Zikj$d8pcL=J':8WjS"/Fl@'V(1U8qS0g$1Rm7\T7jN&<=V]Homlu:h>_>aVI:tlf;n$Tu8Q;f+']5J)qu0RL.g_OOLc+/')L'cn
%/*g8S[^!u/ZhES4g6J==5pCi2`2XaEMn^.4'!Asg>PsjgQ.QnuoBPqYC^GoG[nl$n!c%`!NBMcZ8_&4WB\I0QIuE9(n1Vi,B)##l
%)ZJOS7HE8hj`ul<J9puh)WC.=X+Y5K^VUN8;i,e"N=lPK=CS7EGpVF\-rgknVfAV/r[ijhYULFQ^o.B9p/<5UPZefMAc1Y/X`+`X
%?K?g`2^r>c;B9+EZR'5CbH)t:1p<q@^S`Z]/\HQ-b?".0UDKAaN.)I0Z`9h$iK(_prZ\jE\G@*sbt\J(rN5&+fJM:#PL_tLH>?:W
%ES#k+cVY8c/SCIKs7U-+rN[Jo34Fshl&RHFk\0uU$:4Z^L$dUOL"#ACSG(HLE/RfuD]4<&_t+j"!b+f82lq!8b-VYj4-$gTLUcH[
%+8bi\KC]W!48GX&!Z][0V-9abL)N>Z7u_OrnUNfqP7[H(%.fd?lZCuV7W03!D;-1aUE\Ys9CPf%&%dXld!hM-30h3"aQUmCV$fls
%8$dkaN56#p5'd`/^Jm9H9o9(6.fDQ;gE3k:c1)(;d(REkitD@tqmbYRXF6/Cg;;6'jH%s>n0LC^oisDk9tbIL5FAXB&5D%_h6[<F
%g.cNr3(YuT=0moamDCjKo5VM>RU:dI,IA3\(YAI!I"Ym9b,FG5T1nsBm6Lgh$--1C_s#"^Vm*LEhVu"*@0gj=cb9@nZl^o<6OW?,
%D1cnKOClk]FPPCd`h10@JMEps*W'i(GjNQ#bpgb'[$"YI]_5"r[VG=:&Wcp]r9-?eLIh6/?HbL:HDbdUWqYp=I1K@7)EhRl$4?1Y
%XlDRT7aG!T4oA76>b8F&URJ*d\K'#%F*mbn2k"GcN<cg+H_H`U6EOhL3'jeoUiF$hp[IM-34V"tmPN4aIB+5CHqWXgUHIK5jeuT,
%[$#dp>HJaeCW1H&.dc/rj#ss8]h\O]9lj#-_H3Sg;SC\8)EmQFEUU&SRkC5?Xe8;IKdtYq7_d@S_5%CM@AF-0\P,lPk3$U,=`_Z_
%DK**0A#]sLJVo,mreJ%*]i@i0%G__Q2Z%qBBG"Y)_@cH`pC_69>do\keIdh!"@IE=$=W]>d*QXc]^/Wg3*HGu[XIeOFgKoIW(Ak$
%DAX/DOTm9J%&*"`bmqDn1j%]E_02W*('0.Aj["VrZ6McTR(,gj1.Oc"FK"$q,gHe;.2EiWjS!_R%Q:,(4l]$0i)agOkMrof5D>K]
%aA#h_3Zj^@@.Qj*Z?nPhA+bj'5DJn-HV@LhYaVF+[_1;)j+Gm0oOV_+nA_-C7s(>5[8N4.W-N70b"8L&Vm\3"^_JHDm07+#lrDG?
%;U0nkWtPba1MD\^WL$bhASZ(EB<+.]-@NDF>ZiDuo6dRFL-[ZfkSNnbZY5qXo#.euDRHe6<u&rCg/]]EB*4rHc(((IGHKq^Vl;e8
%DJ",H^J^@ao)t[5WN@GLO[>7bP,5]O'B<5b7e;D4XYfWlS#Y,08MNfe=];M\I8qn6Z8K`XGtQ<0>b7^ZlnB`LL/:cARM4.4Q`$d:
%/gZ^9:/XcW'D">Q-`JG$9A-+4fHeM58MNq]H&cY';Dr7Q,fet;0i)n:Q>-\(3b\jGaeW&oc#e5o>(:^`O5p"S[?"B96XbD1H@%9/
%TKEBcTWLjn;!Y/;kBqML3d_,E:-j._mBjm1h_:)B5R?C-TY.LN<c0[G0URB((eaqkQ)1g5P9DKP#m`/Y$"1EYnoiF"`#gE\J7+>(
%J6lGb5fjWp!PGkNJ<D'd!d\^'!@:C["Rt.)!_C=e$0\e9"dCPM'>SCA$RcmY?3#DM\FB(EV[>#qGp2,8)#6QG_Scd0E:Yd%A)n:Z
%*CC*t?64uKN-lfY2_L?sN:A>&4"O"<3tF8\P&E6F&W`)VjI;-27)S'hq.:ienM#5W^=`c]1eqA=D`31ZO-<Z+RuM)L"6D'/jt#c?
%itTe]`"P:$U-'u8H^6Yt##JQ@&.'>i4P)tj=daf[aiXa:0LLNV3Jto\iik0=P$qo':m`AW"HKMC!WPGd-:"l<9E5>37!P;uQos;b
%Js?Wr!*GWh']t/nJYO]?^jhH2$'6\g'*,oI&>&&5-4bpMaok7iPmK]aH3b-CH?&L@biR5//Sat&P.;1]WOY-[VT#[/=u&%S411DF
%e$c4.1K3F:Gc19+B\F4\HYU^Y%e%nT*_k[hG0aumS)Lbb5ooXUZQBNI\KZU"f8g*Npjk;MGabB]8LD@4P:Q,NJYQtC>W_\$/+APG
%O+e"[p9>A-o+7b=\]VCR>Cf!L;/2W%?2M_YpsTL[`js7"T3Hk2O&0S]X%0NE=5_C,eCESam1%&8kUMCu1iZI^@<^uE:TbfsZ<um,
%GNoU_XWX,\[!EFiS`.[*K_(.'O5dQ+4L]o]QI2-u]_7(-<tNYU>!7bpmdT!=_J)Ws*6#f1W65ggOm0QI`HAJ*-0fT2iHr=XEIbNJ
%*%0m(6hsg=^L4JVn6HK"E<cdi<?!ZQ*qe*Ba0=;_?3c3k%&b2.H9+am`09Kjm[.>V<ZV(aES2:-^,XA7;sF^d[dn.3b8V="pn0F;
%2iXQ+705tJ_Yk$$&(C#Y/6@6K&icn$3N8jDjX+8Ac-&gp*csu/enC8pCd,e)*hLX!N-QZT*7]`(X+>6T`4X*N=5MmXo%VD:heo]t
%foe2f(qIR^/pqFMY:s:CO'KOoG9..Z+7Io2V*6O\%H+1"Ch*KE2/ARl5;\-MgF_aH`sX93)7ReOP&EjRSo854nlIhdl[UKIF2m\M
%?qP[\:4OD5RmteN6iokI_P-FDg6['XmQS2V]uMnSI;F<+\1ldAZ'<p/<r7R9X?JDCq:pPVAjimE]ZmO-6uK.#GCT;VmN:<bi.9ec
%ao1W(TDj<:r4aml^\c:Yhu;a/O'hn_p%(EJp#YKu^\dPfci<h3l17\8rVZ!E?bcNns3mkf^OH"?f:Tg,q=MipIf=7N_F*F9Dnl8M
%c[YlTGQ.o/+Pb-~>
%AI9_PrivateDataEnd
